import "std/concurrency" as { all }

// https://adventofcode.com/2023/day/1

// take first and last digit on line, concat into two-digit number
// and sum all numbers in document
document := "
  1abc2\
  pqr3stu8vwx\
  a1b2c3d4e5f\
  treb7uchet\
"

lines := channel "lines"

async {
  for mut line in document.split("\n") {
    line = line.replace "\\s+" ""
    if line != "" do lines <- line
  }

  close lines
}

numbers := channel "numbers"
mut line_count := 0
mut line_handled_count := 0
mut lines_done := false
inc := fn do line_handled_count++

async loop {
  mut line, status := <-?lines
  if status == :closed {
    lines_done = true
    break()
  }
  if status == :empty do continue()
  line_count++
  
  async {
    mut first_digit := false
    mut last_digit := 0

    while line != "" {
      if line.char_at(0).match("\\d") {
        digit := number(line.char_at(0))
        if !first_digit {
          numbers <- digit * 10
          first_digit = true
        }
        last_digit = digit
      }

      line = line.slice(1,)
    }

    numbers <- last_digit
    inc()

    if line_count == line_handled_count and lines_done {
      close numbers
    }
  }
};

mut sum := 0

while true {
  number, status := <-?numbers
  if status == :closed do break()
  if status == :empty do continue()
  sum += number
}

sum