// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`data structures compilation > atom (global symbol) > compiled 1`] = `
"@const_15 = constant i64 0
@const_21 = constant [7 x i8] c"atom_a\\00"
@symbols_metadata_array = constant [1 x { i8* }] [{ i8* } { i8* @const_21 }]
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_4 = alloca {  }
    %var_5 = load {  }, ptr %var_4
    store {  } %var_5, ptr %var_4
    %var_11 = alloca { void (i64*, {  }, i64)*, {  } }
    %var_12 = load { void (i64*, {  }, i64)*, {  } }, ptr %var_11
    %var_13 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_12, void (i64*, {  }, i64)* @print_symbol_wrap, 0
    %var_14 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_13, {  } %var_5, 1
    store { void (i64*, {  }, i64)*, {  } } %var_14, ptr %var_11
    %var_16 = load i64, ptr @const_15
    %var_17 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_14, 0
    %var_18 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_14, 1
    %var_19 = alloca i64
    call void %var_17(i64* %var_19, {  } %var_18, i64 %var_16)
    %var_20 = load i64, ptr %var_19
    ret i32 0
}
declare i64 @print_symbol(i64)
define void @print_symbol_wrap(ptr sret(i64) %var_6, {  } %var_7, i64 %var_8) {
  entry9: 
    %var_10 = call i64 @print_symbol(i64 %var_8)
    store i64 %var_10, ptr %var_6
    ret void
}
"
`;

exports[`data structures compilation > atom (global symbol) > stderr 1`] = `[]`;

exports[`data structures compilation > atom (global symbol) > stdout 1`] = `
[
  "Symbol(atom_a)
",
]
`;

exports[`data structures compilation > boolean false > compiled 1`] = `
"@const_15 = constant i1 0
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_4 = alloca {  }
    %var_5 = load {  }, ptr %var_4
    store {  } %var_5, ptr %var_4
    %var_11 = alloca { void (i1*, {  }, i1)*, {  } }
    %var_12 = load { void (i1*, {  }, i1)*, {  } }, ptr %var_11
    %var_13 = insertvalue { void (i1*, {  }, i1)*, {  } } %var_12, void (i1*, {  }, i1)* @print_bool_wrap, 0
    %var_14 = insertvalue { void (i1*, {  }, i1)*, {  } } %var_13, {  } %var_5, 1
    store { void (i1*, {  }, i1)*, {  } } %var_14, ptr %var_11
    %var_16 = load i1, ptr @const_15
    %var_17 = extractvalue { void (i1*, {  }, i1)*, {  } } %var_14, 0
    %var_18 = extractvalue { void (i1*, {  }, i1)*, {  } } %var_14, 1
    %var_19 = alloca i1
    call void %var_17(i1* %var_19, {  } %var_18, i1 %var_16)
    %var_20 = load i1, ptr %var_19
    ret i32 0
}
declare i1 @print_bool(i1)
define void @print_bool_wrap(ptr sret(i1) %var_6, {  } %var_7, i1 %var_8) {
  entry9: 
    %var_10 = call i1 @print_bool(i1 %var_8)
    store i1 %var_10, ptr %var_6
    ret void
}
"
`;

exports[`data structures compilation > boolean false > stderr 1`] = `[]`;

exports[`data structures compilation > boolean false > stdout 1`] = `
[
  "false
",
]
`;

exports[`data structures compilation > boolean true > compiled 1`] = `
"@const_15 = constant i1 1
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_4 = alloca {  }
    %var_5 = load {  }, ptr %var_4
    store {  } %var_5, ptr %var_4
    %var_11 = alloca { void (i1*, {  }, i1)*, {  } }
    %var_12 = load { void (i1*, {  }, i1)*, {  } }, ptr %var_11
    %var_13 = insertvalue { void (i1*, {  }, i1)*, {  } } %var_12, void (i1*, {  }, i1)* @print_bool_wrap, 0
    %var_14 = insertvalue { void (i1*, {  }, i1)*, {  } } %var_13, {  } %var_5, 1
    store { void (i1*, {  }, i1)*, {  } } %var_14, ptr %var_11
    %var_16 = load i1, ptr @const_15
    %var_17 = extractvalue { void (i1*, {  }, i1)*, {  } } %var_14, 0
    %var_18 = extractvalue { void (i1*, {  }, i1)*, {  } } %var_14, 1
    %var_19 = alloca i1
    call void %var_17(i1* %var_19, {  } %var_18, i1 %var_16)
    %var_20 = load i1, ptr %var_19
    ret i32 0
}
declare i1 @print_bool(i1)
define void @print_bool_wrap(ptr sret(i1) %var_6, {  } %var_7, i1 %var_8) {
  entry9: 
    %var_10 = call i1 @print_bool(i1 %var_8)
    store i1 %var_10, ptr %var_6
    ret void
}
"
`;

exports[`data structures compilation > boolean true > stderr 1`] = `[]`;

exports[`data structures compilation > boolean true > stdout 1`] = `
[
  "true
",
]
`;

exports[`data structures compilation > symbol > compiled 1`] = `
"@const_15 = constant i64 0
@const_21 = constant [10 x i8] c"symbol_ab\\00"
@symbols_metadata_array = constant [1 x { i8* }] [{ i8* } { i8* @const_21 }]
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_4 = alloca {  }
    %var_5 = load {  }, ptr %var_4
    store {  } %var_5, ptr %var_4
    %var_11 = alloca { void (i64*, {  }, i64)*, {  } }
    %var_12 = load { void (i64*, {  }, i64)*, {  } }, ptr %var_11
    %var_13 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_12, void (i64*, {  }, i64)* @print_symbol_wrap, 0
    %var_14 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_13, {  } %var_5, 1
    store { void (i64*, {  }, i64)*, {  } } %var_14, ptr %var_11
    %var_16 = load i64, ptr @const_15
    %var_17 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_14, 0
    %var_18 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_14, 1
    %var_19 = alloca i64
    call void %var_17(i64* %var_19, {  } %var_18, i64 %var_16)
    %var_20 = load i64, ptr %var_19
    ret i32 0
}
declare i64 @print_symbol(i64)
define void @print_symbol_wrap(ptr sret(i64) %var_6, {  } %var_7, i64 %var_8) {
  entry9: 
    %var_10 = call i64 @print_symbol(i64 %var_8)
    store i64 %var_10, ptr %var_6
    ret void
}
"
`;

exports[`data structures compilation > symbol > stderr 1`] = `[]`;

exports[`data structures compilation > symbol > stdout 1`] = `
[
  "Symbol(symbol_ab)
",
]
`;

exports[`data structures compilation > tuple > compiled 1`] = `
"@const_14 = constant [7 x i8] c"Tuple(\\00"
@const_15 = constant [3 x i8] c"%s\\00"
@const_31 = constant [3 x i8] c", \\00"
@const_47 = constant [2 x i8] c")\\00"
@const_52 = constant i32 1
@const_57 = constant [3 x i8] c"ab\\00"
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_8 = alloca {  }
    %var_9 = load {  }, ptr %var_8
    store {  } %var_9, ptr %var_8
    %var_48 = alloca { void ({ i32, i8* }*, {  }, { i32, i8* })*, {  } }
    %var_49 = load { void ({ i32, i8* }*, {  }, { i32, i8* })*, {  } }, ptr %var_48
    %var_50 = insertvalue { void ({ i32, i8* }*, {  }, { i32, i8* })*, {  } } %var_49, void ({ i32, i8* }*, {  }, { i32, i8* })* @print_tuple_7, 0
    %var_51 = insertvalue { void ({ i32, i8* }*, {  }, { i32, i8* })*, {  } } %var_50, {  } %var_9, 1
    store { void ({ i32, i8* }*, {  }, { i32, i8* })*, {  } } %var_51, ptr %var_48
    %var_53 = load i32, ptr @const_52
    %var_54 = alloca { i32 }
    %var_55 = load { i32 }, ptr %var_54
    %var_56 = insertvalue { i32 } %var_55, i32 %var_53, 0
    store { i32 } %var_56, ptr %var_54
    %var_58 = extractvalue { i32 } %var_56, 0
    %var_59 = alloca { i32, [3 x i8]* }
    %var_60 = load { i32, [3 x i8]* }, ptr %var_59
    %var_61 = insertvalue { i32, [3 x i8]* } %var_60, i32 %var_58, 0
    %var_62 = insertvalue { i32, [3 x i8]* } %var_61, [3 x i8]* @const_57, 1
    store { i32, [3 x i8]* } %var_62, ptr %var_59
    %var_63 = extractvalue { void ({ i32, i8* }*, {  }, { i32, i8* })*, {  } } %var_51, 0
    %var_64 = extractvalue { void ({ i32, i8* }*, {  }, { i32, i8* })*, {  } } %var_51, 1
    %var_65 = alloca { i32, i8* }
    call void %var_63({ i32, i8* }* %var_65, {  } %var_64, { i32, i8* } %var_62)
    %var_66 = load { i32, i8* }, ptr %var_65
    ret i32 0
}
define void @print_tuple_7(ptr sret({ i32, i8* }) %var_10, {  } %var_11, { i32, i8* } %var_12) {
  entry13: 
    call void @printf(i8* @const_15, [7 x i8]* @const_14)
    %var_16 = extractvalue { i32, i8* } %var_12, 0
    %var_17 = alloca {  }
    %var_18 = load {  }, ptr %var_17
    store {  } %var_18, ptr %var_17
    %var_23 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_24 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_23
    %var_25 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_24, void (i32*, {  }, i32)* @print_int_wrap, 0
    %var_26 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_25, {  } %var_18, 1
    store { void (i32*, {  }, i32)*, {  } } %var_26, ptr %var_23
    %var_27 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_26, 0
    %var_28 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_26, 1
    %var_29 = alloca i32
    call void %var_27(i32* %var_29, {  } %var_28, i32 %var_16)
    %var_30 = load i32, ptr %var_29
    call void @printf(i8* @const_15, [3 x i8]* @const_31)
    %var_32 = extractvalue { i32, i8* } %var_12, 1
    %var_33 = alloca {  }
    %var_34 = load {  }, ptr %var_33
    store {  } %var_34, ptr %var_33
    %var_39 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_40 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_39
    %var_41 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_40, void (i8**, {  }, i8*)* @print_string_wrap, 0
    %var_42 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_41, {  } %var_34, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_42, ptr %var_39
    %var_43 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_42, 0
    %var_44 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_42, 1
    %var_45 = alloca i8*
    call void %var_43(i8** %var_45, {  } %var_44, i8* %var_32)
    %var_46 = load i8*, ptr %var_45
    call void @printf(i8* @const_15, [2 x i8]* @const_47)
    store { i32, i8* } %var_12, ptr %var_10
    ret void
}
declare i32 @printf(i8*, ...)
declare void @print_int(i32)
define void @print_int_wrap(ptr sret(i32) %var_19, {  } %var_20, i32 %var_21) {
  entry22: 
    call void @print_int(i32 %var_21)
    store i32 %var_21, ptr %var_19
    ret void
}
declare void @print_string(i8*)
define void @print_string_wrap(ptr sret(i8*) %var_35, {  } %var_36, i8* %var_37) {
  entry38: 
    call void @print_string(i8* %var_37)
    store i8* %var_37, ptr %var_35
    ret void
}
"
`;

exports[`data structures compilation > tuple > stderr 1`] = `[]`;

exports[`data structures compilation > tuple > stdout 1`] = `
[
  "Tuple(1, ab)",
]
`;

exports[`data structures compilation > unit > compiled 1`] = `
"@const_15 = constant i64 0
@const_21 = constant [5 x i8] c"unit\\00"
@symbols_metadata_array = constant [1 x { i8* }] [{ i8* } { i8* @const_21 }]
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_4 = alloca {  }
    %var_5 = load {  }, ptr %var_4
    store {  } %var_5, ptr %var_4
    %var_11 = alloca { void (i64*, {  }, i64)*, {  } }
    %var_12 = load { void (i64*, {  }, i64)*, {  } }, ptr %var_11
    %var_13 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_12, void (i64*, {  }, i64)* @print_symbol_wrap, 0
    %var_14 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_13, {  } %var_5, 1
    store { void (i64*, {  }, i64)*, {  } } %var_14, ptr %var_11
    %var_16 = load i64, ptr @const_15
    %var_17 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_14, 0
    %var_18 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_14, 1
    %var_19 = alloca i64
    call void %var_17(i64* %var_19, {  } %var_18, i64 %var_16)
    %var_20 = load i64, ptr %var_19
    ret i32 0
}
declare i64 @print_symbol(i64)
define void @print_symbol_wrap(ptr sret(i64) %var_6, {  } %var_7, i64 %var_8) {
  entry9: 
    %var_10 = call i64 @print_symbol(i64 %var_8)
    store i64 %var_10, ptr %var_6
    ret void
}
"
`;

exports[`data structures compilation > unit > stderr 1`] = `[]`;

exports[`data structures compilation > unit > stdout 1`] = `
[
  "Symbol(unit)
",
]
`;

exports[`generic print > compiled 1`] = `
"@const_102 = constant [4 x i8] c"fn[\\00"
@const_103 = constant [3 x i8] c"%s\\00"
@const_104 = constant [2 x i8] c"]\\00"
@const_149 = constant [2 x i8] c"
\\00"
@const_220 = constant i32 1
@const_315 = constant [7 x i8] c"tuple(\\00"
@const_342 = constant [3 x i8] c", \\00"
@const_369 = constant [2 x i8] c")\\00"
@const_378 = constant [3 x i8] c"ab\\00"
@const_489 = constant float 1.25
@const_595 = constant i1 1
@const_647 = constant i1 0
@const_703 = constant i64 0
@const_755 = constant i64 1
@const_807 = constant i64 2
@const_813 = constant [5 x i8] c"unit\\00"
@const_814 = constant [12 x i8] c"atom_atom_a\\00"
@const_815 = constant [16 x i8] c"symbol_symbol_a\\00"
@symbols_metadata_array = constant [3 x { i8* }] [{ i8* } { i8* @const_813 }, { i8* } { i8* @const_814 }, { i8* } { i8* @const_815 }]
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_95 = alloca {  }
    %var_96 = load {  }, ptr %var_95
    store {  } %var_96, ptr %var_95
    %var_105 = alloca { void ({ void (i32*, {  }, i32)*, {  } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } }
    %var_106 = load { void ({ void (i32*, {  }, i32)*, {  } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } }, ptr %var_105
    %var_107 = insertvalue { void ({ void (i32*, {  }, i32)*, {  } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_106, void ({ void (i32*, {  }, i32)*, {  } }*, {  }, { void (i32*, {  }, i32)*, {  } })* @print_94, 0
    %var_108 = insertvalue { void ({ void (i32*, {  }, i32)*, {  } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_107, {  } %var_96, 1
    store { void ({ void (i32*, {  }, i32)*, {  } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_108, ptr %var_105
    %var_110 = alloca {  }
    %var_111 = load {  }, ptr %var_110
    store {  } %var_111, ptr %var_110
    %var_116 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_117 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_116
    %var_118 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_117, void (i32*, {  }, i32)* @fn_109, 0
    %var_119 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_118, {  } %var_111, 1
    store { void (i32*, {  }, i32)*, {  } } %var_119, ptr %var_116
    %var_120 = extractvalue { void ({ void (i32*, {  }, i32)*, {  } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_108, 0
    %var_121 = extractvalue { void ({ void (i32*, {  }, i32)*, {  } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_108, 1
    %var_122 = alloca { void (i32*, {  }, i32)*, {  } }
    call void %var_120({ void (i32*, {  }, i32)*, {  } }* %var_122, {  } %var_121, { void (i32*, {  }, i32)*, {  } } %var_119)
    %var_123 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_122
    %var_125 = alloca {  }
    %var_126 = load {  }, ptr %var_125
    store {  } %var_126, ptr %var_125
    %var_145 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_146 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_145
    %var_147 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_146, void (i8**, {  }, i8*)* @print_124, 0
    %var_148 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_147, {  } %var_126, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_148, ptr %var_145
    %var_150 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_148, 0
    %var_151 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_148, 1
    %var_152 = alloca i8*
    call void %var_150(i8** %var_152, {  } %var_151, i8* @const_149)
    %var_153 = load i8*, ptr %var_152
    %var_155 = alloca {  }
    %var_156 = load {  }, ptr %var_155
    store {  } %var_156, ptr %var_155
    %var_192 = alloca { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, { void (i32*, { i32 }, i32)*, { i32 } })*, {  } }
    %var_193 = load { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, { void (i32*, { i32 }, i32)*, { i32 } })*, {  } }, ptr %var_192
    %var_194 = insertvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, { void (i32*, { i32 }, i32)*, { i32 } })*, {  } } %var_193, void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, { void (i32*, { i32 }, i32)*, { i32 } })* @print_154, 0
    %var_195 = insertvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, { void (i32*, { i32 }, i32)*, { i32 } })*, {  } } %var_194, {  } %var_156, 1
    store { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, { void (i32*, { i32 }, i32)*, { i32 } })*, {  } } %var_195, ptr %var_192
    %var_197 = alloca {  }
    %var_198 = load {  }, ptr %var_197
    store {  } %var_198, ptr %var_197
    %var_216 = alloca { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } }
    %var_217 = load { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } }, ptr %var_216
    %var_218 = insertvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_217, void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)* @fn_196, 0
    %var_219 = insertvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_218, {  } %var_198, 1
    store { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_219, ptr %var_216
    %var_221 = load i32, ptr @const_220
    %var_222 = extractvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_219, 0
    %var_223 = extractvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_219, 1
    %var_224 = alloca { void (i32*, { i32 }, i32)*, { i32 } }
    call void %var_222({ void (i32*, { i32 }, i32)*, { i32 } }* %var_224, {  } %var_223, i32 %var_221)
    %var_225 = load { void (i32*, { i32 }, i32)*, { i32 } }, ptr %var_224
    %var_226 = extractvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, { void (i32*, { i32 }, i32)*, { i32 } })*, {  } } %var_195, 0
    %var_227 = extractvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, { void (i32*, { i32 }, i32)*, { i32 } })*, {  } } %var_195, 1
    %var_228 = alloca { void (i32*, { i32 }, i32)*, { i32 } }
    call void %var_226({ void (i32*, { i32 }, i32)*, { i32 } }* %var_228, {  } %var_227, { void (i32*, { i32 }, i32)*, { i32 } } %var_225)
    %var_229 = load { void (i32*, { i32 }, i32)*, { i32 } }, ptr %var_228
    %var_231 = alloca {  }
    %var_232 = load {  }, ptr %var_231
    store {  } %var_232, ptr %var_231
    %var_247 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_248 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_247
    %var_249 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_248, void (i8**, {  }, i8*)* @print_230, 0
    %var_250 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_249, {  } %var_232, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_250, ptr %var_247
    %var_251 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_250, 0
    %var_252 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_250, 1
    %var_253 = alloca i8*
    call void %var_251(i8** %var_253, {  } %var_252, i8* @const_149)
    %var_254 = load i8*, ptr %var_253
    %var_256 = alloca {  }
    %var_257 = load {  }, ptr %var_256
    store {  } %var_257, ptr %var_256
    %var_263 = alloca { void ({ void (i32*, {  }, i32, i32)*, {  } }*, {  }, { void (i32*, {  }, i32, i32)*, {  } })*, {  } }
    %var_264 = load { void ({ void (i32*, {  }, i32, i32)*, {  } }*, {  }, { void (i32*, {  }, i32, i32)*, {  } })*, {  } }, ptr %var_263
    %var_265 = insertvalue { void ({ void (i32*, {  }, i32, i32)*, {  } }*, {  }, { void (i32*, {  }, i32, i32)*, {  } })*, {  } } %var_264, void ({ void (i32*, {  }, i32, i32)*, {  } }*, {  }, { void (i32*, {  }, i32, i32)*, {  } })* @print_255, 0
    %var_266 = insertvalue { void ({ void (i32*, {  }, i32, i32)*, {  } }*, {  }, { void (i32*, {  }, i32, i32)*, {  } })*, {  } } %var_265, {  } %var_257, 1
    store { void ({ void (i32*, {  }, i32, i32)*, {  } }*, {  }, { void (i32*, {  }, i32, i32)*, {  } })*, {  } } %var_266, ptr %var_263
    %var_268 = alloca {  }
    %var_269 = load {  }, ptr %var_268
    store {  } %var_269, ptr %var_268
    %var_275 = alloca { void (i32*, {  }, i32, i32)*, {  } }
    %var_276 = load { void (i32*, {  }, i32, i32)*, {  } }, ptr %var_275
    %var_277 = insertvalue { void (i32*, {  }, i32, i32)*, {  } } %var_276, void (i32*, {  }, i32, i32)* @fn_267, 0
    %var_278 = insertvalue { void (i32*, {  }, i32, i32)*, {  } } %var_277, {  } %var_269, 1
    store { void (i32*, {  }, i32, i32)*, {  } } %var_278, ptr %var_275
    %var_279 = extractvalue { void ({ void (i32*, {  }, i32, i32)*, {  } }*, {  }, { void (i32*, {  }, i32, i32)*, {  } })*, {  } } %var_266, 0
    %var_280 = extractvalue { void ({ void (i32*, {  }, i32, i32)*, {  } }*, {  }, { void (i32*, {  }, i32, i32)*, {  } })*, {  } } %var_266, 1
    %var_281 = alloca { void (i32*, {  }, i32, i32)*, {  } }
    call void %var_279({ void (i32*, {  }, i32, i32)*, {  } }* %var_281, {  } %var_280, { void (i32*, {  }, i32, i32)*, {  } } %var_278)
    %var_282 = load { void (i32*, {  }, i32, i32)*, {  } }, ptr %var_281
    %var_284 = alloca {  }
    %var_285 = load {  }, ptr %var_284
    store {  } %var_285, ptr %var_284
    %var_300 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_301 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_300
    %var_302 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_301, void (i8**, {  }, i8*)* @print_283, 0
    %var_303 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_302, {  } %var_285, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_303, ptr %var_300
    %var_304 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_303, 0
    %var_305 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_303, 1
    %var_306 = alloca i8*
    call void %var_304(i8** %var_306, {  } %var_305, i8* @const_149)
    %var_307 = load i8*, ptr %var_306
    %var_309 = alloca {  }
    %var_310 = load {  }, ptr %var_309
    store {  } %var_310, ptr %var_309
    %var_370 = alloca { void ({ i32, i8* }*, {  }, { i32, i8* })*, {  } }
    %var_371 = load { void ({ i32, i8* }*, {  }, { i32, i8* })*, {  } }, ptr %var_370
    %var_372 = insertvalue { void ({ i32, i8* }*, {  }, { i32, i8* })*, {  } } %var_371, void ({ i32, i8* }*, {  }, { i32, i8* })* @print_308, 0
    %var_373 = insertvalue { void ({ i32, i8* }*, {  }, { i32, i8* })*, {  } } %var_372, {  } %var_310, 1
    store { void ({ i32, i8* }*, {  }, { i32, i8* })*, {  } } %var_373, ptr %var_370
    %var_374 = load i32, ptr @const_220
    %var_375 = alloca { i32 }
    %var_376 = load { i32 }, ptr %var_375
    %var_377 = insertvalue { i32 } %var_376, i32 %var_374, 0
    store { i32 } %var_377, ptr %var_375
    %var_379 = extractvalue { i32 } %var_377, 0
    %var_380 = alloca { i32, [3 x i8]* }
    %var_381 = load { i32, [3 x i8]* }, ptr %var_380
    %var_382 = insertvalue { i32, [3 x i8]* } %var_381, i32 %var_379, 0
    %var_383 = insertvalue { i32, [3 x i8]* } %var_382, [3 x i8]* @const_378, 1
    store { i32, [3 x i8]* } %var_383, ptr %var_380
    %var_384 = extractvalue { void ({ i32, i8* }*, {  }, { i32, i8* })*, {  } } %var_373, 0
    %var_385 = extractvalue { void ({ i32, i8* }*, {  }, { i32, i8* })*, {  } } %var_373, 1
    %var_386 = alloca { i32, i8* }
    call void %var_384({ i32, i8* }* %var_386, {  } %var_385, { i32, i8* } %var_383)
    %var_387 = load { i32, i8* }, ptr %var_386
    %var_389 = alloca {  }
    %var_390 = load {  }, ptr %var_389
    store {  } %var_390, ptr %var_389
    %var_405 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_406 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_405
    %var_407 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_406, void (i8**, {  }, i8*)* @print_388, 0
    %var_408 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_407, {  } %var_390, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_408, ptr %var_405
    %var_409 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_408, 0
    %var_410 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_408, 1
    %var_411 = alloca i8*
    call void %var_409(i8** %var_411, {  } %var_410, i8* @const_149)
    %var_412 = load i8*, ptr %var_411
    %var_414 = alloca {  }
    %var_415 = load {  }, ptr %var_414
    store {  } %var_415, ptr %var_414
    %var_430 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_431 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_430
    %var_432 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_431, void (i32*, {  }, i32)* @print_413, 0
    %var_433 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_432, {  } %var_415, 1
    store { void (i32*, {  }, i32)*, {  } } %var_433, ptr %var_430
    %var_434 = load i32, ptr @const_220
    %var_435 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_433, 0
    %var_436 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_433, 1
    %var_437 = alloca i32
    call void %var_435(i32* %var_437, {  } %var_436, i32 %var_434)
    %var_438 = load i32, ptr %var_437
    %var_440 = alloca {  }
    %var_441 = load {  }, ptr %var_440
    store {  } %var_441, ptr %var_440
    %var_456 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_457 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_456
    %var_458 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_457, void (i8**, {  }, i8*)* @print_439, 0
    %var_459 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_458, {  } %var_441, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_459, ptr %var_456
    %var_460 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_459, 0
    %var_461 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_459, 1
    %var_462 = alloca i8*
    call void %var_460(i8** %var_462, {  } %var_461, i8* @const_149)
    %var_463 = load i8*, ptr %var_462
    %var_465 = alloca {  }
    %var_466 = load {  }, ptr %var_465
    store {  } %var_466, ptr %var_465
    %var_485 = alloca { void (float*, {  }, float)*, {  } }
    %var_486 = load { void (float*, {  }, float)*, {  } }, ptr %var_485
    %var_487 = insertvalue { void (float*, {  }, float)*, {  } } %var_486, void (float*, {  }, float)* @print_464, 0
    %var_488 = insertvalue { void (float*, {  }, float)*, {  } } %var_487, {  } %var_466, 1
    store { void (float*, {  }, float)*, {  } } %var_488, ptr %var_485
    %var_490 = load float, ptr @const_489
    %var_491 = extractvalue { void (float*, {  }, float)*, {  } } %var_488, 0
    %var_492 = extractvalue { void (float*, {  }, float)*, {  } } %var_488, 1
    %var_493 = alloca float
    call void %var_491(float* %var_493, {  } %var_492, float %var_490)
    %var_494 = load float, ptr %var_493
    %var_496 = alloca {  }
    %var_497 = load {  }, ptr %var_496
    store {  } %var_497, ptr %var_496
    %var_512 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_513 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_512
    %var_514 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_513, void (i8**, {  }, i8*)* @print_495, 0
    %var_515 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_514, {  } %var_497, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_515, ptr %var_512
    %var_516 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_515, 0
    %var_517 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_515, 1
    %var_518 = alloca i8*
    call void %var_516(i8** %var_518, {  } %var_517, i8* @const_149)
    %var_519 = load i8*, ptr %var_518
    %var_521 = alloca {  }
    %var_522 = load {  }, ptr %var_521
    store {  } %var_522, ptr %var_521
    %var_537 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_538 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_537
    %var_539 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_538, void (i8**, {  }, i8*)* @print_520, 0
    %var_540 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_539, {  } %var_522, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_540, ptr %var_537
    %var_541 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_540, 0
    %var_542 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_540, 1
    %var_543 = alloca i8*
    call void %var_541(i8** %var_543, {  } %var_542, i8* @const_378)
    %var_544 = load i8*, ptr %var_543
    %var_546 = alloca {  }
    %var_547 = load {  }, ptr %var_546
    store {  } %var_547, ptr %var_546
    %var_562 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_563 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_562
    %var_564 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_563, void (i8**, {  }, i8*)* @print_545, 0
    %var_565 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_564, {  } %var_547, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_565, ptr %var_562
    %var_566 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_565, 0
    %var_567 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_565, 1
    %var_568 = alloca i8*
    call void %var_566(i8** %var_568, {  } %var_567, i8* @const_149)
    %var_569 = load i8*, ptr %var_568
    %var_571 = alloca {  }
    %var_572 = load {  }, ptr %var_571
    store {  } %var_572, ptr %var_571
    %var_591 = alloca { void (i1*, {  }, i1)*, {  } }
    %var_592 = load { void (i1*, {  }, i1)*, {  } }, ptr %var_591
    %var_593 = insertvalue { void (i1*, {  }, i1)*, {  } } %var_592, void (i1*, {  }, i1)* @print_570, 0
    %var_594 = insertvalue { void (i1*, {  }, i1)*, {  } } %var_593, {  } %var_572, 1
    store { void (i1*, {  }, i1)*, {  } } %var_594, ptr %var_591
    %var_596 = load i1, ptr @const_595
    %var_597 = extractvalue { void (i1*, {  }, i1)*, {  } } %var_594, 0
    %var_598 = extractvalue { void (i1*, {  }, i1)*, {  } } %var_594, 1
    %var_599 = alloca i1
    call void %var_597(i1* %var_599, {  } %var_598, i1 %var_596)
    %var_600 = load i1, ptr %var_599
    %var_602 = alloca {  }
    %var_603 = load {  }, ptr %var_602
    store {  } %var_603, ptr %var_602
    %var_618 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_619 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_618
    %var_620 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_619, void (i8**, {  }, i8*)* @print_601, 0
    %var_621 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_620, {  } %var_603, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_621, ptr %var_618
    %var_622 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_621, 0
    %var_623 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_621, 1
    %var_624 = alloca i8*
    call void %var_622(i8** %var_624, {  } %var_623, i8* @const_149)
    %var_625 = load i8*, ptr %var_624
    %var_627 = alloca {  }
    %var_628 = load {  }, ptr %var_627
    store {  } %var_628, ptr %var_627
    %var_643 = alloca { void (i1*, {  }, i1)*, {  } }
    %var_644 = load { void (i1*, {  }, i1)*, {  } }, ptr %var_643
    %var_645 = insertvalue { void (i1*, {  }, i1)*, {  } } %var_644, void (i1*, {  }, i1)* @print_626, 0
    %var_646 = insertvalue { void (i1*, {  }, i1)*, {  } } %var_645, {  } %var_628, 1
    store { void (i1*, {  }, i1)*, {  } } %var_646, ptr %var_643
    %var_648 = load i1, ptr @const_647
    %var_649 = extractvalue { void (i1*, {  }, i1)*, {  } } %var_646, 0
    %var_650 = extractvalue { void (i1*, {  }, i1)*, {  } } %var_646, 1
    %var_651 = alloca i1
    call void %var_649(i1* %var_651, {  } %var_650, i1 %var_648)
    %var_652 = load i1, ptr %var_651
    %var_654 = alloca {  }
    %var_655 = load {  }, ptr %var_654
    store {  } %var_655, ptr %var_654
    %var_670 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_671 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_670
    %var_672 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_671, void (i8**, {  }, i8*)* @print_653, 0
    %var_673 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_672, {  } %var_655, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_673, ptr %var_670
    %var_674 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_673, 0
    %var_675 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_673, 1
    %var_676 = alloca i8*
    call void %var_674(i8** %var_676, {  } %var_675, i8* @const_149)
    %var_677 = load i8*, ptr %var_676
    %var_679 = alloca {  }
    %var_680 = load {  }, ptr %var_679
    store {  } %var_680, ptr %var_679
    %var_699 = alloca { void (i64*, {  }, i64)*, {  } }
    %var_700 = load { void (i64*, {  }, i64)*, {  } }, ptr %var_699
    %var_701 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_700, void (i64*, {  }, i64)* @print_678, 0
    %var_702 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_701, {  } %var_680, 1
    store { void (i64*, {  }, i64)*, {  } } %var_702, ptr %var_699
    %var_704 = load i64, ptr @const_703
    %var_705 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_702, 0
    %var_706 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_702, 1
    %var_707 = alloca i64
    call void %var_705(i64* %var_707, {  } %var_706, i64 %var_704)
    %var_708 = load i64, ptr %var_707
    %var_710 = alloca {  }
    %var_711 = load {  }, ptr %var_710
    store {  } %var_711, ptr %var_710
    %var_726 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_727 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_726
    %var_728 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_727, void (i8**, {  }, i8*)* @print_709, 0
    %var_729 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_728, {  } %var_711, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_729, ptr %var_726
    %var_730 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_729, 0
    %var_731 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_729, 1
    %var_732 = alloca i8*
    call void %var_730(i8** %var_732, {  } %var_731, i8* @const_149)
    %var_733 = load i8*, ptr %var_732
    %var_735 = alloca {  }
    %var_736 = load {  }, ptr %var_735
    store {  } %var_736, ptr %var_735
    %var_751 = alloca { void (i64*, {  }, i64)*, {  } }
    %var_752 = load { void (i64*, {  }, i64)*, {  } }, ptr %var_751
    %var_753 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_752, void (i64*, {  }, i64)* @print_734, 0
    %var_754 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_753, {  } %var_736, 1
    store { void (i64*, {  }, i64)*, {  } } %var_754, ptr %var_751
    %var_756 = load i64, ptr @const_755
    %var_757 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_754, 0
    %var_758 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_754, 1
    %var_759 = alloca i64
    call void %var_757(i64* %var_759, {  } %var_758, i64 %var_756)
    %var_760 = load i64, ptr %var_759
    %var_762 = alloca {  }
    %var_763 = load {  }, ptr %var_762
    store {  } %var_763, ptr %var_762
    %var_778 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_779 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_778
    %var_780 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_779, void (i8**, {  }, i8*)* @print_761, 0
    %var_781 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_780, {  } %var_763, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_781, ptr %var_778
    %var_782 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_781, 0
    %var_783 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_781, 1
    %var_784 = alloca i8*
    call void %var_782(i8** %var_784, {  } %var_783, i8* @const_149)
    %var_785 = load i8*, ptr %var_784
    %var_787 = alloca {  }
    %var_788 = load {  }, ptr %var_787
    store {  } %var_788, ptr %var_787
    %var_803 = alloca { void (i64*, {  }, i64)*, {  } }
    %var_804 = load { void (i64*, {  }, i64)*, {  } }, ptr %var_803
    %var_805 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_804, void (i64*, {  }, i64)* @print_786, 0
    %var_806 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_805, {  } %var_788, 1
    store { void (i64*, {  }, i64)*, {  } } %var_806, ptr %var_803
    %var_808 = load i64, ptr @const_807
    %var_809 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_806, 0
    %var_810 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_806, 1
    %var_811 = alloca i64
    call void %var_809(i64* %var_811, {  } %var_810, i64 %var_808)
    %var_812 = load i64, ptr %var_811
    ret i32 0
}
define void @print_94(ptr sret({ void (i32*, {  }, i32)*, {  } }) %var_97, {  } %var_98, { void (i32*, {  }, i32)*, {  } } %var_99) {
  entry100: 
    %var_101 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_99, 1
    call void @printf(i8* @const_103, [4 x i8]* @const_102)
    call void @printf(i8* @const_103, [2 x i8]* @const_104)
    store { void (i32*, {  }, i32)*, {  } } %var_99, ptr %var_97
    ret void
}
declare i32 @printf(i8*, ...)
define void @fn_109(ptr sret(i32) %var_112, {  } %var_113, i32 %var_114) {
  entry115: 
    store i32 %var_114, ptr %var_112
    ret void
}
define void @print_124(ptr sret(i8*) %var_127, {  } %var_128, i8* %var_129) {
  entry130: 
    %var_131 = alloca {  }
    %var_132 = load {  }, ptr %var_131
    store {  } %var_132, ptr %var_131
    %var_137 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_138 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_137
    %var_139 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_138, void (i8**, {  }, i8*)* @print_string_wrap, 0
    %var_140 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_139, {  } %var_132, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_140, ptr %var_137
    %var_141 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_140, 0
    %var_142 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_140, 1
    %var_143 = alloca i8*
    call void %var_141(i8** %var_143, {  } %var_142, i8* %var_129)
    %var_144 = load i8*, ptr %var_143
    store i8* %var_129, ptr %var_127
    ret void
}
declare void @print_string(i8*)
define void @print_string_wrap(ptr sret(i8*) %var_133, {  } %var_134, i8* %var_135) {
  entry136: 
    call void @print_string(i8* %var_135)
    store i8* %var_135, ptr %var_133
    ret void
}
define void @print_154(ptr sret({ void (i32*, { i32 }, i32)*, { i32 } }) %var_157, {  } %var_158, { void (i32*, { i32 }, i32)*, { i32 } } %var_159) {
  entry160: 
    %var_161 = extractvalue { void (i32*, { i32 }, i32)*, { i32 } } %var_159, 1
    call void @printf(i8* @const_103, [4 x i8]* @const_102)
    %var_162 = extractvalue { i32 } %var_161, 0
    %var_164 = alloca {  }
    %var_165 = load {  }, ptr %var_164
    store {  } %var_165, ptr %var_164
    %var_184 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_185 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_184
    %var_186 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_185, void (i32*, {  }, i32)* @print_163, 0
    %var_187 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_186, {  } %var_165, 1
    store { void (i32*, {  }, i32)*, {  } } %var_187, ptr %var_184
    %var_188 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_187, 0
    %var_189 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_187, 1
    %var_190 = alloca i32
    call void %var_188(i32* %var_190, {  } %var_189, i32 %var_162)
    %var_191 = load i32, ptr %var_190
    call void @printf(i8* @const_103, [2 x i8]* @const_104)
    store { void (i32*, { i32 }, i32)*, { i32 } } %var_159, ptr %var_157
    ret void
}
define void @print_163(ptr sret(i32) %var_166, {  } %var_167, i32 %var_168) {
  entry169: 
    %var_170 = alloca {  }
    %var_171 = load {  }, ptr %var_170
    store {  } %var_171, ptr %var_170
    %var_176 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_177 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_176
    %var_178 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_177, void (i32*, {  }, i32)* @print_int_wrap, 0
    %var_179 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_178, {  } %var_171, 1
    store { void (i32*, {  }, i32)*, {  } } %var_179, ptr %var_176
    %var_180 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_179, 0
    %var_181 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_179, 1
    %var_182 = alloca i32
    call void %var_180(i32* %var_182, {  } %var_181, i32 %var_168)
    %var_183 = load i32, ptr %var_182
    store i32 %var_168, ptr %var_166
    ret void
}
declare void @print_int(i32)
define void @print_int_wrap(ptr sret(i32) %var_172, {  } %var_173, i32 %var_174) {
  entry175: 
    call void @print_int(i32 %var_174)
    store i32 %var_174, ptr %var_172
    ret void
}
define void @fn_196(ptr sret({ void (i32*, { i32 }, i32)*, { i32 } }) %var_199, {  } %var_200, i32 %var_201) {
  entry202: 
    %var_204 = alloca { i32 }
    %var_205 = load { i32 }, ptr %var_204
    %var_206 = insertvalue { i32 } %var_205, i32 %var_201, 0
    store { i32 } %var_206, ptr %var_204
    %var_212 = alloca { void (i32*, { i32 }, i32)*, { i32 } }
    %var_213 = load { void (i32*, { i32 }, i32)*, { i32 } }, ptr %var_212
    %var_214 = insertvalue { void (i32*, { i32 }, i32)*, { i32 } } %var_213, void (i32*, { i32 }, i32)* @fn_203, 0
    %var_215 = insertvalue { void (i32*, { i32 }, i32)*, { i32 } } %var_214, { i32 } %var_206, 1
    store { void (i32*, { i32 }, i32)*, { i32 } } %var_215, ptr %var_212
    store { void (i32*, { i32 }, i32)*, { i32 } } %var_215, ptr %var_199
    ret void
}
define void @fn_203(ptr sret(i32) %var_207, { i32 } %var_208, i32 %var_209) {
  entry210: 
    %var_211 = extractvalue { i32 } %var_208, 0
    store i32 %var_211, ptr %var_207
    ret void
}
define void @print_230(ptr sret(i8*) %var_233, {  } %var_234, i8* %var_235) {
  entry236: 
    %var_237 = alloca {  }
    %var_238 = load {  }, ptr %var_237
    store {  } %var_238, ptr %var_237
    %var_239 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_240 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_239
    %var_241 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_240, void (i8**, {  }, i8*)* @print_string_wrap, 0
    %var_242 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_241, {  } %var_238, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_242, ptr %var_239
    %var_243 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_242, 0
    %var_244 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_242, 1
    %var_245 = alloca i8*
    call void %var_243(i8** %var_245, {  } %var_244, i8* %var_235)
    %var_246 = load i8*, ptr %var_245
    store i8* %var_235, ptr %var_233
    ret void
}
define void @print_255(ptr sret({ void (i32*, {  }, i32, i32)*, {  } }) %var_258, {  } %var_259, { void (i32*, {  }, i32, i32)*, {  } } %var_260) {
  entry261: 
    %var_262 = extractvalue { void (i32*, {  }, i32, i32)*, {  } } %var_260, 1
    call void @printf(i8* @const_103, [4 x i8]* @const_102)
    call void @printf(i8* @const_103, [2 x i8]* @const_104)
    store { void (i32*, {  }, i32, i32)*, {  } } %var_260, ptr %var_258
    ret void
}
define void @fn_267(ptr sret(i32) %var_270, {  } %var_271, i32 %var_272, i32 %var_273) {
  entry274: 
    store i32 %var_272, ptr %var_270
    ret void
}
define void @print_283(ptr sret(i8*) %var_286, {  } %var_287, i8* %var_288) {
  entry289: 
    %var_290 = alloca {  }
    %var_291 = load {  }, ptr %var_290
    store {  } %var_291, ptr %var_290
    %var_292 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_293 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_292
    %var_294 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_293, void (i8**, {  }, i8*)* @print_string_wrap, 0
    %var_295 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_294, {  } %var_291, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_295, ptr %var_292
    %var_296 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_295, 0
    %var_297 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_295, 1
    %var_298 = alloca i8*
    call void %var_296(i8** %var_298, {  } %var_297, i8* %var_288)
    %var_299 = load i8*, ptr %var_298
    store i8* %var_288, ptr %var_286
    ret void
}
define void @print_308(ptr sret({ i32, i8* }) %var_311, {  } %var_312, { i32, i8* } %var_313) {
  entry314: 
    call void @printf(i8* @const_103, [7 x i8]* @const_315)
    %var_316 = extractvalue { i32, i8* } %var_313, 0
    %var_318 = alloca {  }
    %var_319 = load {  }, ptr %var_318
    store {  } %var_319, ptr %var_318
    %var_334 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_335 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_334
    %var_336 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_335, void (i32*, {  }, i32)* @print_317, 0
    %var_337 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_336, {  } %var_319, 1
    store { void (i32*, {  }, i32)*, {  } } %var_337, ptr %var_334
    %var_338 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_337, 0
    %var_339 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_337, 1
    %var_340 = alloca i32
    call void %var_338(i32* %var_340, {  } %var_339, i32 %var_316)
    %var_341 = load i32, ptr %var_340
    call void @printf(i8* @const_103, [3 x i8]* @const_342)
    %var_343 = extractvalue { i32, i8* } %var_313, 1
    %var_345 = alloca {  }
    %var_346 = load {  }, ptr %var_345
    store {  } %var_346, ptr %var_345
    %var_361 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_362 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_361
    %var_363 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_362, void (i8**, {  }, i8*)* @print_344, 0
    %var_364 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_363, {  } %var_346, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_364, ptr %var_361
    %var_365 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_364, 0
    %var_366 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_364, 1
    %var_367 = alloca i8*
    call void %var_365(i8** %var_367, {  } %var_366, i8* %var_343)
    %var_368 = load i8*, ptr %var_367
    call void @printf(i8* @const_103, [2 x i8]* @const_369)
    store { i32, i8* } %var_313, ptr %var_311
    ret void
}
define void @print_317(ptr sret(i32) %var_320, {  } %var_321, i32 %var_322) {
  entry323: 
    %var_324 = alloca {  }
    %var_325 = load {  }, ptr %var_324
    store {  } %var_325, ptr %var_324
    %var_326 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_327 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_326
    %var_328 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_327, void (i32*, {  }, i32)* @print_int_wrap, 0
    %var_329 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_328, {  } %var_325, 1
    store { void (i32*, {  }, i32)*, {  } } %var_329, ptr %var_326
    %var_330 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_329, 0
    %var_331 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_329, 1
    %var_332 = alloca i32
    call void %var_330(i32* %var_332, {  } %var_331, i32 %var_322)
    %var_333 = load i32, ptr %var_332
    store i32 %var_322, ptr %var_320
    ret void
}
define void @print_344(ptr sret(i8*) %var_347, {  } %var_348, i8* %var_349) {
  entry350: 
    %var_351 = alloca {  }
    %var_352 = load {  }, ptr %var_351
    store {  } %var_352, ptr %var_351
    %var_353 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_354 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_353
    %var_355 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_354, void (i8**, {  }, i8*)* @print_string_wrap, 0
    %var_356 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_355, {  } %var_352, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_356, ptr %var_353
    %var_357 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_356, 0
    %var_358 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_356, 1
    %var_359 = alloca i8*
    call void %var_357(i8** %var_359, {  } %var_358, i8* %var_349)
    %var_360 = load i8*, ptr %var_359
    store i8* %var_349, ptr %var_347
    ret void
}
define void @print_388(ptr sret(i8*) %var_391, {  } %var_392, i8* %var_393) {
  entry394: 
    %var_395 = alloca {  }
    %var_396 = load {  }, ptr %var_395
    store {  } %var_396, ptr %var_395
    %var_397 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_398 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_397
    %var_399 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_398, void (i8**, {  }, i8*)* @print_string_wrap, 0
    %var_400 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_399, {  } %var_396, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_400, ptr %var_397
    %var_401 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_400, 0
    %var_402 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_400, 1
    %var_403 = alloca i8*
    call void %var_401(i8** %var_403, {  } %var_402, i8* %var_393)
    %var_404 = load i8*, ptr %var_403
    store i8* %var_393, ptr %var_391
    ret void
}
define void @print_413(ptr sret(i32) %var_416, {  } %var_417, i32 %var_418) {
  entry419: 
    %var_420 = alloca {  }
    %var_421 = load {  }, ptr %var_420
    store {  } %var_421, ptr %var_420
    %var_422 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_423 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_422
    %var_424 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_423, void (i32*, {  }, i32)* @print_int_wrap, 0
    %var_425 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_424, {  } %var_421, 1
    store { void (i32*, {  }, i32)*, {  } } %var_425, ptr %var_422
    %var_426 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_425, 0
    %var_427 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_425, 1
    %var_428 = alloca i32
    call void %var_426(i32* %var_428, {  } %var_427, i32 %var_418)
    %var_429 = load i32, ptr %var_428
    store i32 %var_418, ptr %var_416
    ret void
}
define void @print_439(ptr sret(i8*) %var_442, {  } %var_443, i8* %var_444) {
  entry445: 
    %var_446 = alloca {  }
    %var_447 = load {  }, ptr %var_446
    store {  } %var_447, ptr %var_446
    %var_448 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_449 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_448
    %var_450 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_449, void (i8**, {  }, i8*)* @print_string_wrap, 0
    %var_451 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_450, {  } %var_447, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_451, ptr %var_448
    %var_452 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_451, 0
    %var_453 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_451, 1
    %var_454 = alloca i8*
    call void %var_452(i8** %var_454, {  } %var_453, i8* %var_444)
    %var_455 = load i8*, ptr %var_454
    store i8* %var_444, ptr %var_442
    ret void
}
define void @print_464(ptr sret(float) %var_467, {  } %var_468, float %var_469) {
  entry470: 
    %var_471 = alloca {  }
    %var_472 = load {  }, ptr %var_471
    store {  } %var_472, ptr %var_471
    %var_477 = alloca { void (float*, {  }, float)*, {  } }
    %var_478 = load { void (float*, {  }, float)*, {  } }, ptr %var_477
    %var_479 = insertvalue { void (float*, {  }, float)*, {  } } %var_478, void (float*, {  }, float)* @print_float_wrap, 0
    %var_480 = insertvalue { void (float*, {  }, float)*, {  } } %var_479, {  } %var_472, 1
    store { void (float*, {  }, float)*, {  } } %var_480, ptr %var_477
    %var_481 = extractvalue { void (float*, {  }, float)*, {  } } %var_480, 0
    %var_482 = extractvalue { void (float*, {  }, float)*, {  } } %var_480, 1
    %var_483 = alloca float
    call void %var_481(float* %var_483, {  } %var_482, float %var_469)
    %var_484 = load float, ptr %var_483
    store float %var_469, ptr %var_467
    ret void
}
declare void @print_float(float)
define void @print_float_wrap(ptr sret(float) %var_473, {  } %var_474, float %var_475) {
  entry476: 
    call void @print_float(float %var_475)
    store float %var_475, ptr %var_473
    ret void
}
define void @print_495(ptr sret(i8*) %var_498, {  } %var_499, i8* %var_500) {
  entry501: 
    %var_502 = alloca {  }
    %var_503 = load {  }, ptr %var_502
    store {  } %var_503, ptr %var_502
    %var_504 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_505 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_504
    %var_506 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_505, void (i8**, {  }, i8*)* @print_string_wrap, 0
    %var_507 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_506, {  } %var_503, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_507, ptr %var_504
    %var_508 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_507, 0
    %var_509 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_507, 1
    %var_510 = alloca i8*
    call void %var_508(i8** %var_510, {  } %var_509, i8* %var_500)
    %var_511 = load i8*, ptr %var_510
    store i8* %var_500, ptr %var_498
    ret void
}
define void @print_520(ptr sret(i8*) %var_523, {  } %var_524, i8* %var_525) {
  entry526: 
    %var_527 = alloca {  }
    %var_528 = load {  }, ptr %var_527
    store {  } %var_528, ptr %var_527
    %var_529 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_530 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_529
    %var_531 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_530, void (i8**, {  }, i8*)* @print_string_wrap, 0
    %var_532 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_531, {  } %var_528, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_532, ptr %var_529
    %var_533 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_532, 0
    %var_534 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_532, 1
    %var_535 = alloca i8*
    call void %var_533(i8** %var_535, {  } %var_534, i8* %var_525)
    %var_536 = load i8*, ptr %var_535
    store i8* %var_525, ptr %var_523
    ret void
}
define void @print_545(ptr sret(i8*) %var_548, {  } %var_549, i8* %var_550) {
  entry551: 
    %var_552 = alloca {  }
    %var_553 = load {  }, ptr %var_552
    store {  } %var_553, ptr %var_552
    %var_554 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_555 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_554
    %var_556 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_555, void (i8**, {  }, i8*)* @print_string_wrap, 0
    %var_557 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_556, {  } %var_553, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_557, ptr %var_554
    %var_558 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_557, 0
    %var_559 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_557, 1
    %var_560 = alloca i8*
    call void %var_558(i8** %var_560, {  } %var_559, i8* %var_550)
    %var_561 = load i8*, ptr %var_560
    store i8* %var_550, ptr %var_548
    ret void
}
define void @print_570(ptr sret(i1) %var_573, {  } %var_574, i1 %var_575) {
  entry576: 
    %var_577 = alloca {  }
    %var_578 = load {  }, ptr %var_577
    store {  } %var_578, ptr %var_577
    %var_583 = alloca { void (i1*, {  }, i1)*, {  } }
    %var_584 = load { void (i1*, {  }, i1)*, {  } }, ptr %var_583
    %var_585 = insertvalue { void (i1*, {  }, i1)*, {  } } %var_584, void (i1*, {  }, i1)* @print_bool_wrap, 0
    %var_586 = insertvalue { void (i1*, {  }, i1)*, {  } } %var_585, {  } %var_578, 1
    store { void (i1*, {  }, i1)*, {  } } %var_586, ptr %var_583
    %var_587 = extractvalue { void (i1*, {  }, i1)*, {  } } %var_586, 0
    %var_588 = extractvalue { void (i1*, {  }, i1)*, {  } } %var_586, 1
    %var_589 = alloca i1
    call void %var_587(i1* %var_589, {  } %var_588, i1 %var_575)
    %var_590 = load i1, ptr %var_589
    store i1 %var_575, ptr %var_573
    ret void
}
declare void @print_bool(i1)
define void @print_bool_wrap(ptr sret(i1) %var_579, {  } %var_580, i1 %var_581) {
  entry582: 
    call void @print_bool(i1 %var_581)
    store i1 %var_581, ptr %var_579
    ret void
}
define void @print_601(ptr sret(i8*) %var_604, {  } %var_605, i8* %var_606) {
  entry607: 
    %var_608 = alloca {  }
    %var_609 = load {  }, ptr %var_608
    store {  } %var_609, ptr %var_608
    %var_610 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_611 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_610
    %var_612 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_611, void (i8**, {  }, i8*)* @print_string_wrap, 0
    %var_613 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_612, {  } %var_609, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_613, ptr %var_610
    %var_614 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_613, 0
    %var_615 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_613, 1
    %var_616 = alloca i8*
    call void %var_614(i8** %var_616, {  } %var_615, i8* %var_606)
    %var_617 = load i8*, ptr %var_616
    store i8* %var_606, ptr %var_604
    ret void
}
define void @print_626(ptr sret(i1) %var_629, {  } %var_630, i1 %var_631) {
  entry632: 
    %var_633 = alloca {  }
    %var_634 = load {  }, ptr %var_633
    store {  } %var_634, ptr %var_633
    %var_635 = alloca { void (i1*, {  }, i1)*, {  } }
    %var_636 = load { void (i1*, {  }, i1)*, {  } }, ptr %var_635
    %var_637 = insertvalue { void (i1*, {  }, i1)*, {  } } %var_636, void (i1*, {  }, i1)* @print_bool_wrap, 0
    %var_638 = insertvalue { void (i1*, {  }, i1)*, {  } } %var_637, {  } %var_634, 1
    store { void (i1*, {  }, i1)*, {  } } %var_638, ptr %var_635
    %var_639 = extractvalue { void (i1*, {  }, i1)*, {  } } %var_638, 0
    %var_640 = extractvalue { void (i1*, {  }, i1)*, {  } } %var_638, 1
    %var_641 = alloca i1
    call void %var_639(i1* %var_641, {  } %var_640, i1 %var_631)
    %var_642 = load i1, ptr %var_641
    store i1 %var_631, ptr %var_629
    ret void
}
define void @print_653(ptr sret(i8*) %var_656, {  } %var_657, i8* %var_658) {
  entry659: 
    %var_660 = alloca {  }
    %var_661 = load {  }, ptr %var_660
    store {  } %var_661, ptr %var_660
    %var_662 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_663 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_662
    %var_664 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_663, void (i8**, {  }, i8*)* @print_string_wrap, 0
    %var_665 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_664, {  } %var_661, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_665, ptr %var_662
    %var_666 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_665, 0
    %var_667 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_665, 1
    %var_668 = alloca i8*
    call void %var_666(i8** %var_668, {  } %var_667, i8* %var_658)
    %var_669 = load i8*, ptr %var_668
    store i8* %var_658, ptr %var_656
    ret void
}
define void @print_678(ptr sret(i64) %var_681, {  } %var_682, i64 %var_683) {
  entry684: 
    %var_685 = alloca {  }
    %var_686 = load {  }, ptr %var_685
    store {  } %var_686, ptr %var_685
    %var_691 = alloca { void (i64*, {  }, i64)*, {  } }
    %var_692 = load { void (i64*, {  }, i64)*, {  } }, ptr %var_691
    %var_693 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_692, void (i64*, {  }, i64)* @print_symbol_wrap, 0
    %var_694 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_693, {  } %var_686, 1
    store { void (i64*, {  }, i64)*, {  } } %var_694, ptr %var_691
    %var_695 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_694, 0
    %var_696 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_694, 1
    %var_697 = alloca i64
    call void %var_695(i64* %var_697, {  } %var_696, i64 %var_683)
    %var_698 = load i64, ptr %var_697
    store i64 %var_683, ptr %var_681
    ret void
}
declare void @print_symbol(i64)
define void @print_symbol_wrap(ptr sret(i64) %var_687, {  } %var_688, i64 %var_689) {
  entry690: 
    call void @print_symbol(i64 %var_689)
    store i64 %var_689, ptr %var_687
    ret void
}
define void @print_709(ptr sret(i8*) %var_712, {  } %var_713, i8* %var_714) {
  entry715: 
    %var_716 = alloca {  }
    %var_717 = load {  }, ptr %var_716
    store {  } %var_717, ptr %var_716
    %var_718 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_719 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_718
    %var_720 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_719, void (i8**, {  }, i8*)* @print_string_wrap, 0
    %var_721 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_720, {  } %var_717, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_721, ptr %var_718
    %var_722 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_721, 0
    %var_723 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_721, 1
    %var_724 = alloca i8*
    call void %var_722(i8** %var_724, {  } %var_723, i8* %var_714)
    %var_725 = load i8*, ptr %var_724
    store i8* %var_714, ptr %var_712
    ret void
}
define void @print_734(ptr sret(i64) %var_737, {  } %var_738, i64 %var_739) {
  entry740: 
    %var_741 = alloca {  }
    %var_742 = load {  }, ptr %var_741
    store {  } %var_742, ptr %var_741
    %var_743 = alloca { void (i64*, {  }, i64)*, {  } }
    %var_744 = load { void (i64*, {  }, i64)*, {  } }, ptr %var_743
    %var_745 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_744, void (i64*, {  }, i64)* @print_symbol_wrap, 0
    %var_746 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_745, {  } %var_742, 1
    store { void (i64*, {  }, i64)*, {  } } %var_746, ptr %var_743
    %var_747 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_746, 0
    %var_748 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_746, 1
    %var_749 = alloca i64
    call void %var_747(i64* %var_749, {  } %var_748, i64 %var_739)
    %var_750 = load i64, ptr %var_749
    store i64 %var_739, ptr %var_737
    ret void
}
define void @print_761(ptr sret(i8*) %var_764, {  } %var_765, i8* %var_766) {
  entry767: 
    %var_768 = alloca {  }
    %var_769 = load {  }, ptr %var_768
    store {  } %var_769, ptr %var_768
    %var_770 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_771 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_770
    %var_772 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_771, void (i8**, {  }, i8*)* @print_string_wrap, 0
    %var_773 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_772, {  } %var_769, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_773, ptr %var_770
    %var_774 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_773, 0
    %var_775 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_773, 1
    %var_776 = alloca i8*
    call void %var_774(i8** %var_776, {  } %var_775, i8* %var_766)
    %var_777 = load i8*, ptr %var_776
    store i8* %var_766, ptr %var_764
    ret void
}
define void @print_786(ptr sret(i64) %var_789, {  } %var_790, i64 %var_791) {
  entry792: 
    %var_793 = alloca {  }
    %var_794 = load {  }, ptr %var_793
    store {  } %var_794, ptr %var_793
    %var_795 = alloca { void (i64*, {  }, i64)*, {  } }
    %var_796 = load { void (i64*, {  }, i64)*, {  } }, ptr %var_795
    %var_797 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_796, void (i64*, {  }, i64)* @print_symbol_wrap, 0
    %var_798 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_797, {  } %var_794, 1
    store { void (i64*, {  }, i64)*, {  } } %var_798, ptr %var_795
    %var_799 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_798, 0
    %var_800 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_798, 1
    %var_801 = alloca i64
    call void %var_799(i64* %var_801, {  } %var_800, i64 %var_791)
    %var_802 = load i64, ptr %var_801
    store i64 %var_791, ptr %var_789
    ret void
}
"
`;

exports[`generic print > stderr 1`] = `[]`;

exports[`generic print > stdout 1`] = `
[
  "fn[]
fn[1]
fn[]
tuple(1, ab)
1
1.250000
ab
true
false
Symbol(unit)
Symbol(atom_atom_a)
Symbol(symbol_symbol_a)",
]
`;

exports[`simply typed lambda calc compilation > apply > compiled 1`] = `
"@const_70 = constant i32 2
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_16 = alloca {  }
    %var_17 = load {  }, ptr %var_16
    store {  } %var_17, ptr %var_16
    %var_23 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_24 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_23
    %var_25 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_24, void (i32*, {  }, i32)* @print_int_wrap, 0
    %var_26 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_25, {  } %var_17, 1
    store { void (i32*, {  }, i32)*, {  } } %var_26, ptr %var_23
    %var_28 = alloca {  }
    %var_29 = load {  }, ptr %var_28
    store {  } %var_29, ptr %var_28
    %var_51 = alloca { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } }
    %var_52 = load { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } }, ptr %var_51
    %var_53 = insertvalue { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_52, void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }*, {  }, { void (i32*, {  }, i32)*, {  } })* @fn_27, 0
    %var_54 = insertvalue { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_53, {  } %var_29, 1
    store { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_54, ptr %var_51
    %var_56 = alloca {  }
    %var_57 = load {  }, ptr %var_56
    store {  } %var_57, ptr %var_56
    %var_62 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_63 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_62
    %var_64 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_63, void (i32*, {  }, i32)* @fn_55, 0
    %var_65 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_64, {  } %var_57, 1
    store { void (i32*, {  }, i32)*, {  } } %var_65, ptr %var_62
    %var_66 = extractvalue { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_54, 0
    %var_67 = extractvalue { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_54, 1
    %var_68 = alloca { void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }
    call void %var_66({ void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }* %var_68, {  } %var_67, { void (i32*, {  }, i32)*, {  } } %var_65)
    %var_69 = load { void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }, ptr %var_68
    %var_71 = load i32, ptr @const_70
    %var_72 = extractvalue { void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } } %var_69, 0
    %var_73 = extractvalue { void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } } %var_69, 1
    %var_74 = alloca i32
    call void %var_72(i32* %var_74, { { void (i32*, {  }, i32)*, {  } } } %var_73, i32 %var_71)
    %var_75 = load i32, ptr %var_74
    %var_76 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_26, 0
    %var_77 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_26, 1
    %var_78 = alloca i32
    call void %var_76(i32* %var_78, {  } %var_77, i32 %var_75)
    %var_79 = load i32, ptr %var_78
    ret i32 0
}
declare i32 @print_int(i32)
define void @print_int_wrap(ptr sret(i32) %var_18, {  } %var_19, i32 %var_20) {
  entry21: 
    %var_22 = call i32 @print_int(i32 %var_20)
    store i32 %var_22, ptr %var_18
    ret void
}
define void @fn_27(ptr sret({ void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }) %var_30, {  } %var_31, { void (i32*, {  }, i32)*, {  } } %var_32) {
  entry33: 
    %var_35 = alloca { { void (i32*, {  }, i32)*, {  } } }
    %var_36 = load { { void (i32*, {  }, i32)*, {  } } }, ptr %var_35
    %var_37 = insertvalue { { void (i32*, {  }, i32)*, {  } } } %var_36, { void (i32*, {  }, i32)*, {  } } %var_32, 0
    store { { void (i32*, {  }, i32)*, {  } } } %var_37, ptr %var_35
    %var_47 = alloca { void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }
    %var_48 = load { void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }, ptr %var_47
    %var_49 = insertvalue { void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } } %var_48, void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)* @fn_34, 0
    %var_50 = insertvalue { void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } } %var_49, { { void (i32*, {  }, i32)*, {  } } } %var_37, 1
    store { void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } } %var_50, ptr %var_47
    store { void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } } %var_50, ptr %var_30
    ret void
}
define void @fn_34(ptr sret(i32) %var_38, { { void (i32*, {  }, i32)*, {  } } } %var_39, i32 %var_40) {
  entry41: 
    %var_42 = extractvalue { { void (i32*, {  }, i32)*, {  } } } %var_39, 0
    %var_43 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_42, 0
    %var_44 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_42, 1
    %var_45 = alloca i32
    call void %var_43(i32* %var_45, {  } %var_44, i32 %var_40)
    %var_46 = load i32, ptr %var_45
    store i32 %var_46, ptr %var_38
    ret void
}
define void @fn_55(ptr sret(i32) %var_58, {  } %var_59, i32 %var_60) {
  entry61: 
    store i32 %var_60, ptr %var_58
    ret void
}
"
`;

exports[`simply typed lambda calc compilation > apply > stderr 1`] = `[]`;

exports[`simply typed lambda calc compilation > apply > stdout 1`] = `
[
  "2
",
]
`;

exports[`simply typed lambda calc compilation > church tuple > compiled 1`] = `
"@const_82 = constant i32 1
@const_88 = constant i32 2
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_24 = alloca {  }
    %var_25 = load {  }, ptr %var_24
    store {  } %var_25, ptr %var_24
    %var_31 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_32 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_31
    %var_33 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_32, void (i32*, {  }, i32)* @print_int_wrap, 0
    %var_34 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_33, {  } %var_25, 1
    store { void (i32*, {  }, i32)*, {  } } %var_34, ptr %var_31
    %var_36 = alloca {  }
    %var_37 = load {  }, ptr %var_36
    store {  } %var_37, ptr %var_36
    %var_78 = alloca { void ({ void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } }
    %var_79 = load { void ({ void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } }, ptr %var_78
    %var_80 = insertvalue { void ({ void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_79, void ({ void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)* @fn_35, 0
    %var_81 = insertvalue { void ({ void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_80, {  } %var_37, 1
    store { void ({ void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_81, ptr %var_78
    %var_83 = load i32, ptr @const_82
    %var_84 = extractvalue { void ({ void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_81, 0
    %var_85 = extractvalue { void ({ void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_81, 1
    %var_86 = alloca { void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }
    call void %var_84({ void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }* %var_86, {  } %var_85, i32 %var_83)
    %var_87 = load { void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }, ptr %var_86
    %var_89 = load i32, ptr @const_88
    %var_90 = extractvalue { void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_87, 0
    %var_91 = extractvalue { void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_87, 1
    %var_92 = alloca { void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }
    call void %var_90({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }* %var_92, { i32 } %var_91, i32 %var_89)
    %var_93 = load { void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }, ptr %var_92
    %var_95 = alloca {  }
    %var_96 = load {  }, ptr %var_95
    store {  } %var_96, ptr %var_95
    %var_114 = alloca { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } }
    %var_115 = load { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } }, ptr %var_114
    %var_116 = insertvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_115, void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)* @fn_94, 0
    %var_117 = insertvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_116, {  } %var_96, 1
    store { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_117, ptr %var_114
    %var_118 = extractvalue { void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } } %var_93, 0
    %var_119 = extractvalue { void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } } %var_93, 1
    %var_120 = alloca i32
    call void %var_118(i32* %var_120, { i32, i32 } %var_119, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_117)
    %var_121 = load i32, ptr %var_120
    %var_122 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_34, 0
    %var_123 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_34, 1
    %var_124 = alloca i32
    call void %var_122(i32* %var_124, {  } %var_123, i32 %var_121)
    %var_125 = load i32, ptr %var_124
    ret i32 0
}
declare i32 @print_int(i32)
define void @print_int_wrap(ptr sret(i32) %var_26, {  } %var_27, i32 %var_28) {
  entry29: 
    %var_30 = call i32 @print_int(i32 %var_28)
    store i32 %var_30, ptr %var_26
    ret void
}
define void @fn_35(ptr sret({ void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }) %var_38, {  } %var_39, i32 %var_40) {
  entry41: 
    %var_43 = alloca { i32 }
    %var_44 = load { i32 }, ptr %var_43
    %var_45 = insertvalue { i32 } %var_44, i32 %var_40, 0
    store { i32 } %var_45, ptr %var_43
    %var_74 = alloca { void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }
    %var_75 = load { void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }, ptr %var_74
    %var_76 = insertvalue { void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_75, void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)* @fn_42, 0
    %var_77 = insertvalue { void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_76, { i32 } %var_45, 1
    store { void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_77, ptr %var_74
    store { void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_77, ptr %var_38
    ret void
}
define void @fn_42(ptr sret({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }) %var_46, { i32 } %var_47, i32 %var_48) {
  entry49: 
    %var_50 = extractvalue { i32 } %var_47, 0
    %var_52 = alloca { i32, i32 }
    %var_53 = load { i32, i32 }, ptr %var_52
    %var_54 = insertvalue { i32, i32 } %var_53, i32 %var_50, 0
    %var_55 = insertvalue { i32, i32 } %var_54, i32 %var_48, 1
    store { i32, i32 } %var_55, ptr %var_52
    %var_70 = alloca { void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }
    %var_71 = load { void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }, ptr %var_70
    %var_72 = insertvalue { void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } } %var_71, void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })* @fn_51, 0
    %var_73 = insertvalue { void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } } %var_72, { i32, i32 } %var_55, 1
    store { void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } } %var_73, ptr %var_70
    store { void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } } %var_73, ptr %var_46
    ret void
}
define void @fn_51(ptr sret(i32) %var_56, { i32, i32 } %var_57, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_58) {
  entry59: 
    %var_60 = extractvalue { i32, i32 } %var_57, 0
    %var_61 = extractvalue { i32, i32 } %var_57, 1
    %var_62 = extractvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_58, 0
    %var_63 = extractvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_58, 1
    %var_64 = alloca { void (i32*, { i32 }, i32)*, { i32 } }
    call void %var_62({ void (i32*, { i32 }, i32)*, { i32 } }* %var_64, {  } %var_63, i32 %var_60)
    %var_65 = load { void (i32*, { i32 }, i32)*, { i32 } }, ptr %var_64
    %var_66 = extractvalue { void (i32*, { i32 }, i32)*, { i32 } } %var_65, 0
    %var_67 = extractvalue { void (i32*, { i32 }, i32)*, { i32 } } %var_65, 1
    %var_68 = alloca i32
    call void %var_66(i32* %var_68, { i32 } %var_67, i32 %var_61)
    %var_69 = load i32, ptr %var_68
    store i32 %var_69, ptr %var_56
    ret void
}
define void @fn_94(ptr sret({ void (i32*, { i32 }, i32)*, { i32 } }) %var_97, {  } %var_98, i32 %var_99) {
  entry100: 
    %var_102 = alloca { i32 }
    %var_103 = load { i32 }, ptr %var_102
    %var_104 = insertvalue { i32 } %var_103, i32 %var_99, 0
    store { i32 } %var_104, ptr %var_102
    %var_110 = alloca { void (i32*, { i32 }, i32)*, { i32 } }
    %var_111 = load { void (i32*, { i32 }, i32)*, { i32 } }, ptr %var_110
    %var_112 = insertvalue { void (i32*, { i32 }, i32)*, { i32 } } %var_111, void (i32*, { i32 }, i32)* @fn_101, 0
    %var_113 = insertvalue { void (i32*, { i32 }, i32)*, { i32 } } %var_112, { i32 } %var_104, 1
    store { void (i32*, { i32 }, i32)*, { i32 } } %var_113, ptr %var_110
    store { void (i32*, { i32 }, i32)*, { i32 } } %var_113, ptr %var_97
    ret void
}
define void @fn_101(ptr sret(i32) %var_105, { i32 } %var_106, i32 %var_107) {
  entry108: 
    %var_109 = extractvalue { i32 } %var_106, 0
    store i32 %var_109, ptr %var_105
    ret void
}
"
`;

exports[`simply typed lambda calc compilation > church tuple > stderr 1`] = `[]`;

exports[`simply typed lambda calc compilation > church tuple > stdout 1`] = `
[
  "1
",
]
`;

exports[`simply typed lambda calc compilation > church tuple 2 > compiled 1`] = `
"@const_45 = constant i32 1
@const_47 = constant i32 2
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_17 = alloca {  }
    %var_18 = load {  }, ptr %var_17
    store {  } %var_18, ptr %var_17
    %var_24 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_25 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_24
    %var_26 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_25, void (i32*, {  }, i32)* @print_int_wrap, 0
    %var_27 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_26, {  } %var_18, 1
    store { void (i32*, {  }, i32)*, {  } } %var_27, ptr %var_24
    %var_29 = alloca {  }
    %var_30 = load {  }, ptr %var_29
    store {  } %var_30, ptr %var_29
    %var_41 = alloca { void (i32*, {  }, i32, i32, { void (i32*, {  }, i32, i32)*, {  } })*, {  } }
    %var_42 = load { void (i32*, {  }, i32, i32, { void (i32*, {  }, i32, i32)*, {  } })*, {  } }, ptr %var_41
    %var_43 = insertvalue { void (i32*, {  }, i32, i32, { void (i32*, {  }, i32, i32)*, {  } })*, {  } } %var_42, void (i32*, {  }, i32, i32, { void (i32*, {  }, i32, i32)*, {  } })* @fn_28, 0
    %var_44 = insertvalue { void (i32*, {  }, i32, i32, { void (i32*, {  }, i32, i32)*, {  } })*, {  } } %var_43, {  } %var_30, 1
    store { void (i32*, {  }, i32, i32, { void (i32*, {  }, i32, i32)*, {  } })*, {  } } %var_44, ptr %var_41
    %var_46 = load i32, ptr @const_45
    %var_48 = load i32, ptr @const_47
    %var_50 = alloca {  }
    %var_51 = load {  }, ptr %var_50
    store {  } %var_51, ptr %var_50
    %var_56 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_57 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_56
    %var_58 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_57, void (i32*, {  }, i32)* @fn_49, 0
    %var_59 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_58, {  } %var_51, 1
    store { void (i32*, {  }, i32)*, {  } } %var_59, ptr %var_56
    %var_60 = extractvalue { void (i32*, {  }, i32, i32, { void (i32*, {  }, i32, i32)*, {  } })*, {  } } %var_44, 0
    %var_61 = extractvalue { void (i32*, {  }, i32, i32, { void (i32*, {  }, i32, i32)*, {  } })*, {  } } %var_44, 1
    %var_62 = alloca i32
    call void %var_60(i32* %var_62, {  } %var_61, i32 %var_46, i32 %var_48, { void (i32*, {  }, i32, i32)*, {  } } %var_59)
    %var_63 = load i32, ptr %var_62
    %var_64 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_27, 0
    %var_65 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_27, 1
    %var_66 = alloca i32
    call void %var_64(i32* %var_66, {  } %var_65, i32 %var_63)
    %var_67 = load i32, ptr %var_66
    ret i32 0
}
declare i32 @print_int(i32)
define void @print_int_wrap(ptr sret(i32) %var_19, {  } %var_20, i32 %var_21) {
  entry22: 
    %var_23 = call i32 @print_int(i32 %var_21)
    store i32 %var_23, ptr %var_19
    ret void
}
define void @fn_28(ptr sret(i32) %var_31, {  } %var_32, i32 %var_33, i32 %var_34, { void (i32*, {  }, i32, i32)*, {  } } %var_35) {
  entry36: 
    %var_37 = extractvalue { void (i32*, {  }, i32, i32)*, {  } } %var_35, 0
    %var_38 = extractvalue { void (i32*, {  }, i32, i32)*, {  } } %var_35, 1
    %var_39 = alloca i32
    call void %var_37(i32* %var_39, {  } %var_38, i32 %var_33, i32 %var_34)
    %var_40 = load i32, ptr %var_39
    store i32 %var_40, ptr %var_31
    ret void
}
define void @fn_49(ptr sret(i32) %var_52, {  } %var_53, i32 %var_54) {
  entry55: 
    store i32 %var_54, ptr %var_52
    ret void
}
"
`;

exports[`simply typed lambda calc compilation > church tuple 2 > stderr 1`] = `[]`;

exports[`simply typed lambda calc compilation > church tuple 2 > stdout 1`] = `
[
  "1
",
]
`;

exports[`simply typed lambda calc compilation > either > compiled 1`] = `
"@const_76 = constant i32 1
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_22 = alloca {  }
    %var_23 = load {  }, ptr %var_22
    store {  } %var_23, ptr %var_22
    %var_29 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_30 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_29
    %var_31 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_30, void (i32*, {  }, i32)* @print_int_wrap, 0
    %var_32 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_31, {  } %var_23, 1
    store { void (i32*, {  }, i32)*, {  } } %var_32, ptr %var_29
    %var_34 = alloca {  }
    %var_35 = load {  }, ptr %var_34
    store {  } %var_35, ptr %var_34
    %var_72 = alloca { void ({ void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }*, {  }, i32)*, {  } }
    %var_73 = load { void ({ void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }*, {  }, i32)*, {  } }, ptr %var_72
    %var_74 = insertvalue { void ({ void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }*, {  }, i32)*, {  } } %var_73, void ({ void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }*, {  }, i32)* @fn_33, 0
    %var_75 = insertvalue { void ({ void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }*, {  }, i32)*, {  } } %var_74, {  } %var_35, 1
    store { void ({ void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }*, {  }, i32)*, {  } } %var_75, ptr %var_72
    %var_77 = load i32, ptr @const_76
    %var_78 = extractvalue { void ({ void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }*, {  }, i32)*, {  } } %var_75, 0
    %var_79 = extractvalue { void ({ void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }*, {  }, i32)*, {  } } %var_75, 1
    %var_80 = alloca { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }
    call void %var_78({ void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }* %var_80, {  } %var_79, i32 %var_77)
    %var_81 = load { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }, ptr %var_80
    %var_83 = alloca {  }
    %var_84 = load {  }, ptr %var_83
    store {  } %var_84, ptr %var_83
    %var_89 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_90 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_89
    %var_91 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_90, void (i32*, {  }, i32)* @fn_82, 0
    %var_92 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_91, {  } %var_84, 1
    store { void (i32*, {  }, i32)*, {  } } %var_92, ptr %var_89
    %var_93 = extractvalue { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } } %var_81, 0
    %var_94 = extractvalue { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } } %var_81, 1
    %var_95 = alloca { void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }
    call void %var_93({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }* %var_95, { i32 } %var_94, { void (i32*, {  }, i32)*, {  } } %var_92)
    %var_96 = load { void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }, ptr %var_95
    %var_98 = alloca {  }
    %var_99 = load {  }, ptr %var_98
    store {  } %var_99, ptr %var_98
    %var_104 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_105 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_104
    %var_106 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_105, void (i32*, {  }, i32)* @fn_97, 0
    %var_107 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_106, {  } %var_99, 1
    store { void (i32*, {  }, i32)*, {  } } %var_107, ptr %var_104
    %var_108 = extractvalue { void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } } %var_96, 0
    %var_109 = extractvalue { void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } } %var_96, 1
    %var_110 = alloca i32
    call void %var_108(i32* %var_110, { { void (i32*, {  }, i32)*, {  } }, i32 } %var_109, { void (i32*, {  }, i32)*, {  } } %var_107)
    %var_111 = load i32, ptr %var_110
    %var_112 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_32, 0
    %var_113 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_32, 1
    %var_114 = alloca i32
    call void %var_112(i32* %var_114, {  } %var_113, i32 %var_111)
    %var_115 = load i32, ptr %var_114
    ret i32 0
}
declare i32 @print_int(i32)
define void @print_int_wrap(ptr sret(i32) %var_24, {  } %var_25, i32 %var_26) {
  entry27: 
    %var_28 = call i32 @print_int(i32 %var_26)
    store i32 %var_28, ptr %var_24
    ret void
}
define void @fn_33(ptr sret({ void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }) %var_36, {  } %var_37, i32 %var_38) {
  entry39: 
    %var_41 = alloca { i32 }
    %var_42 = load { i32 }, ptr %var_41
    %var_43 = insertvalue { i32 } %var_42, i32 %var_38, 0
    store { i32 } %var_43, ptr %var_41
    %var_68 = alloca { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }
    %var_69 = load { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }, ptr %var_68
    %var_70 = insertvalue { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } } %var_69, void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })* @fn_40, 0
    %var_71 = insertvalue { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } } %var_70, { i32 } %var_43, 1
    store { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } } %var_71, ptr %var_68
    store { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } } %var_71, ptr %var_36
    ret void
}
define void @fn_40(ptr sret({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }) %var_44, { i32 } %var_45, { void (i32*, {  }, i32)*, {  } } %var_46) {
  entry47: 
    %var_48 = extractvalue { i32 } %var_45, 0
    %var_50 = alloca { { void (i32*, {  }, i32)*, {  } }, i32 }
    %var_51 = load { { void (i32*, {  }, i32)*, {  } }, i32 }, ptr %var_50
    %var_52 = insertvalue { { void (i32*, {  }, i32)*, {  } }, i32 } %var_51, { void (i32*, {  }, i32)*, {  } } %var_46, 0
    %var_53 = insertvalue { { void (i32*, {  }, i32)*, {  } }, i32 } %var_52, i32 %var_48, 1
    store { { void (i32*, {  }, i32)*, {  } }, i32 } %var_53, ptr %var_50
    %var_64 = alloca { void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }
    %var_65 = load { void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }, ptr %var_64
    %var_66 = insertvalue { void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } } %var_65, void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })* @fn_49, 0
    %var_67 = insertvalue { void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } } %var_66, { { void (i32*, {  }, i32)*, {  } }, i32 } %var_53, 1
    store { void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } } %var_67, ptr %var_64
    store { void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } } %var_67, ptr %var_44
    ret void
}
define void @fn_49(ptr sret(i32) %var_54, { { void (i32*, {  }, i32)*, {  } }, i32 } %var_55, { void (i32*, {  }, i32)*, {  } } %var_56) {
  entry57: 
    %var_58 = extractvalue { { void (i32*, {  }, i32)*, {  } }, i32 } %var_55, 0
    %var_59 = extractvalue { { void (i32*, {  }, i32)*, {  } }, i32 } %var_55, 1
    %var_60 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_58, 0
    %var_61 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_58, 1
    %var_62 = alloca i32
    call void %var_60(i32* %var_62, {  } %var_61, i32 %var_59)
    %var_63 = load i32, ptr %var_62
    store i32 %var_63, ptr %var_54
    ret void
}
define void @fn_82(ptr sret(i32) %var_85, {  } %var_86, i32 %var_87) {
  entry88: 
    store i32 %var_87, ptr %var_85
    ret void
}
define void @fn_97(ptr sret(i32) %var_100, {  } %var_101, i32 %var_102) {
  entry103: 
    store i32 %var_102, ptr %var_100
    ret void
}
"
`;

exports[`simply typed lambda calc compilation > either > stderr 1`] = `[]`;

exports[`simply typed lambda calc compilation > either > stdout 1`] = `
[
  "1
",
]
`;

exports[`simply typed lambda calc compilation > either 2 > compiled 1`] = `
"@const_46 = constant i32 1
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_18 = alloca {  }
    %var_19 = load {  }, ptr %var_18
    store {  } %var_19, ptr %var_18
    %var_25 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_26 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_25
    %var_27 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_26, void (i32*, {  }, i32)* @print_int_wrap, 0
    %var_28 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_27, {  } %var_19, 1
    store { void (i32*, {  }, i32)*, {  } } %var_28, ptr %var_25
    %var_30 = alloca {  }
    %var_31 = load {  }, ptr %var_30
    store {  } %var_31, ptr %var_30
    %var_42 = alloca { void (i32*, {  }, i32, { void (i32*, {  }, i32)*, {  } }, { void (i32*, {  }, i32)*, {  } })*, {  } }
    %var_43 = load { void (i32*, {  }, i32, { void (i32*, {  }, i32)*, {  } }, { void (i32*, {  }, i32)*, {  } })*, {  } }, ptr %var_42
    %var_44 = insertvalue { void (i32*, {  }, i32, { void (i32*, {  }, i32)*, {  } }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_43, void (i32*, {  }, i32, { void (i32*, {  }, i32)*, {  } }, { void (i32*, {  }, i32)*, {  } })* @fn_29, 0
    %var_45 = insertvalue { void (i32*, {  }, i32, { void (i32*, {  }, i32)*, {  } }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_44, {  } %var_31, 1
    store { void (i32*, {  }, i32, { void (i32*, {  }, i32)*, {  } }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_45, ptr %var_42
    %var_47 = load i32, ptr @const_46
    %var_49 = alloca {  }
    %var_50 = load {  }, ptr %var_49
    store {  } %var_50, ptr %var_49
    %var_55 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_56 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_55
    %var_57 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_56, void (i32*, {  }, i32)* @fn_48, 0
    %var_58 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_57, {  } %var_50, 1
    store { void (i32*, {  }, i32)*, {  } } %var_58, ptr %var_55
    %var_60 = alloca {  }
    %var_61 = load {  }, ptr %var_60
    store {  } %var_61, ptr %var_60
    %var_66 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_67 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_66
    %var_68 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_67, void (i32*, {  }, i32)* @fn_59, 0
    %var_69 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_68, {  } %var_61, 1
    store { void (i32*, {  }, i32)*, {  } } %var_69, ptr %var_66
    %var_70 = extractvalue { void (i32*, {  }, i32, { void (i32*, {  }, i32)*, {  } }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_45, 0
    %var_71 = extractvalue { void (i32*, {  }, i32, { void (i32*, {  }, i32)*, {  } }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_45, 1
    %var_72 = alloca i32
    call void %var_70(i32* %var_72, {  } %var_71, i32 %var_47, { void (i32*, {  }, i32)*, {  } } %var_58, { void (i32*, {  }, i32)*, {  } } %var_69)
    %var_73 = load i32, ptr %var_72
    %var_74 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_28, 0
    %var_75 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_28, 1
    %var_76 = alloca i32
    call void %var_74(i32* %var_76, {  } %var_75, i32 %var_73)
    %var_77 = load i32, ptr %var_76
    ret i32 0
}
declare i32 @print_int(i32)
define void @print_int_wrap(ptr sret(i32) %var_20, {  } %var_21, i32 %var_22) {
  entry23: 
    %var_24 = call i32 @print_int(i32 %var_22)
    store i32 %var_24, ptr %var_20
    ret void
}
define void @fn_29(ptr sret(i32) %var_32, {  } %var_33, i32 %var_34, { void (i32*, {  }, i32)*, {  } } %var_35, { void (i32*, {  }, i32)*, {  } } %var_36) {
  entry37: 
    %var_38 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_35, 0
    %var_39 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_35, 1
    %var_40 = alloca i32
    call void %var_38(i32* %var_40, {  } %var_39, i32 %var_34)
    %var_41 = load i32, ptr %var_40
    store i32 %var_41, ptr %var_32
    ret void
}
define void @fn_48(ptr sret(i32) %var_51, {  } %var_52, i32 %var_53) {
  entry54: 
    store i32 %var_53, ptr %var_51
    ret void
}
define void @fn_59(ptr sret(i32) %var_62, {  } %var_63, i32 %var_64) {
  entry65: 
    store i32 %var_64, ptr %var_62
    ret void
}
"
`;

exports[`simply typed lambda calc compilation > either 2 > stderr 1`] = `[]`;

exports[`simply typed lambda calc compilation > either 2 > stdout 1`] = `
[
  "1
",
]
`;

exports[`simply typed lambda calc compilation > function application and literal print > compiled 1`] = `
"@const_33 = constant i32 2
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_10 = alloca {  }
    %var_11 = load {  }, ptr %var_10
    store {  } %var_11, ptr %var_10
    %var_17 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_18 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_17
    %var_19 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_18, void (i32*, {  }, i32)* @print_int_wrap, 0
    %var_20 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_19, {  } %var_11, 1
    store { void (i32*, {  }, i32)*, {  } } %var_20, ptr %var_17
    %var_22 = alloca {  }
    %var_23 = load {  }, ptr %var_22
    store {  } %var_23, ptr %var_22
    %var_29 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_30 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_29
    %var_31 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_30, void (i32*, {  }, i32)* @fn_21, 0
    %var_32 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_31, {  } %var_23, 1
    store { void (i32*, {  }, i32)*, {  } } %var_32, ptr %var_29
    %var_34 = load i32, ptr @const_33
    %var_35 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_32, 0
    %var_36 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_32, 1
    %var_37 = alloca i32
    call void %var_35(i32* %var_37, {  } %var_36, i32 %var_34)
    %var_38 = load i32, ptr %var_37
    %var_39 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_20, 0
    %var_40 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_20, 1
    %var_41 = alloca i32
    call void %var_39(i32* %var_41, {  } %var_40, i32 %var_38)
    %var_42 = load i32, ptr %var_41
    ret i32 0
}
declare i32 @print_int(i32)
define void @print_int_wrap(ptr sret(i32) %var_12, {  } %var_13, i32 %var_14) {
  entry15: 
    %var_16 = call i32 @print_int(i32 %var_14)
    store i32 %var_16, ptr %var_12
    ret void
}
define void @fn_21(ptr sret(i32) %var_24, {  } %var_25, i32 %var_26) {
  entry27: 
    %var_28 = add i32 %var_26, %var_26
    store i32 %var_28, ptr %var_24
    ret void
}
"
`;

exports[`simply typed lambda calc compilation > function application and literal print > stderr 1`] = `[]`;

exports[`simply typed lambda calc compilation > function application and literal print > stdout 1`] = `
[
  "4
",
]
`;

exports[`simply typed lambda calc compilation > function closure > compiled 1`] = `
"@const_43 = constant i32 2
@const_55 = constant i32 1
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_16 = alloca {  }
    %var_17 = load {  }, ptr %var_16
    store {  } %var_17, ptr %var_16
    %var_23 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_24 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_23
    %var_25 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_24, void (i32*, {  }, i32)* @print_int_wrap, 0
    %var_26 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_25, {  } %var_17, 1
    store { void (i32*, {  }, i32)*, {  } } %var_26, ptr %var_23
    %var_28 = alloca {  }
    %var_29 = load {  }, ptr %var_28
    store {  } %var_29, ptr %var_28
    %var_51 = alloca { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } }
    %var_52 = load { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } }, ptr %var_51
    %var_53 = insertvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_52, void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)* @fn_27, 0
    %var_54 = insertvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_53, {  } %var_29, 1
    store { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_54, ptr %var_51
    %var_56 = load i32, ptr @const_55
    %var_57 = extractvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_54, 0
    %var_58 = extractvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_54, 1
    %var_59 = alloca { void (i32*, { i32 }, i32)*, { i32 } }
    call void %var_57({ void (i32*, { i32 }, i32)*, { i32 } }* %var_59, {  } %var_58, i32 %var_56)
    %var_60 = load { void (i32*, { i32 }, i32)*, { i32 } }, ptr %var_59
    %var_61 = load i32, ptr @const_43
    %var_62 = extractvalue { void (i32*, { i32 }, i32)*, { i32 } } %var_60, 0
    %var_63 = extractvalue { void (i32*, { i32 }, i32)*, { i32 } } %var_60, 1
    %var_64 = alloca i32
    call void %var_62(i32* %var_64, { i32 } %var_63, i32 %var_61)
    %var_65 = load i32, ptr %var_64
    %var_66 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_26, 0
    %var_67 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_26, 1
    %var_68 = alloca i32
    call void %var_66(i32* %var_68, {  } %var_67, i32 %var_65)
    %var_69 = load i32, ptr %var_68
    ret i32 0
}
declare i32 @print_int(i32)
define void @print_int_wrap(ptr sret(i32) %var_18, {  } %var_19, i32 %var_20) {
  entry21: 
    %var_22 = call i32 @print_int(i32 %var_20)
    store i32 %var_22, ptr %var_18
    ret void
}
define void @fn_27(ptr sret({ void (i32*, { i32 }, i32)*, { i32 } }) %var_30, {  } %var_31, i32 %var_32) {
  entry33: 
    %var_35 = alloca { i32 }
    %var_36 = load { i32 }, ptr %var_35
    %var_37 = insertvalue { i32 } %var_36, i32 %var_32, 0
    store { i32 } %var_37, ptr %var_35
    %var_47 = alloca { void (i32*, { i32 }, i32)*, { i32 } }
    %var_48 = load { void (i32*, { i32 }, i32)*, { i32 } }, ptr %var_47
    %var_49 = insertvalue { void (i32*, { i32 }, i32)*, { i32 } } %var_48, void (i32*, { i32 }, i32)* @fn_34, 0
    %var_50 = insertvalue { void (i32*, { i32 }, i32)*, { i32 } } %var_49, { i32 } %var_37, 1
    store { void (i32*, { i32 }, i32)*, { i32 } } %var_50, ptr %var_47
    store { void (i32*, { i32 }, i32)*, { i32 } } %var_50, ptr %var_30
    ret void
}
define void @fn_34(ptr sret(i32) %var_38, { i32 } %var_39, i32 %var_40) {
  entry41: 
    %var_42 = extractvalue { i32 } %var_39, 0
    %var_44 = load i32, ptr @const_43
    %var_45 = mul i32 %var_44, %var_42
    %var_46 = add i32 %var_40, %var_45
    store i32 %var_46, ptr %var_38
    ret void
}
"
`;

exports[`simply typed lambda calc compilation > function closure > stderr 1`] = `[]`;

exports[`simply typed lambda calc compilation > function closure > stdout 1`] = `
[
  "4
",
]
`;

exports[`simply typed lambda calc compilation > function deep closure > compiled 1`] = `
"@const_72 = constant i32 1
@const_78 = constant i32 3
@const_84 = constant i32 5
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_20 = alloca {  }
    %var_21 = load {  }, ptr %var_20
    store {  } %var_21, ptr %var_20
    %var_27 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_28 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_27
    %var_29 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_28, void (i32*, {  }, i32)* @print_int_wrap, 0
    %var_30 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_29, {  } %var_21, 1
    store { void (i32*, {  }, i32)*, {  } } %var_30, ptr %var_27
    %var_32 = alloca {  }
    %var_33 = load {  }, ptr %var_32
    store {  } %var_33, ptr %var_32
    %var_68 = alloca { void ({ void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } }
    %var_69 = load { void ({ void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } }, ptr %var_68
    %var_70 = insertvalue { void ({ void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_69, void ({ void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)* @fn_31, 0
    %var_71 = insertvalue { void ({ void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_70, {  } %var_33, 1
    store { void ({ void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_71, ptr %var_68
    %var_73 = load i32, ptr @const_72
    %var_74 = extractvalue { void ({ void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_71, 0
    %var_75 = extractvalue { void ({ void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_71, 1
    %var_76 = alloca { void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }
    call void %var_74({ void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }* %var_76, {  } %var_75, i32 %var_73)
    %var_77 = load { void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }, ptr %var_76
    %var_79 = load i32, ptr @const_78
    %var_80 = extractvalue { void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_77, 0
    %var_81 = extractvalue { void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_77, 1
    %var_82 = alloca { void (i32*, { i32, i32 }, i32)*, { i32, i32 } }
    call void %var_80({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }* %var_82, { i32 } %var_81, i32 %var_79)
    %var_83 = load { void (i32*, { i32, i32 }, i32)*, { i32, i32 } }, ptr %var_82
    %var_85 = load i32, ptr @const_84
    %var_86 = extractvalue { void (i32*, { i32, i32 }, i32)*, { i32, i32 } } %var_83, 0
    %var_87 = extractvalue { void (i32*, { i32, i32 }, i32)*, { i32, i32 } } %var_83, 1
    %var_88 = alloca i32
    call void %var_86(i32* %var_88, { i32, i32 } %var_87, i32 %var_85)
    %var_89 = load i32, ptr %var_88
    %var_90 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_30, 0
    %var_91 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_30, 1
    %var_92 = alloca i32
    call void %var_90(i32* %var_92, {  } %var_91, i32 %var_89)
    %var_93 = load i32, ptr %var_92
    ret i32 0
}
declare i32 @print_int(i32)
define void @print_int_wrap(ptr sret(i32) %var_22, {  } %var_23, i32 %var_24) {
  entry25: 
    %var_26 = call i32 @print_int(i32 %var_24)
    store i32 %var_26, ptr %var_22
    ret void
}
define void @fn_31(ptr sret({ void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }) %var_34, {  } %var_35, i32 %var_36) {
  entry37: 
    %var_39 = alloca { i32 }
    %var_40 = load { i32 }, ptr %var_39
    %var_41 = insertvalue { i32 } %var_40, i32 %var_36, 0
    store { i32 } %var_41, ptr %var_39
    %var_64 = alloca { void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }
    %var_65 = load { void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }, ptr %var_64
    %var_66 = insertvalue { void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_65, void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)* @fn_38, 0
    %var_67 = insertvalue { void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_66, { i32 } %var_41, 1
    store { void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_67, ptr %var_64
    store { void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_67, ptr %var_34
    ret void
}
define void @fn_38(ptr sret({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }) %var_42, { i32 } %var_43, i32 %var_44) {
  entry45: 
    %var_46 = extractvalue { i32 } %var_43, 0
    %var_48 = alloca { i32, i32 }
    %var_49 = load { i32, i32 }, ptr %var_48
    %var_50 = insertvalue { i32, i32 } %var_49, i32 %var_46, 0
    %var_51 = insertvalue { i32, i32 } %var_50, i32 %var_44, 1
    store { i32, i32 } %var_51, ptr %var_48
    %var_60 = alloca { void (i32*, { i32, i32 }, i32)*, { i32, i32 } }
    %var_61 = load { void (i32*, { i32, i32 }, i32)*, { i32, i32 } }, ptr %var_60
    %var_62 = insertvalue { void (i32*, { i32, i32 }, i32)*, { i32, i32 } } %var_61, void (i32*, { i32, i32 }, i32)* @fn_47, 0
    %var_63 = insertvalue { void (i32*, { i32, i32 }, i32)*, { i32, i32 } } %var_62, { i32, i32 } %var_51, 1
    store { void (i32*, { i32, i32 }, i32)*, { i32, i32 } } %var_63, ptr %var_60
    store { void (i32*, { i32, i32 }, i32)*, { i32, i32 } } %var_63, ptr %var_42
    ret void
}
define void @fn_47(ptr sret(i32) %var_52, { i32, i32 } %var_53, i32 %var_54) {
  entry55: 
    %var_56 = extractvalue { i32, i32 } %var_53, 0
    %var_57 = extractvalue { i32, i32 } %var_53, 1
    %var_58 = add i32 %var_57, %var_54
    %var_59 = add i32 %var_56, %var_58
    store i32 %var_59, ptr %var_52
    ret void
}
"
`;

exports[`simply typed lambda calc compilation > function deep closure > stderr 1`] = `[]`;

exports[`simply typed lambda calc compilation > function deep closure > stdout 1`] = `
[
  "9
",
]
`;

exports[`simply typed lambda calc compilation > function multiple args > compiled 1`] = `
"@const_33 = constant i32 2
@const_41 = constant i32 1
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_14 = alloca {  }
    %var_15 = load {  }, ptr %var_14
    store {  } %var_15, ptr %var_14
    %var_21 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_22 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_21
    %var_23 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_22, void (i32*, {  }, i32)* @print_int_wrap, 0
    %var_24 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_23, {  } %var_15, 1
    store { void (i32*, {  }, i32)*, {  } } %var_24, ptr %var_21
    %var_26 = alloca {  }
    %var_27 = load {  }, ptr %var_26
    store {  } %var_27, ptr %var_26
    %var_37 = alloca { void (i32*, {  }, i32, i32)*, {  } }
    %var_38 = load { void (i32*, {  }, i32, i32)*, {  } }, ptr %var_37
    %var_39 = insertvalue { void (i32*, {  }, i32, i32)*, {  } } %var_38, void (i32*, {  }, i32, i32)* @fn_25, 0
    %var_40 = insertvalue { void (i32*, {  }, i32, i32)*, {  } } %var_39, {  } %var_27, 1
    store { void (i32*, {  }, i32, i32)*, {  } } %var_40, ptr %var_37
    %var_42 = load i32, ptr @const_41
    %var_43 = load i32, ptr @const_33
    %var_44 = extractvalue { void (i32*, {  }, i32, i32)*, {  } } %var_40, 0
    %var_45 = extractvalue { void (i32*, {  }, i32, i32)*, {  } } %var_40, 1
    %var_46 = alloca i32
    call void %var_44(i32* %var_46, {  } %var_45, i32 %var_42, i32 %var_43)
    %var_47 = load i32, ptr %var_46
    %var_48 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_24, 0
    %var_49 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_24, 1
    %var_50 = alloca i32
    call void %var_48(i32* %var_50, {  } %var_49, i32 %var_47)
    %var_51 = load i32, ptr %var_50
    ret i32 0
}
declare i32 @print_int(i32)
define void @print_int_wrap(ptr sret(i32) %var_16, {  } %var_17, i32 %var_18) {
  entry19: 
    %var_20 = call i32 @print_int(i32 %var_18)
    store i32 %var_20, ptr %var_16
    ret void
}
define void @fn_25(ptr sret(i32) %var_28, {  } %var_29, i32 %var_30, i32 %var_31) {
  entry32: 
    %var_34 = load i32, ptr @const_33
    %var_35 = mul i32 %var_34, %var_30
    %var_36 = add i32 %var_31, %var_35
    store i32 %var_36, ptr %var_28
    ret void
}
"
`;

exports[`simply typed lambda calc compilation > function multiple args > stderr 1`] = `[]`;

exports[`simply typed lambda calc compilation > function multiple args > stdout 1`] = `
[
  "4
",
]
`;

exports[`simply typed lambda calc compilation > hello world > compiled 1`] = `
"@const_15 = constant [13 x i8] c"hello world!\\00"
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_4 = alloca {  }
    %var_5 = load {  }, ptr %var_4
    store {  } %var_5, ptr %var_4
    %var_11 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_12 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_11
    %var_13 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_12, void (i8**, {  }, i8*)* @print_string_wrap, 0
    %var_14 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_13, {  } %var_5, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_14, ptr %var_11
    %var_16 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_14, 0
    %var_17 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_14, 1
    %var_18 = alloca i8*
    call void %var_16(i8** %var_18, {  } %var_17, i8* @const_15)
    %var_19 = load i8*, ptr %var_18
    ret i32 0
}
declare i8* @print_string(i8*)
define void @print_string_wrap(ptr sret(i8*) %var_6, {  } %var_7, i8* %var_8) {
  entry9: 
    %var_10 = call i8* @print_string(i8* %var_8)
    store i8* %var_10, ptr %var_6
    ret void
}
"
`;

exports[`simply typed lambda calc compilation > hello world > stderr 1`] = `[]`;

exports[`simply typed lambda calc compilation > hello world > stdout 1`] = `
[
  "hello world!
",
]
`;

exports[`simply typed lambda calc compilation > hello world string > compiled 1`] = `
"@const_2 = constant [13 x i8] c"hello world!\\00"
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    ret i32 0
}
"
`;

exports[`simply typed lambda calc compilation > hello world string > stderr 1`] = `[]`;

exports[`simply typed lambda calc compilation > hello world string > stdout 1`] = `[]`;

exports[`simply typed lambda calc compilation > print number > compiled 1`] = `
"@const_15 = constant i32 1
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_4 = alloca {  }
    %var_5 = load {  }, ptr %var_4
    store {  } %var_5, ptr %var_4
    %var_11 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_12 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_11
    %var_13 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_12, void (i32*, {  }, i32)* @print_int_wrap, 0
    %var_14 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_13, {  } %var_5, 1
    store { void (i32*, {  }, i32)*, {  } } %var_14, ptr %var_11
    %var_16 = load i32, ptr @const_15
    %var_17 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_14, 0
    %var_18 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_14, 1
    %var_19 = alloca i32
    call void %var_17(i32* %var_19, {  } %var_18, i32 %var_16)
    %var_20 = load i32, ptr %var_19
    ret i32 0
}
declare i32 @print_int(i32)
define void @print_int_wrap(ptr sret(i32) %var_6, {  } %var_7, i32 %var_8) {
  entry9: 
    %var_10 = call i32 @print_int(i32 %var_8)
    store i32 %var_10, ptr %var_6
    ret void
}
"
`;

exports[`simply typed lambda calc compilation > print number > stderr 1`] = `[]`;

exports[`simply typed lambda calc compilation > print number > stdout 1`] = `
[
  "1
",
]
`;

exports[`structured programming compilation > block > compiled 1`] = `
"@const_20 = constant i32 123
@const_22 = constant i32 234
@const_24 = constant i32 345
@const_26 = constant i32 456
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_9 = alloca {  }
    %var_10 = load {  }, ptr %var_9
    store {  } %var_10, ptr %var_9
    %var_16 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_17 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_16
    %var_18 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_17, void (i32*, {  }, i32)* @print_int_wrap, 0
    %var_19 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_18, {  } %var_10, 1
    store { void (i32*, {  }, i32)*, {  } } %var_19, ptr %var_16
    %var_21 = load i32, ptr @const_20
    %var_23 = load i32, ptr @const_22
    %var_25 = load i32, ptr @const_24
    %var_27 = load i32, ptr @const_26
    %var_28 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_19, 0
    %var_29 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_19, 1
    %var_30 = alloca i32
    call void %var_28(i32* %var_30, {  } %var_29, i32 %var_27)
    %var_31 = load i32, ptr %var_30
    ret i32 0
}
declare i32 @print_int(i32)
define void @print_int_wrap(ptr sret(i32) %var_11, {  } %var_12, i32 %var_13) {
  entry14: 
    %var_15 = call i32 @print_int(i32 %var_13)
    store i32 %var_15, ptr %var_11
    ret void
}
"
`;

exports[`structured programming compilation > block > stderr 1`] = `[]`;

exports[`structured programming compilation > block > stdout 1`] = `
[
  "456
",
]
`;

exports[`structured programming compilation > block variable assingment > compiled 1`] = `
"@const_25 = constant i32 123
@const_27 = constant i32 1
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_14 = alloca {  }
    %var_15 = load {  }, ptr %var_14
    store {  } %var_15, ptr %var_14
    %var_21 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_22 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_21
    %var_23 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_22, void (i32*, {  }, i32)* @print_int_wrap, 0
    %var_24 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_23, {  } %var_15, 1
    store { void (i32*, {  }, i32)*, {  } } %var_24, ptr %var_21
    %var_26 = load i32, ptr @const_25
    %var_28 = load i32, ptr @const_27
    %var_29 = add i32 %var_26, %var_28
    %var_30 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_24, 0
    %var_31 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_24, 1
    %var_32 = alloca i32
    call void %var_30(i32* %var_32, {  } %var_31, i32 %var_29)
    %var_33 = load i32, ptr %var_32
    ret i32 0
}
declare i32 @print_int(i32)
define void @print_int_wrap(ptr sret(i32) %var_16, {  } %var_17, i32 %var_18) {
  entry19: 
    %var_20 = call i32 @print_int(i32 %var_18)
    store i32 %var_20, ptr %var_16
    ret void
}
"
`;

exports[`structured programming compilation > block variable assingment > stderr 1`] = `[]`;

exports[`structured programming compilation > block variable assingment > stdout 1`] = `
[
  "124
",
]
`;

exports[`structured programming compilation > block variable declaration > compiled 1`] = `
"@const_20 = constant i32 123
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_9 = alloca {  }
    %var_10 = load {  }, ptr %var_9
    store {  } %var_10, ptr %var_9
    %var_16 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_17 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_16
    %var_18 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_17, void (i32*, {  }, i32)* @print_int_wrap, 0
    %var_19 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_18, {  } %var_10, 1
    store { void (i32*, {  }, i32)*, {  } } %var_19, ptr %var_16
    %var_21 = load i32, ptr @const_20
    %var_22 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_19, 0
    %var_23 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_19, 1
    %var_24 = alloca i32
    call void %var_22(i32* %var_24, {  } %var_23, i32 %var_21)
    %var_25 = load i32, ptr %var_24
    ret i32 0
}
declare i32 @print_int(i32)
define void @print_int_wrap(ptr sret(i32) %var_11, {  } %var_12, i32 %var_13) {
  entry14: 
    %var_15 = call i32 @print_int(i32 %var_13)
    store i32 %var_15, ptr %var_11
    ret void
}
"
`;

exports[`structured programming compilation > block variable declaration > stderr 1`] = `[]`;

exports[`structured programming compilation > block variable declaration > stdout 1`] = `
[
  "123
",
]
`;

exports[`structured programming compilation > block variable shadowing > compiled 1`] = `
"@const_23 = constant i32 123
@const_25 = constant i32 234
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_12 = alloca {  }
    %var_13 = load {  }, ptr %var_12
    store {  } %var_13, ptr %var_12
    %var_19 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_20 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_19
    %var_21 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_20, void (i32*, {  }, i32)* @print_int_wrap, 0
    %var_22 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_21, {  } %var_13, 1
    store { void (i32*, {  }, i32)*, {  } } %var_22, ptr %var_19
    %var_24 = load i32, ptr @const_23
    %var_26 = load i32, ptr @const_25
    %var_27 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_22, 0
    %var_28 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_22, 1
    %var_29 = alloca i32
    call void %var_27(i32* %var_29, {  } %var_28, i32 %var_26)
    %var_30 = load i32, ptr %var_29
    ret i32 0
}
declare i32 @print_int(i32)
define void @print_int_wrap(ptr sret(i32) %var_14, {  } %var_15, i32 %var_16) {
  entry17: 
    %var_18 = call i32 @print_int(i32 %var_16)
    store i32 %var_18, ptr %var_14
    ret void
}
"
`;

exports[`structured programming compilation > block variable shadowing > stderr 1`] = `[]`;

exports[`structured programming compilation > block variable shadowing > stdout 1`] = `
[
  "234
",
]
`;

exports[`structured programming compilation > hello world twice > compiled 1`] = `
"@const_18 = constant [13 x i8] c"hello world!\\00"
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_7 = alloca {  }
    %var_8 = load {  }, ptr %var_7
    store {  } %var_8, ptr %var_7
    %var_14 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_15 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_14
    %var_16 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_15, void (i8**, {  }, i8*)* @print_string_wrap, 0
    %var_17 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_16, {  } %var_8, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_17, ptr %var_14
    %var_19 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_17, 0
    %var_20 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_17, 1
    %var_21 = alloca i8*
    call void %var_19(i8** %var_21, {  } %var_20, i8* @const_18)
    %var_22 = load i8*, ptr %var_21
    %var_23 = alloca {  }
    %var_24 = load {  }, ptr %var_23
    store {  } %var_24, ptr %var_23
    %var_25 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_26 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_25
    %var_27 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_26, void (i8**, {  }, i8*)* @print_string_wrap, 0
    %var_28 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_27, {  } %var_24, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_28, ptr %var_25
    %var_29 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_28, 0
    %var_30 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_28, 1
    %var_31 = alloca i8*
    call void %var_29(i8** %var_31, {  } %var_30, i8* @const_18)
    %var_32 = load i8*, ptr %var_31
    ret i32 0
}
declare i8* @print_string(i8*)
define void @print_string_wrap(ptr sret(i8*) %var_9, {  } %var_10, i8* %var_11) {
  entry12: 
    %var_13 = call i8* @print_string(i8* %var_11)
    store i8* %var_13, ptr %var_9
    ret void
}
"
`;

exports[`structured programming compilation > hello world twice > stderr 1`] = `[]`;

exports[`structured programming compilation > hello world twice > stdout 1`] = `
[
  "hello world!
hello world!
",
]
`;

exports[`structured programming compilation > if-then > compiled 1`] = `
"@const_19 = constant i1 1
@const_23 = constant i32 123
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_8 = alloca {  }
    %var_9 = load {  }, ptr %var_8
    store {  } %var_9, ptr %var_8
    %var_15 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_16 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_15
    %var_17 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_16, void (i32*, {  }, i32)* @print_int_wrap, 0
    %var_18 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_17, {  } %var_9, 1
    store { void (i32*, {  }, i32)*, {  } } %var_18, ptr %var_15
    %var_20 = load i1, ptr @const_19
    br i1 %var_20, label %then22, label %if_rest21
  then22: 
    %var_24 = load i32, ptr @const_23
    br label %if_rest21
  if_rest21: 
    %var_25 = phi i32 [%var_24, %then22], [undef, %main]
    %var_26 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_18, 0
    %var_27 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_18, 1
    %var_28 = alloca i32
    call void %var_26(i32* %var_28, {  } %var_27, i32 %var_25)
    %var_29 = load i32, ptr %var_28
    ret i32 0
}
declare i32 @print_int(i32)
define void @print_int_wrap(ptr sret(i32) %var_10, {  } %var_11, i32 %var_12) {
  entry13: 
    %var_14 = call i32 @print_int(i32 %var_12)
    store i32 %var_14, ptr %var_10
    ret void
}
"
`;

exports[`structured programming compilation > if-then > stderr 1`] = `[]`;

exports[`structured programming compilation > if-then > stdout 1`] = `
[
  "123
",
]
`;

exports[`structured programming compilation > if-then-else > compiled 1`] = `
"@const_22 = constant i1 0
@const_26 = constant i32 123
@const_29 = constant i32 456
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_11 = alloca {  }
    %var_12 = load {  }, ptr %var_11
    store {  } %var_12, ptr %var_11
    %var_18 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_19 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_18
    %var_20 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_19, void (i32*, {  }, i32)* @print_int_wrap, 0
    %var_21 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_20, {  } %var_12, 1
    store { void (i32*, {  }, i32)*, {  } } %var_21, ptr %var_18
    %var_23 = load i1, ptr @const_22
    br i1 %var_23, label %then25, label %else28
  then25: 
    %var_27 = load i32, ptr @const_26
    br label %if_rest24
  else28: 
    %var_30 = load i32, ptr @const_29
    br label %if_rest24
  if_rest24: 
    %var_31 = phi i32 [%var_27, %then25], [%var_30, %else28]
    %var_32 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_21, 0
    %var_33 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_21, 1
    %var_34 = alloca i32
    call void %var_32(i32* %var_34, {  } %var_33, i32 %var_31)
    %var_35 = load i32, ptr %var_34
    ret i32 0
}
declare i32 @print_int(i32)
define void @print_int_wrap(ptr sret(i32) %var_13, {  } %var_14, i32 %var_15) {
  entry16: 
    %var_17 = call i32 @print_int(i32 %var_15)
    store i32 %var_17, ptr %var_13
    ret void
}
"
`;

exports[`structured programming compilation > if-then-else > stderr 1`] = `[]`;

exports[`structured programming compilation > if-then-else > stdout 1`] = `
[
  "456
",
]
`;

exports[`structured programming compilation > sequence > compiled 1`] = `
"@const_19 = constant i32 123
@const_21 = constant i32 234
@const_23 = constant i32 345
@const_25 = constant i32 456
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_8 = alloca {  }
    %var_9 = load {  }, ptr %var_8
    store {  } %var_9, ptr %var_8
    %var_15 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_16 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_15
    %var_17 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_16, void (i32*, {  }, i32)* @print_int_wrap, 0
    %var_18 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_17, {  } %var_9, 1
    store { void (i32*, {  }, i32)*, {  } } %var_18, ptr %var_15
    %var_20 = load i32, ptr @const_19
    %var_22 = load i32, ptr @const_21
    %var_24 = load i32, ptr @const_23
    %var_26 = load i32, ptr @const_25
    %var_27 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_18, 0
    %var_28 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_18, 1
    %var_29 = alloca i32
    call void %var_27(i32* %var_29, {  } %var_28, i32 %var_26)
    %var_30 = load i32, ptr %var_29
    ret i32 0
}
declare i32 @print_int(i32)
define void @print_int_wrap(ptr sret(i32) %var_10, {  } %var_11, i32 %var_12) {
  entry13: 
    %var_14 = call i32 @print_int(i32 %var_12)
    store i32 %var_14, ptr %var_10
    ret void
}
"
`;

exports[`structured programming compilation > sequence > stderr 1`] = `[]`;

exports[`structured programming compilation > sequence > stdout 1`] = `
[
  "456
",
]
`;

exports[`structured programming compilation > two prints > compiled 1`] = `
"@const_18 = constant [13 x i8] c"hello world!\\00"
@const_29 = constant [15 x i8] c"hello world 2!\\00"
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_7 = alloca {  }
    %var_8 = load {  }, ptr %var_7
    store {  } %var_8, ptr %var_7
    %var_14 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_15 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_14
    %var_16 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_15, void (i8**, {  }, i8*)* @print_string_wrap, 0
    %var_17 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_16, {  } %var_8, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_17, ptr %var_14
    %var_19 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_17, 0
    %var_20 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_17, 1
    %var_21 = alloca i8*
    call void %var_19(i8** %var_21, {  } %var_20, i8* @const_18)
    %var_22 = load i8*, ptr %var_21
    %var_23 = alloca {  }
    %var_24 = load {  }, ptr %var_23
    store {  } %var_24, ptr %var_23
    %var_25 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_26 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_25
    %var_27 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_26, void (i8**, {  }, i8*)* @print_string_wrap, 0
    %var_28 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_27, {  } %var_24, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_28, ptr %var_25
    %var_30 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_28, 0
    %var_31 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_28, 1
    %var_32 = alloca i8*
    call void %var_30(i8** %var_32, {  } %var_31, i8* @const_29)
    %var_33 = load i8*, ptr %var_32
    ret i32 0
}
declare i8* @print_string(i8*)
define void @print_string_wrap(ptr sret(i8*) %var_9, {  } %var_10, i8* %var_11) {
  entry12: 
    %var_13 = call i8* @print_string(i8* %var_11)
    store i8* %var_13, ptr %var_9
    ret void
}
"
`;

exports[`structured programming compilation > two prints > stderr 1`] = `[]`;

exports[`structured programming compilation > two prints > stdout 1`] = `
[
  "hello world!
hello world 2!
",
]
`;
