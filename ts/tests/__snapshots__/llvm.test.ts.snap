// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`compilation 2 > apply > compiled 1`] = `
"@const_19 = constant [4 x i8] c"%i
\\00"
@const_67 = constant i32 2
define i32 @main() {
  main: 
    %var_21 = alloca {  }
    %var_22 = load {  }, ptr %var_21
    store {  } %var_22, ptr %var_21
    %var_23 = alloca { void (i32*, { }, i32)*, {  } }
    %var_24 = load { void (i32*, { }, i32)*, {  } }, ptr %var_23
    %var_25 = insertvalue { void (i32*, { }, i32)*, {  } } %var_24, void (i32*, { }, i32)* @printInt, 0
    %var_26 = insertvalue { void (i32*, { }, i32)*, {  } } %var_25, {  } %var_22, 1
    store { void (i32*, { }, i32)*, {  } } %var_26, ptr %var_23
    %var_28 = alloca {  }
    %var_29 = load {  }, ptr %var_28
    store {  } %var_29, ptr %var_28
    %var_49 = alloca { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } }
    %var_50 = load { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } }, ptr %var_49
    %var_51 = insertvalue { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_50, void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }*, {  }, { void (i32*, {  }, i32)*, {  } })* @fn_27, 0
    %var_52 = insertvalue { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_51, {  } %var_29, 1
    store { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_52, ptr %var_49
    %var_54 = alloca {  }
    %var_55 = load {  }, ptr %var_54
    store {  } %var_55, ptr %var_54
    %var_59 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_60 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_59
    %var_61 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_60, void (i32*, {  }, i32)* @fn_53, 0
    %var_62 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_61, {  } %var_55, 1
    store { void (i32*, {  }, i32)*, {  } } %var_62, ptr %var_59
    %var_63 = extractvalue { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_52, 0
    %var_64 = extractvalue { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_52, 1
    %var_65 = alloca { void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }
    call void %var_63({ void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }* %var_65, {  } %var_64, { void (i32*, {  }, i32)*, {  } } %var_62)
    %var_66 = load { void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }, ptr %var_65
    %var_68 = load i32, ptr @const_67
    %var_69 = extractvalue { void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } } %var_66, 0
    %var_70 = extractvalue { void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } } %var_66, 1
    %var_71 = alloca i32
    call void %var_69(i32* %var_71, { { void (i32*, {  }, i32)*, {  } } } %var_70, i32 %var_68)
    %var_72 = load i32, ptr %var_71
    %var_73 = extractvalue { void (i32*, { }, i32)*, {  } } %var_26, 0
    %var_74 = extractvalue { void (i32*, { }, i32)*, {  } } %var_26, 1
    %var_75 = alloca i32
    call void %var_73(i32* %var_75, { } %var_74, i32 %var_72)
    %var_76 = load i32, ptr %var_75
    ret i32 0
}
declare i32 @printf(i8*, ...)
define void @printInt(ptr sret(i32) %var_16, { } %var_17, i32 %var_18) {
  entry: 
    %var_20 = call i32 @printf(i8* @const_19, i32 %var_18)
    store i32 %var_20, ptr %var_16
    ret void
}
define void @fn_27(ptr sret({ void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }) %var_30, {  } %var_31, { void (i32*, {  }, i32)*, {  } } %var_32) {
  entry: 
    %var_34 = alloca { { void (i32*, {  }, i32)*, {  } } }
    %var_35 = load { { void (i32*, {  }, i32)*, {  } } }, ptr %var_34
    %var_36 = insertvalue { { void (i32*, {  }, i32)*, {  } } } %var_35, { void (i32*, {  }, i32)*, {  } } %var_32, 0
    store { { void (i32*, {  }, i32)*, {  } } } %var_36, ptr %var_34
    %var_45 = alloca { void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }
    %var_46 = load { void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }, ptr %var_45
    %var_47 = insertvalue { void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } } %var_46, void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)* @fn_33, 0
    %var_48 = insertvalue { void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } } %var_47, { { void (i32*, {  }, i32)*, {  } } } %var_36, 1
    store { void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } } %var_48, ptr %var_45
    store { void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } } %var_48, ptr %var_30
    ret void
}
define void @fn_33(ptr sret(i32) %var_37, { { void (i32*, {  }, i32)*, {  } } } %var_38, i32 %var_39) {
  entry: 
    %var_40 = extractvalue { { void (i32*, {  }, i32)*, {  } } } %var_38, 0
    %var_41 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_40, 0
    %var_42 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_40, 1
    %var_43 = alloca i32
    call void %var_41(i32* %var_43, {  } %var_42, i32 %var_39)
    %var_44 = load i32, ptr %var_43
    store i32 %var_44, ptr %var_37
    ret void
}
define void @fn_53(ptr sret(i32) %var_56, {  } %var_57, i32 %var_58) {
  entry: 
    store i32 %var_58, ptr %var_56
    ret void
}
"
`;

exports[`compilation 2 > apply > stderr 1`] = `[]`;

exports[`compilation 2 > apply > stdout 1`] = `
[
  "2
",
]
`;

exports[`compilation 2 > church tuple > compiled 1`] = `
"@const_27 = constant [4 x i8] c"%i
\\00"
@const_79 = constant i32 1
@const_85 = constant i32 2
define i32 @main() {
  main: 
    %var_29 = alloca {  }
    %var_30 = load {  }, ptr %var_29
    store {  } %var_30, ptr %var_29
    %var_31 = alloca { void (i32*, { }, i32)*, {  } }
    %var_32 = load { void (i32*, { }, i32)*, {  } }, ptr %var_31
    %var_33 = insertvalue { void (i32*, { }, i32)*, {  } } %var_32, void (i32*, { }, i32)* @printInt, 0
    %var_34 = insertvalue { void (i32*, { }, i32)*, {  } } %var_33, {  } %var_30, 1
    store { void (i32*, { }, i32)*, {  } } %var_34, ptr %var_31
    %var_36 = alloca {  }
    %var_37 = load {  }, ptr %var_36
    store {  } %var_37, ptr %var_36
    %var_75 = alloca { void ({ void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } }
    %var_76 = load { void ({ void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } }, ptr %var_75
    %var_77 = insertvalue { void ({ void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_76, void ({ void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)* @fn_35, 0
    %var_78 = insertvalue { void ({ void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_77, {  } %var_37, 1
    store { void ({ void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_78, ptr %var_75
    %var_80 = load i32, ptr @const_79
    %var_81 = extractvalue { void ({ void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_78, 0
    %var_82 = extractvalue { void ({ void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_78, 1
    %var_83 = alloca { void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }
    call void %var_81({ void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }* %var_83, {  } %var_82, i32 %var_80)
    %var_84 = load { void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }, ptr %var_83
    %var_86 = load i32, ptr @const_85
    %var_87 = extractvalue { void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_84, 0
    %var_88 = extractvalue { void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_84, 1
    %var_89 = alloca { void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }
    call void %var_87({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }* %var_89, { i32 } %var_88, i32 %var_86)
    %var_90 = load { void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }, ptr %var_89
    %var_92 = alloca {  }
    %var_93 = load {  }, ptr %var_92
    store {  } %var_93, ptr %var_92
    %var_109 = alloca { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } }
    %var_110 = load { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } }, ptr %var_109
    %var_111 = insertvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_110, void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)* @fn_91, 0
    %var_112 = insertvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_111, {  } %var_93, 1
    store { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_112, ptr %var_109
    %var_113 = extractvalue { void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } } %var_90, 0
    %var_114 = extractvalue { void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } } %var_90, 1
    %var_115 = alloca i32
    call void %var_113(i32* %var_115, { i32, i32 } %var_114, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_112)
    %var_116 = load i32, ptr %var_115
    %var_117 = extractvalue { void (i32*, { }, i32)*, {  } } %var_34, 0
    %var_118 = extractvalue { void (i32*, { }, i32)*, {  } } %var_34, 1
    %var_119 = alloca i32
    call void %var_117(i32* %var_119, { } %var_118, i32 %var_116)
    %var_120 = load i32, ptr %var_119
    ret i32 0
}
declare i32 @printf(i8*, ...)
define void @printInt(ptr sret(i32) %var_24, { } %var_25, i32 %var_26) {
  entry: 
    %var_28 = call i32 @printf(i8* @const_27, i32 %var_26)
    store i32 %var_28, ptr %var_24
    ret void
}
define void @fn_35(ptr sret({ void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }) %var_38, {  } %var_39, i32 %var_40) {
  entry: 
    %var_42 = alloca { i32 }
    %var_43 = load { i32 }, ptr %var_42
    %var_44 = insertvalue { i32 } %var_43, i32 %var_40, 0
    store { i32 } %var_44, ptr %var_42
    %var_71 = alloca { void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }
    %var_72 = load { void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }, ptr %var_71
    %var_73 = insertvalue { void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_72, void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)* @fn_41, 0
    %var_74 = insertvalue { void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_73, { i32 } %var_44, 1
    store { void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_74, ptr %var_71
    store { void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_74, ptr %var_38
    ret void
}
define void @fn_41(ptr sret({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }) %var_45, { i32 } %var_46, i32 %var_47) {
  entry: 
    %var_48 = extractvalue { i32 } %var_46, 0
    %var_50 = alloca { i32, i32 }
    %var_51 = load { i32, i32 }, ptr %var_50
    %var_52 = insertvalue { i32, i32 } %var_51, i32 %var_48, 0
    %var_53 = insertvalue { i32, i32 } %var_52, i32 %var_47, 1
    store { i32, i32 } %var_53, ptr %var_50
    %var_67 = alloca { void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }
    %var_68 = load { void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }, ptr %var_67
    %var_69 = insertvalue { void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } } %var_68, void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })* @fn_49, 0
    %var_70 = insertvalue { void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } } %var_69, { i32, i32 } %var_53, 1
    store { void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } } %var_70, ptr %var_67
    store { void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } } %var_70, ptr %var_45
    ret void
}
define void @fn_49(ptr sret(i32) %var_54, { i32, i32 } %var_55, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_56) {
  entry: 
    %var_57 = extractvalue { i32, i32 } %var_55, 0
    %var_58 = extractvalue { i32, i32 } %var_55, 1
    %var_59 = extractvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_56, 0
    %var_60 = extractvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_56, 1
    %var_61 = alloca { void (i32*, { i32 }, i32)*, { i32 } }
    call void %var_59({ void (i32*, { i32 }, i32)*, { i32 } }* %var_61, {  } %var_60, i32 %var_57)
    %var_62 = load { void (i32*, { i32 }, i32)*, { i32 } }, ptr %var_61
    %var_63 = extractvalue { void (i32*, { i32 }, i32)*, { i32 } } %var_62, 0
    %var_64 = extractvalue { void (i32*, { i32 }, i32)*, { i32 } } %var_62, 1
    %var_65 = alloca i32
    call void %var_63(i32* %var_65, { i32 } %var_64, i32 %var_58)
    %var_66 = load i32, ptr %var_65
    store i32 %var_66, ptr %var_54
    ret void
}
define void @fn_91(ptr sret({ void (i32*, { i32 }, i32)*, { i32 } }) %var_94, {  } %var_95, i32 %var_96) {
  entry: 
    %var_98 = alloca { i32 }
    %var_99 = load { i32 }, ptr %var_98
    %var_100 = insertvalue { i32 } %var_99, i32 %var_96, 0
    store { i32 } %var_100, ptr %var_98
    %var_105 = alloca { void (i32*, { i32 }, i32)*, { i32 } }
    %var_106 = load { void (i32*, { i32 }, i32)*, { i32 } }, ptr %var_105
    %var_107 = insertvalue { void (i32*, { i32 }, i32)*, { i32 } } %var_106, void (i32*, { i32 }, i32)* @fn_97, 0
    %var_108 = insertvalue { void (i32*, { i32 }, i32)*, { i32 } } %var_107, { i32 } %var_100, 1
    store { void (i32*, { i32 }, i32)*, { i32 } } %var_108, ptr %var_105
    store { void (i32*, { i32 }, i32)*, { i32 } } %var_108, ptr %var_94
    ret void
}
define void @fn_97(ptr sret(i32) %var_101, { i32 } %var_102, i32 %var_103) {
  entry: 
    %var_104 = extractvalue { i32 } %var_102, 0
    store i32 %var_104, ptr %var_101
    ret void
}
"
`;

exports[`compilation 2 > church tuple > stderr 1`] = `[]`;

exports[`compilation 2 > church tuple > stdout 1`] = `
[
  "1
",
]
`;

exports[`compilation 2 > church tuple 2 > compiled 1`] = `
"@const_20 = constant [4 x i8] c"%i
\\00"
@const_44 = constant i32 1
@const_46 = constant i32 2
define i32 @main() {
  main: 
    %var_22 = alloca {  }
    %var_23 = load {  }, ptr %var_22
    store {  } %var_23, ptr %var_22
    %var_24 = alloca { void (i32*, { }, i32)*, {  } }
    %var_25 = load { void (i32*, { }, i32)*, {  } }, ptr %var_24
    %var_26 = insertvalue { void (i32*, { }, i32)*, {  } } %var_25, void (i32*, { }, i32)* @printInt, 0
    %var_27 = insertvalue { void (i32*, { }, i32)*, {  } } %var_26, {  } %var_23, 1
    store { void (i32*, { }, i32)*, {  } } %var_27, ptr %var_24
    %var_29 = alloca {  }
    %var_30 = load {  }, ptr %var_29
    store {  } %var_30, ptr %var_29
    %var_40 = alloca { void (i32*, {  }, i32, i32, { void (i32*, {  }, i32, i32)*, {  } })*, {  } }
    %var_41 = load { void (i32*, {  }, i32, i32, { void (i32*, {  }, i32, i32)*, {  } })*, {  } }, ptr %var_40
    %var_42 = insertvalue { void (i32*, {  }, i32, i32, { void (i32*, {  }, i32, i32)*, {  } })*, {  } } %var_41, void (i32*, {  }, i32, i32, { void (i32*, {  }, i32, i32)*, {  } })* @fn_28, 0
    %var_43 = insertvalue { void (i32*, {  }, i32, i32, { void (i32*, {  }, i32, i32)*, {  } })*, {  } } %var_42, {  } %var_30, 1
    store { void (i32*, {  }, i32, i32, { void (i32*, {  }, i32, i32)*, {  } })*, {  } } %var_43, ptr %var_40
    %var_45 = load i32, ptr @const_44
    %var_47 = load i32, ptr @const_46
    %var_49 = alloca {  }
    %var_50 = load {  }, ptr %var_49
    store {  } %var_50, ptr %var_49
    %var_54 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_55 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_54
    %var_56 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_55, void (i32*, {  }, i32)* @fn_48, 0
    %var_57 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_56, {  } %var_50, 1
    store { void (i32*, {  }, i32)*, {  } } %var_57, ptr %var_54
    %var_58 = extractvalue { void (i32*, {  }, i32, i32, { void (i32*, {  }, i32, i32)*, {  } })*, {  } } %var_43, 0
    %var_59 = extractvalue { void (i32*, {  }, i32, i32, { void (i32*, {  }, i32, i32)*, {  } })*, {  } } %var_43, 1
    %var_60 = alloca i32
    call void %var_58(i32* %var_60, {  } %var_59, i32 %var_45, i32 %var_47, { void (i32*, {  }, i32, i32)*, {  } } %var_57)
    %var_61 = load i32, ptr %var_60
    %var_62 = extractvalue { void (i32*, { }, i32)*, {  } } %var_27, 0
    %var_63 = extractvalue { void (i32*, { }, i32)*, {  } } %var_27, 1
    %var_64 = alloca i32
    call void %var_62(i32* %var_64, { } %var_63, i32 %var_61)
    %var_65 = load i32, ptr %var_64
    ret i32 0
}
declare i32 @printf(i8*, ...)
define void @printInt(ptr sret(i32) %var_17, { } %var_18, i32 %var_19) {
  entry: 
    %var_21 = call i32 @printf(i8* @const_20, i32 %var_19)
    store i32 %var_21, ptr %var_17
    ret void
}
define void @fn_28(ptr sret(i32) %var_31, {  } %var_32, i32 %var_33, i32 %var_34, { void (i32*, {  }, i32, i32)*, {  } } %var_35) {
  entry: 
    %var_36 = extractvalue { void (i32*, {  }, i32, i32)*, {  } } %var_35, 0
    %var_37 = extractvalue { void (i32*, {  }, i32, i32)*, {  } } %var_35, 1
    %var_38 = alloca i32
    call void %var_36(i32* %var_38, {  } %var_37, i32 %var_33, i32 %var_34)
    %var_39 = load i32, ptr %var_38
    store i32 %var_39, ptr %var_31
    ret void
}
define void @fn_48(ptr sret(i32) %var_51, {  } %var_52, i32 %var_53) {
  entry: 
    store i32 %var_53, ptr %var_51
    ret void
}
"
`;

exports[`compilation 2 > church tuple 2 > stderr 1`] = `[]`;

exports[`compilation 2 > church tuple 2 > stdout 1`] = `
[
  "1
",
]
`;

exports[`compilation 2 > either > compiled 1`] = `
"@const_25 = constant [4 x i8] c"%i
\\00"
@const_73 = constant i32 1
define i32 @main() {
  main: 
    %var_27 = alloca {  }
    %var_28 = load {  }, ptr %var_27
    store {  } %var_28, ptr %var_27
    %var_29 = alloca { void (i32*, { }, i32)*, {  } }
    %var_30 = load { void (i32*, { }, i32)*, {  } }, ptr %var_29
    %var_31 = insertvalue { void (i32*, { }, i32)*, {  } } %var_30, void (i32*, { }, i32)* @printInt, 0
    %var_32 = insertvalue { void (i32*, { }, i32)*, {  } } %var_31, {  } %var_28, 1
    store { void (i32*, { }, i32)*, {  } } %var_32, ptr %var_29
    %var_34 = alloca {  }
    %var_35 = load {  }, ptr %var_34
    store {  } %var_35, ptr %var_34
    %var_69 = alloca { void ({ void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }*, {  }, i32)*, {  } }
    %var_70 = load { void ({ void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }*, {  }, i32)*, {  } }, ptr %var_69
    %var_71 = insertvalue { void ({ void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }*, {  }, i32)*, {  } } %var_70, void ({ void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }*, {  }, i32)* @fn_33, 0
    %var_72 = insertvalue { void ({ void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }*, {  }, i32)*, {  } } %var_71, {  } %var_35, 1
    store { void ({ void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }*, {  }, i32)*, {  } } %var_72, ptr %var_69
    %var_74 = load i32, ptr @const_73
    %var_75 = extractvalue { void ({ void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }*, {  }, i32)*, {  } } %var_72, 0
    %var_76 = extractvalue { void ({ void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }*, {  }, i32)*, {  } } %var_72, 1
    %var_77 = alloca { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }
    call void %var_75({ void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }* %var_77, {  } %var_76, i32 %var_74)
    %var_78 = load { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }, ptr %var_77
    %var_80 = alloca {  }
    %var_81 = load {  }, ptr %var_80
    store {  } %var_81, ptr %var_80
    %var_85 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_86 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_85
    %var_87 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_86, void (i32*, {  }, i32)* @fn_79, 0
    %var_88 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_87, {  } %var_81, 1
    store { void (i32*, {  }, i32)*, {  } } %var_88, ptr %var_85
    %var_89 = extractvalue { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } } %var_78, 0
    %var_90 = extractvalue { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } } %var_78, 1
    %var_91 = alloca { void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }
    call void %var_89({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }* %var_91, { i32 } %var_90, { void (i32*, {  }, i32)*, {  } } %var_88)
    %var_92 = load { void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }, ptr %var_91
    %var_94 = alloca {  }
    %var_95 = load {  }, ptr %var_94
    store {  } %var_95, ptr %var_94
    %var_99 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_100 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_99
    %var_101 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_100, void (i32*, {  }, i32)* @fn_93, 0
    %var_102 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_101, {  } %var_95, 1
    store { void (i32*, {  }, i32)*, {  } } %var_102, ptr %var_99
    %var_103 = extractvalue { void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } } %var_92, 0
    %var_104 = extractvalue { void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } } %var_92, 1
    %var_105 = alloca i32
    call void %var_103(i32* %var_105, { { void (i32*, {  }, i32)*, {  } }, i32 } %var_104, { void (i32*, {  }, i32)*, {  } } %var_102)
    %var_106 = load i32, ptr %var_105
    %var_107 = extractvalue { void (i32*, { }, i32)*, {  } } %var_32, 0
    %var_108 = extractvalue { void (i32*, { }, i32)*, {  } } %var_32, 1
    %var_109 = alloca i32
    call void %var_107(i32* %var_109, { } %var_108, i32 %var_106)
    %var_110 = load i32, ptr %var_109
    ret i32 0
}
declare i32 @printf(i8*, ...)
define void @printInt(ptr sret(i32) %var_22, { } %var_23, i32 %var_24) {
  entry: 
    %var_26 = call i32 @printf(i8* @const_25, i32 %var_24)
    store i32 %var_26, ptr %var_22
    ret void
}
define void @fn_33(ptr sret({ void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }) %var_36, {  } %var_37, i32 %var_38) {
  entry: 
    %var_40 = alloca { i32 }
    %var_41 = load { i32 }, ptr %var_40
    %var_42 = insertvalue { i32 } %var_41, i32 %var_38, 0
    store { i32 } %var_42, ptr %var_40
    %var_65 = alloca { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }
    %var_66 = load { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }, ptr %var_65
    %var_67 = insertvalue { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } } %var_66, void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })* @fn_39, 0
    %var_68 = insertvalue { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } } %var_67, { i32 } %var_42, 1
    store { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } } %var_68, ptr %var_65
    store { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } } %var_68, ptr %var_36
    ret void
}
define void @fn_39(ptr sret({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }) %var_43, { i32 } %var_44, { void (i32*, {  }, i32)*, {  } } %var_45) {
  entry: 
    %var_46 = extractvalue { i32 } %var_44, 0
    %var_48 = alloca { { void (i32*, {  }, i32)*, {  } }, i32 }
    %var_49 = load { { void (i32*, {  }, i32)*, {  } }, i32 }, ptr %var_48
    %var_50 = insertvalue { { void (i32*, {  }, i32)*, {  } }, i32 } %var_49, { void (i32*, {  }, i32)*, {  } } %var_45, 0
    %var_51 = insertvalue { { void (i32*, {  }, i32)*, {  } }, i32 } %var_50, i32 %var_46, 1
    store { { void (i32*, {  }, i32)*, {  } }, i32 } %var_51, ptr %var_48
    %var_61 = alloca { void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }
    %var_62 = load { void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }, ptr %var_61
    %var_63 = insertvalue { void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } } %var_62, void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })* @fn_47, 0
    %var_64 = insertvalue { void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } } %var_63, { { void (i32*, {  }, i32)*, {  } }, i32 } %var_51, 1
    store { void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } } %var_64, ptr %var_61
    store { void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } } %var_64, ptr %var_43
    ret void
}
define void @fn_47(ptr sret(i32) %var_52, { { void (i32*, {  }, i32)*, {  } }, i32 } %var_53, { void (i32*, {  }, i32)*, {  } } %var_54) {
  entry: 
    %var_55 = extractvalue { { void (i32*, {  }, i32)*, {  } }, i32 } %var_53, 0
    %var_56 = extractvalue { { void (i32*, {  }, i32)*, {  } }, i32 } %var_53, 1
    %var_57 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_55, 0
    %var_58 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_55, 1
    %var_59 = alloca i32
    call void %var_57(i32* %var_59, {  } %var_58, i32 %var_56)
    %var_60 = load i32, ptr %var_59
    store i32 %var_60, ptr %var_52
    ret void
}
define void @fn_79(ptr sret(i32) %var_82, {  } %var_83, i32 %var_84) {
  entry: 
    store i32 %var_84, ptr %var_82
    ret void
}
define void @fn_93(ptr sret(i32) %var_96, {  } %var_97, i32 %var_98) {
  entry: 
    store i32 %var_98, ptr %var_96
    ret void
}
"
`;

exports[`compilation 2 > either > stderr 1`] = `[]`;

exports[`compilation 2 > either > stdout 1`] = `
[
  "1
",
]
`;

exports[`compilation 2 > either 2 > compiled 1`] = `
"@const_21 = constant [4 x i8] c"%i
\\00"
@const_45 = constant i32 1
define i32 @main() {
  main: 
    %var_23 = alloca {  }
    %var_24 = load {  }, ptr %var_23
    store {  } %var_24, ptr %var_23
    %var_25 = alloca { void (i32*, { }, i32)*, {  } }
    %var_26 = load { void (i32*, { }, i32)*, {  } }, ptr %var_25
    %var_27 = insertvalue { void (i32*, { }, i32)*, {  } } %var_26, void (i32*, { }, i32)* @printInt, 0
    %var_28 = insertvalue { void (i32*, { }, i32)*, {  } } %var_27, {  } %var_24, 1
    store { void (i32*, { }, i32)*, {  } } %var_28, ptr %var_25
    %var_30 = alloca {  }
    %var_31 = load {  }, ptr %var_30
    store {  } %var_31, ptr %var_30
    %var_41 = alloca { void (i32*, {  }, i32, { void (i32*, {  }, i32)*, {  } }, { void (i32*, {  }, i32)*, {  } })*, {  } }
    %var_42 = load { void (i32*, {  }, i32, { void (i32*, {  }, i32)*, {  } }, { void (i32*, {  }, i32)*, {  } })*, {  } }, ptr %var_41
    %var_43 = insertvalue { void (i32*, {  }, i32, { void (i32*, {  }, i32)*, {  } }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_42, void (i32*, {  }, i32, { void (i32*, {  }, i32)*, {  } }, { void (i32*, {  }, i32)*, {  } })* @fn_29, 0
    %var_44 = insertvalue { void (i32*, {  }, i32, { void (i32*, {  }, i32)*, {  } }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_43, {  } %var_31, 1
    store { void (i32*, {  }, i32, { void (i32*, {  }, i32)*, {  } }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_44, ptr %var_41
    %var_46 = load i32, ptr @const_45
    %var_48 = alloca {  }
    %var_49 = load {  }, ptr %var_48
    store {  } %var_49, ptr %var_48
    %var_53 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_54 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_53
    %var_55 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_54, void (i32*, {  }, i32)* @fn_47, 0
    %var_56 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_55, {  } %var_49, 1
    store { void (i32*, {  }, i32)*, {  } } %var_56, ptr %var_53
    %var_58 = alloca {  }
    %var_59 = load {  }, ptr %var_58
    store {  } %var_59, ptr %var_58
    %var_63 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_64 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_63
    %var_65 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_64, void (i32*, {  }, i32)* @fn_57, 0
    %var_66 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_65, {  } %var_59, 1
    store { void (i32*, {  }, i32)*, {  } } %var_66, ptr %var_63
    %var_67 = extractvalue { void (i32*, {  }, i32, { void (i32*, {  }, i32)*, {  } }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_44, 0
    %var_68 = extractvalue { void (i32*, {  }, i32, { void (i32*, {  }, i32)*, {  } }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_44, 1
    %var_69 = alloca i32
    call void %var_67(i32* %var_69, {  } %var_68, i32 %var_46, { void (i32*, {  }, i32)*, {  } } %var_56, { void (i32*, {  }, i32)*, {  } } %var_66)
    %var_70 = load i32, ptr %var_69
    %var_71 = extractvalue { void (i32*, { }, i32)*, {  } } %var_28, 0
    %var_72 = extractvalue { void (i32*, { }, i32)*, {  } } %var_28, 1
    %var_73 = alloca i32
    call void %var_71(i32* %var_73, { } %var_72, i32 %var_70)
    %var_74 = load i32, ptr %var_73
    ret i32 0
}
declare i32 @printf(i8*, ...)
define void @printInt(ptr sret(i32) %var_18, { } %var_19, i32 %var_20) {
  entry: 
    %var_22 = call i32 @printf(i8* @const_21, i32 %var_20)
    store i32 %var_22, ptr %var_18
    ret void
}
define void @fn_29(ptr sret(i32) %var_32, {  } %var_33, i32 %var_34, { void (i32*, {  }, i32)*, {  } } %var_35, { void (i32*, {  }, i32)*, {  } } %var_36) {
  entry: 
    %var_37 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_35, 0
    %var_38 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_35, 1
    %var_39 = alloca i32
    call void %var_37(i32* %var_39, {  } %var_38, i32 %var_34)
    %var_40 = load i32, ptr %var_39
    store i32 %var_40, ptr %var_32
    ret void
}
define void @fn_47(ptr sret(i32) %var_50, {  } %var_51, i32 %var_52) {
  entry: 
    store i32 %var_52, ptr %var_50
    ret void
}
define void @fn_57(ptr sret(i32) %var_60, {  } %var_61, i32 %var_62) {
  entry: 
    store i32 %var_62, ptr %var_60
    ret void
}
"
`;

exports[`compilation 2 > either 2 > stderr 1`] = `[]`;

exports[`compilation 2 > either 2 > stdout 1`] = `
[
  "1
",
]
`;

exports[`compilation 2 > function application and literal print > compiled 1`] = `
"@const_13 = constant [4 x i8] c"%i
\\00"
@const_32 = constant i32 2
define i32 @main() {
  main: 
    %var_15 = alloca {  }
    %var_16 = load {  }, ptr %var_15
    store {  } %var_16, ptr %var_15
    %var_17 = alloca { void (i32*, { }, i32)*, {  } }
    %var_18 = load { void (i32*, { }, i32)*, {  } }, ptr %var_17
    %var_19 = insertvalue { void (i32*, { }, i32)*, {  } } %var_18, void (i32*, { }, i32)* @printInt, 0
    %var_20 = insertvalue { void (i32*, { }, i32)*, {  } } %var_19, {  } %var_16, 1
    store { void (i32*, { }, i32)*, {  } } %var_20, ptr %var_17
    %var_22 = alloca {  }
    %var_23 = load {  }, ptr %var_22
    store {  } %var_23, ptr %var_22
    %var_28 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_29 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_28
    %var_30 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_29, void (i32*, {  }, i32)* @fn_21, 0
    %var_31 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_30, {  } %var_23, 1
    store { void (i32*, {  }, i32)*, {  } } %var_31, ptr %var_28
    %var_33 = load i32, ptr @const_32
    %var_34 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_31, 0
    %var_35 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_31, 1
    %var_36 = alloca i32
    call void %var_34(i32* %var_36, {  } %var_35, i32 %var_33)
    %var_37 = load i32, ptr %var_36
    %var_38 = extractvalue { void (i32*, { }, i32)*, {  } } %var_20, 0
    %var_39 = extractvalue { void (i32*, { }, i32)*, {  } } %var_20, 1
    %var_40 = alloca i32
    call void %var_38(i32* %var_40, { } %var_39, i32 %var_37)
    %var_41 = load i32, ptr %var_40
    ret i32 0
}
declare i32 @printf(i8*, ...)
define void @printInt(ptr sret(i32) %var_10, { } %var_11, i32 %var_12) {
  entry: 
    %var_14 = call i32 @printf(i8* @const_13, i32 %var_12)
    store i32 %var_14, ptr %var_10
    ret void
}
define void @fn_21(ptr sret(i32) %var_24, {  } %var_25, i32 %var_26) {
  entry: 
    %var_27 = add i32 %var_26, %var_26
    store i32 %var_27, ptr %var_24
    ret void
}
"
`;

exports[`compilation 2 > function application and literal print > stderr 1`] = `[]`;

exports[`compilation 2 > function application and literal print > stdout 1`] = `
[
  "4
",
]
`;

exports[`compilation 2 > function closure > compiled 1`] = `
"@const_19 = constant [4 x i8] c"%i
\\00"
@const_41 = constant i32 2
@const_53 = constant i32 1
define i32 @main() {
  main: 
    %var_21 = alloca {  }
    %var_22 = load {  }, ptr %var_21
    store {  } %var_22, ptr %var_21
    %var_23 = alloca { void (i32*, { }, i32)*, {  } }
    %var_24 = load { void (i32*, { }, i32)*, {  } }, ptr %var_23
    %var_25 = insertvalue { void (i32*, { }, i32)*, {  } } %var_24, void (i32*, { }, i32)* @printInt, 0
    %var_26 = insertvalue { void (i32*, { }, i32)*, {  } } %var_25, {  } %var_22, 1
    store { void (i32*, { }, i32)*, {  } } %var_26, ptr %var_23
    %var_28 = alloca {  }
    %var_29 = load {  }, ptr %var_28
    store {  } %var_29, ptr %var_28
    %var_49 = alloca { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } }
    %var_50 = load { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } }, ptr %var_49
    %var_51 = insertvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_50, void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)* @fn_27, 0
    %var_52 = insertvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_51, {  } %var_29, 1
    store { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_52, ptr %var_49
    %var_54 = load i32, ptr @const_53
    %var_55 = extractvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_52, 0
    %var_56 = extractvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_52, 1
    %var_57 = alloca { void (i32*, { i32 }, i32)*, { i32 } }
    call void %var_55({ void (i32*, { i32 }, i32)*, { i32 } }* %var_57, {  } %var_56, i32 %var_54)
    %var_58 = load { void (i32*, { i32 }, i32)*, { i32 } }, ptr %var_57
    %var_59 = load i32, ptr @const_41
    %var_60 = extractvalue { void (i32*, { i32 }, i32)*, { i32 } } %var_58, 0
    %var_61 = extractvalue { void (i32*, { i32 }, i32)*, { i32 } } %var_58, 1
    %var_62 = alloca i32
    call void %var_60(i32* %var_62, { i32 } %var_61, i32 %var_59)
    %var_63 = load i32, ptr %var_62
    %var_64 = extractvalue { void (i32*, { }, i32)*, {  } } %var_26, 0
    %var_65 = extractvalue { void (i32*, { }, i32)*, {  } } %var_26, 1
    %var_66 = alloca i32
    call void %var_64(i32* %var_66, { } %var_65, i32 %var_63)
    %var_67 = load i32, ptr %var_66
    ret i32 0
}
declare i32 @printf(i8*, ...)
define void @printInt(ptr sret(i32) %var_16, { } %var_17, i32 %var_18) {
  entry: 
    %var_20 = call i32 @printf(i8* @const_19, i32 %var_18)
    store i32 %var_20, ptr %var_16
    ret void
}
define void @fn_27(ptr sret({ void (i32*, { i32 }, i32)*, { i32 } }) %var_30, {  } %var_31, i32 %var_32) {
  entry: 
    %var_34 = alloca { i32 }
    %var_35 = load { i32 }, ptr %var_34
    %var_36 = insertvalue { i32 } %var_35, i32 %var_32, 0
    store { i32 } %var_36, ptr %var_34
    %var_45 = alloca { void (i32*, { i32 }, i32)*, { i32 } }
    %var_46 = load { void (i32*, { i32 }, i32)*, { i32 } }, ptr %var_45
    %var_47 = insertvalue { void (i32*, { i32 }, i32)*, { i32 } } %var_46, void (i32*, { i32 }, i32)* @fn_33, 0
    %var_48 = insertvalue { void (i32*, { i32 }, i32)*, { i32 } } %var_47, { i32 } %var_36, 1
    store { void (i32*, { i32 }, i32)*, { i32 } } %var_48, ptr %var_45
    store { void (i32*, { i32 }, i32)*, { i32 } } %var_48, ptr %var_30
    ret void
}
define void @fn_33(ptr sret(i32) %var_37, { i32 } %var_38, i32 %var_39) {
  entry: 
    %var_40 = extractvalue { i32 } %var_38, 0
    %var_42 = load i32, ptr @const_41
    %var_43 = mul i32 %var_42, %var_40
    %var_44 = add i32 %var_39, %var_43
    store i32 %var_44, ptr %var_37
    ret void
}
"
`;

exports[`compilation 2 > function closure > stderr 1`] = `[]`;

exports[`compilation 2 > function closure > stdout 1`] = `
[
  "4
",
]
`;

exports[`compilation 2 > function deep closure > compiled 1`] = `
"@const_23 = constant [4 x i8] c"%i
\\00"
@const_69 = constant i32 1
@const_75 = constant i32 3
@const_81 = constant i32 5
define i32 @main() {
  main: 
    %var_25 = alloca {  }
    %var_26 = load {  }, ptr %var_25
    store {  } %var_26, ptr %var_25
    %var_27 = alloca { void (i32*, { }, i32)*, {  } }
    %var_28 = load { void (i32*, { }, i32)*, {  } }, ptr %var_27
    %var_29 = insertvalue { void (i32*, { }, i32)*, {  } } %var_28, void (i32*, { }, i32)* @printInt, 0
    %var_30 = insertvalue { void (i32*, { }, i32)*, {  } } %var_29, {  } %var_26, 1
    store { void (i32*, { }, i32)*, {  } } %var_30, ptr %var_27
    %var_32 = alloca {  }
    %var_33 = load {  }, ptr %var_32
    store {  } %var_33, ptr %var_32
    %var_65 = alloca { void ({ void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } }
    %var_66 = load { void ({ void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } }, ptr %var_65
    %var_67 = insertvalue { void ({ void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_66, void ({ void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)* @fn_31, 0
    %var_68 = insertvalue { void ({ void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_67, {  } %var_33, 1
    store { void ({ void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_68, ptr %var_65
    %var_70 = load i32, ptr @const_69
    %var_71 = extractvalue { void ({ void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_68, 0
    %var_72 = extractvalue { void ({ void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_68, 1
    %var_73 = alloca { void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }
    call void %var_71({ void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }* %var_73, {  } %var_72, i32 %var_70)
    %var_74 = load { void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }, ptr %var_73
    %var_76 = load i32, ptr @const_75
    %var_77 = extractvalue { void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_74, 0
    %var_78 = extractvalue { void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_74, 1
    %var_79 = alloca { void (i32*, { i32, i32 }, i32)*, { i32, i32 } }
    call void %var_77({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }* %var_79, { i32 } %var_78, i32 %var_76)
    %var_80 = load { void (i32*, { i32, i32 }, i32)*, { i32, i32 } }, ptr %var_79
    %var_82 = load i32, ptr @const_81
    %var_83 = extractvalue { void (i32*, { i32, i32 }, i32)*, { i32, i32 } } %var_80, 0
    %var_84 = extractvalue { void (i32*, { i32, i32 }, i32)*, { i32, i32 } } %var_80, 1
    %var_85 = alloca i32
    call void %var_83(i32* %var_85, { i32, i32 } %var_84, i32 %var_82)
    %var_86 = load i32, ptr %var_85
    %var_87 = extractvalue { void (i32*, { }, i32)*, {  } } %var_30, 0
    %var_88 = extractvalue { void (i32*, { }, i32)*, {  } } %var_30, 1
    %var_89 = alloca i32
    call void %var_87(i32* %var_89, { } %var_88, i32 %var_86)
    %var_90 = load i32, ptr %var_89
    ret i32 0
}
declare i32 @printf(i8*, ...)
define void @printInt(ptr sret(i32) %var_20, { } %var_21, i32 %var_22) {
  entry: 
    %var_24 = call i32 @printf(i8* @const_23, i32 %var_22)
    store i32 %var_24, ptr %var_20
    ret void
}
define void @fn_31(ptr sret({ void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }) %var_34, {  } %var_35, i32 %var_36) {
  entry: 
    %var_38 = alloca { i32 }
    %var_39 = load { i32 }, ptr %var_38
    %var_40 = insertvalue { i32 } %var_39, i32 %var_36, 0
    store { i32 } %var_40, ptr %var_38
    %var_61 = alloca { void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }
    %var_62 = load { void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }, ptr %var_61
    %var_63 = insertvalue { void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_62, void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)* @fn_37, 0
    %var_64 = insertvalue { void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_63, { i32 } %var_40, 1
    store { void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_64, ptr %var_61
    store { void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_64, ptr %var_34
    ret void
}
define void @fn_37(ptr sret({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }) %var_41, { i32 } %var_42, i32 %var_43) {
  entry: 
    %var_44 = extractvalue { i32 } %var_42, 0
    %var_46 = alloca { i32, i32 }
    %var_47 = load { i32, i32 }, ptr %var_46
    %var_48 = insertvalue { i32, i32 } %var_47, i32 %var_44, 0
    %var_49 = insertvalue { i32, i32 } %var_48, i32 %var_43, 1
    store { i32, i32 } %var_49, ptr %var_46
    %var_57 = alloca { void (i32*, { i32, i32 }, i32)*, { i32, i32 } }
    %var_58 = load { void (i32*, { i32, i32 }, i32)*, { i32, i32 } }, ptr %var_57
    %var_59 = insertvalue { void (i32*, { i32, i32 }, i32)*, { i32, i32 } } %var_58, void (i32*, { i32, i32 }, i32)* @fn_45, 0
    %var_60 = insertvalue { void (i32*, { i32, i32 }, i32)*, { i32, i32 } } %var_59, { i32, i32 } %var_49, 1
    store { void (i32*, { i32, i32 }, i32)*, { i32, i32 } } %var_60, ptr %var_57
    store { void (i32*, { i32, i32 }, i32)*, { i32, i32 } } %var_60, ptr %var_41
    ret void
}
define void @fn_45(ptr sret(i32) %var_50, { i32, i32 } %var_51, i32 %var_52) {
  entry: 
    %var_53 = extractvalue { i32, i32 } %var_51, 0
    %var_54 = extractvalue { i32, i32 } %var_51, 1
    %var_55 = add i32 %var_54, %var_52
    %var_56 = add i32 %var_53, %var_55
    store i32 %var_56, ptr %var_50
    ret void
}
"
`;

exports[`compilation 2 > function deep closure > stderr 1`] = `[]`;

exports[`compilation 2 > function deep closure > stdout 1`] = `
[
  "9
",
]
`;

exports[`compilation 2 > function multiple args > compiled 1`] = `
"@const_17 = constant [4 x i8] c"%i
\\00"
@const_32 = constant i32 2
@const_40 = constant i32 1
define i32 @main() {
  main: 
    %var_19 = alloca {  }
    %var_20 = load {  }, ptr %var_19
    store {  } %var_20, ptr %var_19
    %var_21 = alloca { void (i32*, { }, i32)*, {  } }
    %var_22 = load { void (i32*, { }, i32)*, {  } }, ptr %var_21
    %var_23 = insertvalue { void (i32*, { }, i32)*, {  } } %var_22, void (i32*, { }, i32)* @printInt, 0
    %var_24 = insertvalue { void (i32*, { }, i32)*, {  } } %var_23, {  } %var_20, 1
    store { void (i32*, { }, i32)*, {  } } %var_24, ptr %var_21
    %var_26 = alloca {  }
    %var_27 = load {  }, ptr %var_26
    store {  } %var_27, ptr %var_26
    %var_36 = alloca { void (i32*, {  }, i32, i32)*, {  } }
    %var_37 = load { void (i32*, {  }, i32, i32)*, {  } }, ptr %var_36
    %var_38 = insertvalue { void (i32*, {  }, i32, i32)*, {  } } %var_37, void (i32*, {  }, i32, i32)* @fn_25, 0
    %var_39 = insertvalue { void (i32*, {  }, i32, i32)*, {  } } %var_38, {  } %var_27, 1
    store { void (i32*, {  }, i32, i32)*, {  } } %var_39, ptr %var_36
    %var_41 = load i32, ptr @const_40
    %var_42 = load i32, ptr @const_32
    %var_43 = extractvalue { void (i32*, {  }, i32, i32)*, {  } } %var_39, 0
    %var_44 = extractvalue { void (i32*, {  }, i32, i32)*, {  } } %var_39, 1
    %var_45 = alloca i32
    call void %var_43(i32* %var_45, {  } %var_44, i32 %var_41, i32 %var_42)
    %var_46 = load i32, ptr %var_45
    %var_47 = extractvalue { void (i32*, { }, i32)*, {  } } %var_24, 0
    %var_48 = extractvalue { void (i32*, { }, i32)*, {  } } %var_24, 1
    %var_49 = alloca i32
    call void %var_47(i32* %var_49, { } %var_48, i32 %var_46)
    %var_50 = load i32, ptr %var_49
    ret i32 0
}
declare i32 @printf(i8*, ...)
define void @printInt(ptr sret(i32) %var_14, { } %var_15, i32 %var_16) {
  entry: 
    %var_18 = call i32 @printf(i8* @const_17, i32 %var_16)
    store i32 %var_18, ptr %var_14
    ret void
}
define void @fn_25(ptr sret(i32) %var_28, {  } %var_29, i32 %var_30, i32 %var_31) {
  entry: 
    %var_33 = load i32, ptr @const_32
    %var_34 = mul i32 %var_33, %var_30
    %var_35 = add i32 %var_31, %var_34
    store i32 %var_35, ptr %var_28
    ret void
}
"
`;

exports[`compilation 2 > function multiple args > stderr 1`] = `[]`;

exports[`compilation 2 > function multiple args > stdout 1`] = `
[
  "4
",
]
`;

exports[`compilation 2 > hello world > compiled 1`] = `
"@const_14 = constant [13 x i8] c"hello world!\\00"
define i32 @main() {
  main: 
    %var_8 = alloca {  }
    %var_9 = load {  }, ptr %var_8
    store {  } %var_9, ptr %var_8
    %var_10 = alloca { void (i32*, { }, ptr)*, {  } }
    %var_11 = load { void (i32*, { }, ptr)*, {  } }, ptr %var_10
    %var_12 = insertvalue { void (i32*, { }, ptr)*, {  } } %var_11, void (i32*, { }, ptr)* @printString, 0
    %var_13 = insertvalue { void (i32*, { }, ptr)*, {  } } %var_12, {  } %var_9, 1
    store { void (i32*, { }, ptr)*, {  } } %var_13, ptr %var_10
    %var_15 = extractvalue { void (i32*, { }, ptr)*, {  } } %var_13, 0
    %var_16 = extractvalue { void (i32*, { }, ptr)*, {  } } %var_13, 1
    %var_17 = alloca i32
    call void %var_15(i32* %var_17, { } %var_16, ptr @const_14)
    %var_18 = load i32, ptr %var_17
    ret i32 0
}
declare i32 @printf(i8*, ...)
define void @printString(ptr sret(i32) %var_4, { } %var_5, ptr %var_6) {
  entry: 
    %var_7 = call i32 @printf(i8* %var_6)
    store i32 %var_7, ptr %var_4
    ret void
}
"
`;

exports[`compilation 2 > hello world > stderr 1`] = `[]`;

exports[`compilation 2 > hello world > stdout 1`] = `
[
  "hello world!",
]
`;

exports[`compilation 2 > hello world string > compiled 1`] = `
"@const_2 = constant [13 x i8] c"hello world!\\00"
define i32 @main() {
  main: 
    ret i32 0
}
"
`;

exports[`compilation 2 > hello world string > stderr 1`] = `[]`;

exports[`compilation 2 > hello world string > stdout 1`] = `[]`;

exports[`compilation 2 > hello world twice > compiled 1`] = `
"@const_17 = constant [13 x i8] c"hello world!\\00"
define i32 @main() {
  main: 
    %var_11 = alloca {  }
    %var_12 = load {  }, ptr %var_11
    store {  } %var_12, ptr %var_11
    %var_13 = alloca { void (i32*, { }, ptr)*, {  } }
    %var_14 = load { void (i32*, { }, ptr)*, {  } }, ptr %var_13
    %var_15 = insertvalue { void (i32*, { }, ptr)*, {  } } %var_14, void (i32*, { }, ptr)* @printString, 0
    %var_16 = insertvalue { void (i32*, { }, ptr)*, {  } } %var_15, {  } %var_12, 1
    store { void (i32*, { }, ptr)*, {  } } %var_16, ptr %var_13
    %var_18 = extractvalue { void (i32*, { }, ptr)*, {  } } %var_16, 0
    %var_19 = extractvalue { void (i32*, { }, ptr)*, {  } } %var_16, 1
    %var_20 = alloca i32
    call void %var_18(i32* %var_20, { } %var_19, ptr @const_17)
    %var_21 = load i32, ptr %var_20
    %var_22 = alloca {  }
    %var_23 = load {  }, ptr %var_22
    store {  } %var_23, ptr %var_22
    %var_24 = alloca { void (i32*, { }, ptr)*, {  } }
    %var_25 = load { void (i32*, { }, ptr)*, {  } }, ptr %var_24
    %var_26 = insertvalue { void (i32*, { }, ptr)*, {  } } %var_25, void (i32*, { }, ptr)* @printString, 0
    %var_27 = insertvalue { void (i32*, { }, ptr)*, {  } } %var_26, {  } %var_23, 1
    store { void (i32*, { }, ptr)*, {  } } %var_27, ptr %var_24
    %var_28 = extractvalue { void (i32*, { }, ptr)*, {  } } %var_27, 0
    %var_29 = extractvalue { void (i32*, { }, ptr)*, {  } } %var_27, 1
    %var_30 = alloca i32
    call void %var_28(i32* %var_30, { } %var_29, ptr @const_17)
    %var_31 = load i32, ptr %var_30
    ret i32 0
}
declare i32 @printf(i8*, ...)
define void @printString(ptr sret(i32) %var_7, { } %var_8, ptr %var_9) {
  entry: 
    %var_10 = call i32 @printf(i8* %var_9)
    store i32 %var_10, ptr %var_7
    ret void
}
"
`;

exports[`compilation 2 > hello world twice > stderr 1`] = `[]`;

exports[`compilation 2 > hello world twice > stdout 1`] = `
[
  "hello world!hello world!",
]
`;

exports[`compilation 2 > print number > compiled 1`] = `
"@const_7 = constant [4 x i8] c"%i
\\00"
@const_15 = constant i32 1
define i32 @main() {
  main: 
    %var_9 = alloca {  }
    %var_10 = load {  }, ptr %var_9
    store {  } %var_10, ptr %var_9
    %var_11 = alloca { void (i32*, { }, i32)*, {  } }
    %var_12 = load { void (i32*, { }, i32)*, {  } }, ptr %var_11
    %var_13 = insertvalue { void (i32*, { }, i32)*, {  } } %var_12, void (i32*, { }, i32)* @printInt, 0
    %var_14 = insertvalue { void (i32*, { }, i32)*, {  } } %var_13, {  } %var_10, 1
    store { void (i32*, { }, i32)*, {  } } %var_14, ptr %var_11
    %var_16 = load i32, ptr @const_15
    %var_17 = extractvalue { void (i32*, { }, i32)*, {  } } %var_14, 0
    %var_18 = extractvalue { void (i32*, { }, i32)*, {  } } %var_14, 1
    %var_19 = alloca i32
    call void %var_17(i32* %var_19, { } %var_18, i32 %var_16)
    %var_20 = load i32, ptr %var_19
    ret i32 0
}
declare i32 @printf(i8*, ...)
define void @printInt(ptr sret(i32) %var_4, { } %var_5, i32 %var_6) {
  entry: 
    %var_8 = call i32 @printf(i8* @const_7, i32 %var_6)
    store i32 %var_8, ptr %var_4
    ret void
}
"
`;

exports[`compilation 2 > print number > stderr 1`] = `[]`;

exports[`compilation 2 > print number > stdout 1`] = `
[
  "1
",
]
`;

exports[`compilation 2 > two prints > compiled 1`] = `
"@const_17 = constant [13 x i8] c"hello world!\\00"
@const_28 = constant [15 x i8] c"hello world 2!\\00"
define i32 @main() {
  main: 
    %var_11 = alloca {  }
    %var_12 = load {  }, ptr %var_11
    store {  } %var_12, ptr %var_11
    %var_13 = alloca { void (i32*, { }, ptr)*, {  } }
    %var_14 = load { void (i32*, { }, ptr)*, {  } }, ptr %var_13
    %var_15 = insertvalue { void (i32*, { }, ptr)*, {  } } %var_14, void (i32*, { }, ptr)* @printString, 0
    %var_16 = insertvalue { void (i32*, { }, ptr)*, {  } } %var_15, {  } %var_12, 1
    store { void (i32*, { }, ptr)*, {  } } %var_16, ptr %var_13
    %var_18 = extractvalue { void (i32*, { }, ptr)*, {  } } %var_16, 0
    %var_19 = extractvalue { void (i32*, { }, ptr)*, {  } } %var_16, 1
    %var_20 = alloca i32
    call void %var_18(i32* %var_20, { } %var_19, ptr @const_17)
    %var_21 = load i32, ptr %var_20
    %var_22 = alloca {  }
    %var_23 = load {  }, ptr %var_22
    store {  } %var_23, ptr %var_22
    %var_24 = alloca { void (i32*, { }, ptr)*, {  } }
    %var_25 = load { void (i32*, { }, ptr)*, {  } }, ptr %var_24
    %var_26 = insertvalue { void (i32*, { }, ptr)*, {  } } %var_25, void (i32*, { }, ptr)* @printString, 0
    %var_27 = insertvalue { void (i32*, { }, ptr)*, {  } } %var_26, {  } %var_23, 1
    store { void (i32*, { }, ptr)*, {  } } %var_27, ptr %var_24
    %var_29 = extractvalue { void (i32*, { }, ptr)*, {  } } %var_27, 0
    %var_30 = extractvalue { void (i32*, { }, ptr)*, {  } } %var_27, 1
    %var_31 = alloca i32
    call void %var_29(i32* %var_31, { } %var_30, ptr @const_28)
    %var_32 = load i32, ptr %var_31
    ret i32 0
}
declare i32 @printf(i8*, ...)
define void @printString(ptr sret(i32) %var_7, { } %var_8, ptr %var_9) {
  entry: 
    %var_10 = call i32 @printf(i8* %var_9)
    store i32 %var_10, ptr %var_7
    ret void
}
"
`;

exports[`compilation 2 > two prints > stderr 1`] = `[]`;

exports[`compilation 2 > two prints > stdout 1`] = `
[
  "hello world!hello world 2!",
]
`;
