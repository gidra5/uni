// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`data structures compilation > atom (global symbol) > compiled 1`] = `
"@const_39 = constant i64 0
@const_45 = constant [7 x i8] c"atom_a\\00"
@symbols_metadata_array = constant [1 x { i8* }] [{ i8* } { i8* @const_45 }]
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_15 = alloca {  }
    %var_16 = load {  }, ptr %var_15
    store {  } %var_16, ptr %var_15
    %var_35 = alloca { void (i64*, {  }, i64)*, {  } }
    %var_36 = load { void (i64*, {  }, i64)*, {  } }, ptr %var_35
    %var_37 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_36, void (i64*, {  }, i64)* @print_14, 0
    %var_38 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_37, {  } %var_16, 1
    store { void (i64*, {  }, i64)*, {  } } %var_38, ptr %var_35
    %var_40 = load i64, ptr @const_39
    %var_41 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_38, 0
    %var_42 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_38, 1
    %var_43 = alloca i64
    call void %var_41(i64* %var_43, {  } %var_42, i64 %var_40)
    %var_44 = load i64, ptr %var_43
    ret i32 0
}
define void @print_14(ptr sret(i64) %var_17, {  } %var_18, i64 %var_19) {
  entry20: 
    %var_21 = alloca {  }
    %var_22 = load {  }, ptr %var_21
    store {  } %var_22, ptr %var_21
    %var_27 = alloca { void (i64*, {  }, i64)*, {  } }
    %var_28 = load { void (i64*, {  }, i64)*, {  } }, ptr %var_27
    %var_29 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_28, void (i64*, {  }, i64)* @print_symbol_wrap, 0
    %var_30 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_29, {  } %var_22, 1
    store { void (i64*, {  }, i64)*, {  } } %var_30, ptr %var_27
    %var_31 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_30, 0
    %var_32 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_30, 1
    %var_33 = alloca i64
    call void %var_31(i64* %var_33, {  } %var_32, i64 %var_19)
    %var_34 = load i64, ptr %var_33
    store i64 %var_19, ptr %var_17
    ret void
}
declare void @print_symbol(i64)
define void @print_symbol_wrap(ptr sret(i64) %var_23, {  } %var_24, i64 %var_25) {
  entry26: 
    call void @print_symbol(i64 %var_25)
    store i64 %var_25, ptr %var_23
    ret void
}
"
`;

exports[`data structures compilation > atom (global symbol) > stderr 1`] = `[]`;

exports[`data structures compilation > atom (global symbol) > stdout 1`] = `
[
  "Symbol(atom_a)",
]
`;

exports[`data structures compilation > boolean false > compiled 1`] = `
"@const_21 = constant [5 x i8] c"true\\00"
@const_22 = constant [6 x i8] c"false\\00"
@const_24 = constant [3 x i8] c"%s\\00"
@const_29 = constant i1 0
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_15 = alloca {  }
    %var_16 = load {  }, ptr %var_15
    store {  } %var_16, ptr %var_15
    %var_25 = alloca { void (i1*, {  }, i1)*, {  } }
    %var_26 = load { void (i1*, {  }, i1)*, {  } }, ptr %var_25
    %var_27 = insertvalue { void (i1*, {  }, i1)*, {  } } %var_26, void (i1*, {  }, i1)* @print_14, 0
    %var_28 = insertvalue { void (i1*, {  }, i1)*, {  } } %var_27, {  } %var_16, 1
    store { void (i1*, {  }, i1)*, {  } } %var_28, ptr %var_25
    %var_30 = load i1, ptr @const_29
    %var_31 = extractvalue { void (i1*, {  }, i1)*, {  } } %var_28, 0
    %var_32 = extractvalue { void (i1*, {  }, i1)*, {  } } %var_28, 1
    %var_33 = alloca i1
    call void %var_31(i1* %var_33, {  } %var_32, i1 %var_30)
    %var_34 = load i1, ptr %var_33
    ret i32 0
}
define void @print_14(ptr sret(i1) %var_17, {  } %var_18, i1 %var_19) {
  entry20: 
    %var_23 = select i1 %var_19, [5 x i8]* @const_21, [5 x i8]* @const_22
    call void @printf(i8* @const_24, [5 x i8]* %var_23)
    store i1 %var_19, ptr %var_17
    ret void
}
declare i32 @printf(i8*, ...)
"
`;

exports[`data structures compilation > boolean false > stderr 1`] = `[]`;

exports[`data structures compilation > boolean false > stdout 1`] = `
[
  "false",
]
`;

exports[`data structures compilation > boolean true > compiled 1`] = `
"@const_21 = constant [5 x i8] c"true\\00"
@const_22 = constant [6 x i8] c"false\\00"
@const_24 = constant [3 x i8] c"%s\\00"
@const_29 = constant i1 1
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_15 = alloca {  }
    %var_16 = load {  }, ptr %var_15
    store {  } %var_16, ptr %var_15
    %var_25 = alloca { void (i1*, {  }, i1)*, {  } }
    %var_26 = load { void (i1*, {  }, i1)*, {  } }, ptr %var_25
    %var_27 = insertvalue { void (i1*, {  }, i1)*, {  } } %var_26, void (i1*, {  }, i1)* @print_14, 0
    %var_28 = insertvalue { void (i1*, {  }, i1)*, {  } } %var_27, {  } %var_16, 1
    store { void (i1*, {  }, i1)*, {  } } %var_28, ptr %var_25
    %var_30 = load i1, ptr @const_29
    %var_31 = extractvalue { void (i1*, {  }, i1)*, {  } } %var_28, 0
    %var_32 = extractvalue { void (i1*, {  }, i1)*, {  } } %var_28, 1
    %var_33 = alloca i1
    call void %var_31(i1* %var_33, {  } %var_32, i1 %var_30)
    %var_34 = load i1, ptr %var_33
    ret i32 0
}
define void @print_14(ptr sret(i1) %var_17, {  } %var_18, i1 %var_19) {
  entry20: 
    %var_23 = select i1 %var_19, [5 x i8]* @const_21, [5 x i8]* @const_22
    call void @printf(i8* @const_24, [5 x i8]* %var_23)
    store i1 %var_19, ptr %var_17
    ret void
}
declare i32 @printf(i8*, ...)
"
`;

exports[`data structures compilation > boolean true > stderr 1`] = `[]`;

exports[`data structures compilation > boolean true > stdout 1`] = `
[
  "true",
]
`;

exports[`data structures compilation > symbol > compiled 1`] = `
"@const_39 = constant i64 0
@const_45 = constant [10 x i8] c"symbol_ab\\00"
@symbols_metadata_array = constant [1 x { i8* }] [{ i8* } { i8* @const_45 }]
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_15 = alloca {  }
    %var_16 = load {  }, ptr %var_15
    store {  } %var_16, ptr %var_15
    %var_35 = alloca { void (i64*, {  }, i64)*, {  } }
    %var_36 = load { void (i64*, {  }, i64)*, {  } }, ptr %var_35
    %var_37 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_36, void (i64*, {  }, i64)* @print_14, 0
    %var_38 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_37, {  } %var_16, 1
    store { void (i64*, {  }, i64)*, {  } } %var_38, ptr %var_35
    %var_40 = load i64, ptr @const_39
    %var_41 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_38, 0
    %var_42 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_38, 1
    %var_43 = alloca i64
    call void %var_41(i64* %var_43, {  } %var_42, i64 %var_40)
    %var_44 = load i64, ptr %var_43
    ret i32 0
}
define void @print_14(ptr sret(i64) %var_17, {  } %var_18, i64 %var_19) {
  entry20: 
    %var_21 = alloca {  }
    %var_22 = load {  }, ptr %var_21
    store {  } %var_22, ptr %var_21
    %var_27 = alloca { void (i64*, {  }, i64)*, {  } }
    %var_28 = load { void (i64*, {  }, i64)*, {  } }, ptr %var_27
    %var_29 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_28, void (i64*, {  }, i64)* @print_symbol_wrap, 0
    %var_30 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_29, {  } %var_22, 1
    store { void (i64*, {  }, i64)*, {  } } %var_30, ptr %var_27
    %var_31 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_30, 0
    %var_32 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_30, 1
    %var_33 = alloca i64
    call void %var_31(i64* %var_33, {  } %var_32, i64 %var_19)
    %var_34 = load i64, ptr %var_33
    store i64 %var_19, ptr %var_17
    ret void
}
declare void @print_symbol(i64)
define void @print_symbol_wrap(ptr sret(i64) %var_23, {  } %var_24, i64 %var_25) {
  entry26: 
    call void @print_symbol(i64 %var_25)
    store i64 %var_25, ptr %var_23
    ret void
}
"
`;

exports[`data structures compilation > symbol > stderr 1`] = `[]`;

exports[`data structures compilation > symbol > stdout 1`] = `
[
  "Symbol(symbol_ab)",
]
`;

exports[`data structures compilation > tuple > compiled 1`] = `
"@const_24 = constant [7 x i8] c"tuple(\\00"
@const_25 = constant [3 x i8] c"%s\\00"
@const_34 = constant [3 x i8] c"%i\\00"
@const_43 = constant [3 x i8] c", \\00"
@const_60 = constant [2 x i8] c")\\00"
@const_65 = constant i32 1
@const_70 = constant [3 x i8] c"ab\\00"
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_18 = alloca {  }
    %var_19 = load {  }, ptr %var_18
    store {  } %var_19, ptr %var_18
    %var_61 = alloca { void ({ i32, i8* }*, {  }, { i32, i8* })*, {  } }
    %var_62 = load { void ({ i32, i8* }*, {  }, { i32, i8* })*, {  } }, ptr %var_61
    %var_63 = insertvalue { void ({ i32, i8* }*, {  }, { i32, i8* })*, {  } } %var_62, void ({ i32, i8* }*, {  }, { i32, i8* })* @print_17, 0
    %var_64 = insertvalue { void ({ i32, i8* }*, {  }, { i32, i8* })*, {  } } %var_63, {  } %var_19, 1
    store { void ({ i32, i8* }*, {  }, { i32, i8* })*, {  } } %var_64, ptr %var_61
    %var_66 = load i32, ptr @const_65
    %var_67 = alloca { i32 }
    %var_68 = load { i32 }, ptr %var_67
    %var_69 = insertvalue { i32 } %var_68, i32 %var_66, 0
    store { i32 } %var_69, ptr %var_67
    %var_71 = extractvalue { i32 } %var_69, 0
    %var_72 = alloca { i32, [3 x i8]* }
    %var_73 = load { i32, [3 x i8]* }, ptr %var_72
    %var_74 = insertvalue { i32, [3 x i8]* } %var_73, i32 %var_71, 0
    %var_75 = insertvalue { i32, [3 x i8]* } %var_74, [3 x i8]* @const_70, 1
    store { i32, [3 x i8]* } %var_75, ptr %var_72
    %var_76 = extractvalue { void ({ i32, i8* }*, {  }, { i32, i8* })*, {  } } %var_64, 0
    %var_77 = extractvalue { void ({ i32, i8* }*, {  }, { i32, i8* })*, {  } } %var_64, 1
    %var_78 = alloca { i32, i8* }
    call void %var_76({ i32, i8* }* %var_78, {  } %var_77, { i32, i8* } %var_75)
    %var_79 = load { i32, i8* }, ptr %var_78
    ret i32 0
}
define void @print_17(ptr sret({ i32, i8* }) %var_20, {  } %var_21, { i32, i8* } %var_22) {
  entry23: 
    call void @printf(i8* @const_25, [7 x i8]* @const_24)
    %var_26 = extractvalue { i32, i8* } %var_22, 0
    %var_28 = alloca {  }
    %var_29 = load {  }, ptr %var_28
    store {  } %var_29, ptr %var_28
    %var_35 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_36 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_35
    %var_37 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_36, void (i32*, {  }, i32)* @print_27, 0
    %var_38 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_37, {  } %var_29, 1
    store { void (i32*, {  }, i32)*, {  } } %var_38, ptr %var_35
    %var_39 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_38, 0
    %var_40 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_38, 1
    %var_41 = alloca i32
    call void %var_39(i32* %var_41, {  } %var_40, i32 %var_26)
    %var_42 = load i32, ptr %var_41
    call void @printf(i8* @const_25, [3 x i8]* @const_43)
    %var_44 = extractvalue { i32, i8* } %var_22, 1
    %var_46 = alloca {  }
    %var_47 = load {  }, ptr %var_46
    store {  } %var_47, ptr %var_46
    %var_52 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_53 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_52
    %var_54 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_53, void (i8**, {  }, i8*)* @print_45, 0
    %var_55 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_54, {  } %var_47, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_55, ptr %var_52
    %var_56 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_55, 0
    %var_57 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_55, 1
    %var_58 = alloca i8*
    call void %var_56(i8** %var_58, {  } %var_57, i8* %var_44)
    %var_59 = load i8*, ptr %var_58
    call void @printf(i8* @const_25, [2 x i8]* @const_60)
    store { i32, i8* } %var_22, ptr %var_20
    ret void
}
declare i32 @printf(i8*, ...)
define void @print_27(ptr sret(i32) %var_30, {  } %var_31, i32 %var_32) {
  entry33: 
    call void @printf(i8* @const_34, i32 %var_32)
    store i32 %var_32, ptr %var_30
    ret void
}
define void @print_45(ptr sret(i8*) %var_48, {  } %var_49, i8* %var_50) {
  entry51: 
    call void @printf(i8* @const_25, i8* %var_50)
    store i8* %var_50, ptr %var_48
    ret void
}
"
`;

exports[`data structures compilation > tuple > stderr 1`] = `[]`;

exports[`data structures compilation > tuple > stdout 1`] = `
[
  "tuple(1, ab)",
]
`;

exports[`data structures compilation > unit > compiled 1`] = `
"@const_39 = constant i64 0
@const_45 = constant [5 x i8] c"unit\\00"
@symbols_metadata_array = constant [1 x { i8* }] [{ i8* } { i8* @const_45 }]
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_15 = alloca {  }
    %var_16 = load {  }, ptr %var_15
    store {  } %var_16, ptr %var_15
    %var_35 = alloca { void (i64*, {  }, i64)*, {  } }
    %var_36 = load { void (i64*, {  }, i64)*, {  } }, ptr %var_35
    %var_37 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_36, void (i64*, {  }, i64)* @print_14, 0
    %var_38 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_37, {  } %var_16, 1
    store { void (i64*, {  }, i64)*, {  } } %var_38, ptr %var_35
    %var_40 = load i64, ptr @const_39
    %var_41 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_38, 0
    %var_42 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_38, 1
    %var_43 = alloca i64
    call void %var_41(i64* %var_43, {  } %var_42, i64 %var_40)
    %var_44 = load i64, ptr %var_43
    ret i32 0
}
define void @print_14(ptr sret(i64) %var_17, {  } %var_18, i64 %var_19) {
  entry20: 
    %var_21 = alloca {  }
    %var_22 = load {  }, ptr %var_21
    store {  } %var_22, ptr %var_21
    %var_27 = alloca { void (i64*, {  }, i64)*, {  } }
    %var_28 = load { void (i64*, {  }, i64)*, {  } }, ptr %var_27
    %var_29 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_28, void (i64*, {  }, i64)* @print_symbol_wrap, 0
    %var_30 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_29, {  } %var_22, 1
    store { void (i64*, {  }, i64)*, {  } } %var_30, ptr %var_27
    %var_31 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_30, 0
    %var_32 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_30, 1
    %var_33 = alloca i64
    call void %var_31(i64* %var_33, {  } %var_32, i64 %var_19)
    %var_34 = load i64, ptr %var_33
    store i64 %var_19, ptr %var_17
    ret void
}
declare void @print_symbol(i64)
define void @print_symbol_wrap(ptr sret(i64) %var_23, {  } %var_24, i64 %var_25) {
  entry26: 
    call void @print_symbol(i64 %var_25)
    store i64 %var_25, ptr %var_23
    ret void
}
"
`;

exports[`data structures compilation > unit > stderr 1`] = `[]`;

exports[`data structures compilation > unit > stdout 1`] = `
[
  "Symbol(unit)",
]
`;

exports[`generic print > compiled 1`] = `
"@const_102 = constant [4 x i8] c"fn[\\00"
@const_103 = constant [3 x i8] c"%s\\00"
@const_104 = constant [2 x i8] c"]\\00"
@const_135 = constant [2 x i8] c"
\\00"
@const_156 = constant [3 x i8] c"%i\\00"
@const_193 = constant i32 1
@const_268 = constant [7 x i8] c"tuple(\\00"
@const_285 = constant [3 x i8] c", \\00"
@const_302 = constant [2 x i8] c")\\00"
@const_311 = constant [3 x i8] c"ab\\00"
@const_374 = constant [3 x i8] c"%f\\00"
@const_379 = constant float 1.25
@const_437 = constant [5 x i8] c"true\\00"
@const_438 = constant [6 x i8] c"false\\00"
@const_444 = constant i1 1
@const_477 = constant i1 0
@const_523 = constant i64 0
@const_565 = constant i64 1
@const_607 = constant i64 2
@const_613 = constant [5 x i8] c"unit\\00"
@const_614 = constant [12 x i8] c"atom_atom_a\\00"
@const_615 = constant [16 x i8] c"symbol_symbol_a\\00"
@symbols_metadata_array = constant [3 x { i8* }] [{ i8* } { i8* @const_613 }, { i8* } { i8* @const_614 }, { i8* } { i8* @const_615 }]
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_95 = alloca {  }
    %var_96 = load {  }, ptr %var_95
    store {  } %var_96, ptr %var_95
    %var_105 = alloca { void ({ void (i32*, {  }, i32)*, {  } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } }
    %var_106 = load { void ({ void (i32*, {  }, i32)*, {  } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } }, ptr %var_105
    %var_107 = insertvalue { void ({ void (i32*, {  }, i32)*, {  } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_106, void ({ void (i32*, {  }, i32)*, {  } }*, {  }, { void (i32*, {  }, i32)*, {  } })* @print_94, 0
    %var_108 = insertvalue { void ({ void (i32*, {  }, i32)*, {  } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_107, {  } %var_96, 1
    store { void ({ void (i32*, {  }, i32)*, {  } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_108, ptr %var_105
    %var_110 = alloca {  }
    %var_111 = load {  }, ptr %var_110
    store {  } %var_111, ptr %var_110
    %var_116 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_117 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_116
    %var_118 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_117, void (i32*, {  }, i32)* @fn_109, 0
    %var_119 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_118, {  } %var_111, 1
    store { void (i32*, {  }, i32)*, {  } } %var_119, ptr %var_116
    %var_120 = extractvalue { void ({ void (i32*, {  }, i32)*, {  } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_108, 0
    %var_121 = extractvalue { void ({ void (i32*, {  }, i32)*, {  } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_108, 1
    %var_122 = alloca { void (i32*, {  }, i32)*, {  } }
    call void %var_120({ void (i32*, {  }, i32)*, {  } }* %var_122, {  } %var_121, { void (i32*, {  }, i32)*, {  } } %var_119)
    %var_123 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_122
    %var_125 = alloca {  }
    %var_126 = load {  }, ptr %var_125
    store {  } %var_126, ptr %var_125
    %var_131 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_132 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_131
    %var_133 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_132, void (i8**, {  }, i8*)* @print_124, 0
    %var_134 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_133, {  } %var_126, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_134, ptr %var_131
    %var_136 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_134, 0
    %var_137 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_134, 1
    %var_138 = alloca i8*
    call void %var_136(i8** %var_138, {  } %var_137, i8* @const_135)
    %var_139 = load i8*, ptr %var_138
    %var_141 = alloca {  }
    %var_142 = load {  }, ptr %var_141
    store {  } %var_142, ptr %var_141
    %var_165 = alloca { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, { void (i32*, { i32 }, i32)*, { i32 } })*, {  } }
    %var_166 = load { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, { void (i32*, { i32 }, i32)*, { i32 } })*, {  } }, ptr %var_165
    %var_167 = insertvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, { void (i32*, { i32 }, i32)*, { i32 } })*, {  } } %var_166, void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, { void (i32*, { i32 }, i32)*, { i32 } })* @print_140, 0
    %var_168 = insertvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, { void (i32*, { i32 }, i32)*, { i32 } })*, {  } } %var_167, {  } %var_142, 1
    store { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, { void (i32*, { i32 }, i32)*, { i32 } })*, {  } } %var_168, ptr %var_165
    %var_170 = alloca {  }
    %var_171 = load {  }, ptr %var_170
    store {  } %var_171, ptr %var_170
    %var_189 = alloca { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } }
    %var_190 = load { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } }, ptr %var_189
    %var_191 = insertvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_190, void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)* @fn_169, 0
    %var_192 = insertvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_191, {  } %var_171, 1
    store { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_192, ptr %var_189
    %var_194 = load i32, ptr @const_193
    %var_195 = extractvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_192, 0
    %var_196 = extractvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_192, 1
    %var_197 = alloca { void (i32*, { i32 }, i32)*, { i32 } }
    call void %var_195({ void (i32*, { i32 }, i32)*, { i32 } }* %var_197, {  } %var_196, i32 %var_194)
    %var_198 = load { void (i32*, { i32 }, i32)*, { i32 } }, ptr %var_197
    %var_199 = extractvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, { void (i32*, { i32 }, i32)*, { i32 } })*, {  } } %var_168, 0
    %var_200 = extractvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, { void (i32*, { i32 }, i32)*, { i32 } })*, {  } } %var_168, 1
    %var_201 = alloca { void (i32*, { i32 }, i32)*, { i32 } }
    call void %var_199({ void (i32*, { i32 }, i32)*, { i32 } }* %var_201, {  } %var_200, { void (i32*, { i32 }, i32)*, { i32 } } %var_198)
    %var_202 = load { void (i32*, { i32 }, i32)*, { i32 } }, ptr %var_201
    %var_204 = alloca {  }
    %var_205 = load {  }, ptr %var_204
    store {  } %var_205, ptr %var_204
    %var_210 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_211 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_210
    %var_212 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_211, void (i8**, {  }, i8*)* @print_203, 0
    %var_213 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_212, {  } %var_205, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_213, ptr %var_210
    %var_214 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_213, 0
    %var_215 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_213, 1
    %var_216 = alloca i8*
    call void %var_214(i8** %var_216, {  } %var_215, i8* @const_135)
    %var_217 = load i8*, ptr %var_216
    %var_219 = alloca {  }
    %var_220 = load {  }, ptr %var_219
    store {  } %var_220, ptr %var_219
    %var_226 = alloca { void ({ void (i32*, {  }, i32, i32)*, {  } }*, {  }, { void (i32*, {  }, i32, i32)*, {  } })*, {  } }
    %var_227 = load { void ({ void (i32*, {  }, i32, i32)*, {  } }*, {  }, { void (i32*, {  }, i32, i32)*, {  } })*, {  } }, ptr %var_226
    %var_228 = insertvalue { void ({ void (i32*, {  }, i32, i32)*, {  } }*, {  }, { void (i32*, {  }, i32, i32)*, {  } })*, {  } } %var_227, void ({ void (i32*, {  }, i32, i32)*, {  } }*, {  }, { void (i32*, {  }, i32, i32)*, {  } })* @print_218, 0
    %var_229 = insertvalue { void ({ void (i32*, {  }, i32, i32)*, {  } }*, {  }, { void (i32*, {  }, i32, i32)*, {  } })*, {  } } %var_228, {  } %var_220, 1
    store { void ({ void (i32*, {  }, i32, i32)*, {  } }*, {  }, { void (i32*, {  }, i32, i32)*, {  } })*, {  } } %var_229, ptr %var_226
    %var_231 = alloca {  }
    %var_232 = load {  }, ptr %var_231
    store {  } %var_232, ptr %var_231
    %var_238 = alloca { void (i32*, {  }, i32, i32)*, {  } }
    %var_239 = load { void (i32*, {  }, i32, i32)*, {  } }, ptr %var_238
    %var_240 = insertvalue { void (i32*, {  }, i32, i32)*, {  } } %var_239, void (i32*, {  }, i32, i32)* @fn_230, 0
    %var_241 = insertvalue { void (i32*, {  }, i32, i32)*, {  } } %var_240, {  } %var_232, 1
    store { void (i32*, {  }, i32, i32)*, {  } } %var_241, ptr %var_238
    %var_242 = extractvalue { void ({ void (i32*, {  }, i32, i32)*, {  } }*, {  }, { void (i32*, {  }, i32, i32)*, {  } })*, {  } } %var_229, 0
    %var_243 = extractvalue { void ({ void (i32*, {  }, i32, i32)*, {  } }*, {  }, { void (i32*, {  }, i32, i32)*, {  } })*, {  } } %var_229, 1
    %var_244 = alloca { void (i32*, {  }, i32, i32)*, {  } }
    call void %var_242({ void (i32*, {  }, i32, i32)*, {  } }* %var_244, {  } %var_243, { void (i32*, {  }, i32, i32)*, {  } } %var_241)
    %var_245 = load { void (i32*, {  }, i32, i32)*, {  } }, ptr %var_244
    %var_247 = alloca {  }
    %var_248 = load {  }, ptr %var_247
    store {  } %var_248, ptr %var_247
    %var_253 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_254 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_253
    %var_255 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_254, void (i8**, {  }, i8*)* @print_246, 0
    %var_256 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_255, {  } %var_248, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_256, ptr %var_253
    %var_257 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_256, 0
    %var_258 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_256, 1
    %var_259 = alloca i8*
    call void %var_257(i8** %var_259, {  } %var_258, i8* @const_135)
    %var_260 = load i8*, ptr %var_259
    %var_262 = alloca {  }
    %var_263 = load {  }, ptr %var_262
    store {  } %var_263, ptr %var_262
    %var_303 = alloca { void ({ i32, i8* }*, {  }, { i32, i8* })*, {  } }
    %var_304 = load { void ({ i32, i8* }*, {  }, { i32, i8* })*, {  } }, ptr %var_303
    %var_305 = insertvalue { void ({ i32, i8* }*, {  }, { i32, i8* })*, {  } } %var_304, void ({ i32, i8* }*, {  }, { i32, i8* })* @print_261, 0
    %var_306 = insertvalue { void ({ i32, i8* }*, {  }, { i32, i8* })*, {  } } %var_305, {  } %var_263, 1
    store { void ({ i32, i8* }*, {  }, { i32, i8* })*, {  } } %var_306, ptr %var_303
    %var_307 = load i32, ptr @const_193
    %var_308 = alloca { i32 }
    %var_309 = load { i32 }, ptr %var_308
    %var_310 = insertvalue { i32 } %var_309, i32 %var_307, 0
    store { i32 } %var_310, ptr %var_308
    %var_312 = extractvalue { i32 } %var_310, 0
    %var_313 = alloca { i32, [3 x i8]* }
    %var_314 = load { i32, [3 x i8]* }, ptr %var_313
    %var_315 = insertvalue { i32, [3 x i8]* } %var_314, i32 %var_312, 0
    %var_316 = insertvalue { i32, [3 x i8]* } %var_315, [3 x i8]* @const_311, 1
    store { i32, [3 x i8]* } %var_316, ptr %var_313
    %var_317 = extractvalue { void ({ i32, i8* }*, {  }, { i32, i8* })*, {  } } %var_306, 0
    %var_318 = extractvalue { void ({ i32, i8* }*, {  }, { i32, i8* })*, {  } } %var_306, 1
    %var_319 = alloca { i32, i8* }
    call void %var_317({ i32, i8* }* %var_319, {  } %var_318, { i32, i8* } %var_316)
    %var_320 = load { i32, i8* }, ptr %var_319
    %var_322 = alloca {  }
    %var_323 = load {  }, ptr %var_322
    store {  } %var_323, ptr %var_322
    %var_328 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_329 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_328
    %var_330 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_329, void (i8**, {  }, i8*)* @print_321, 0
    %var_331 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_330, {  } %var_323, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_331, ptr %var_328
    %var_332 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_331, 0
    %var_333 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_331, 1
    %var_334 = alloca i8*
    call void %var_332(i8** %var_334, {  } %var_333, i8* @const_135)
    %var_335 = load i8*, ptr %var_334
    %var_337 = alloca {  }
    %var_338 = load {  }, ptr %var_337
    store {  } %var_338, ptr %var_337
    %var_343 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_344 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_343
    %var_345 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_344, void (i32*, {  }, i32)* @print_336, 0
    %var_346 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_345, {  } %var_338, 1
    store { void (i32*, {  }, i32)*, {  } } %var_346, ptr %var_343
    %var_347 = load i32, ptr @const_193
    %var_348 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_346, 0
    %var_349 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_346, 1
    %var_350 = alloca i32
    call void %var_348(i32* %var_350, {  } %var_349, i32 %var_347)
    %var_351 = load i32, ptr %var_350
    %var_353 = alloca {  }
    %var_354 = load {  }, ptr %var_353
    store {  } %var_354, ptr %var_353
    %var_359 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_360 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_359
    %var_361 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_360, void (i8**, {  }, i8*)* @print_352, 0
    %var_362 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_361, {  } %var_354, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_362, ptr %var_359
    %var_363 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_362, 0
    %var_364 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_362, 1
    %var_365 = alloca i8*
    call void %var_363(i8** %var_365, {  } %var_364, i8* @const_135)
    %var_366 = load i8*, ptr %var_365
    %var_368 = alloca {  }
    %var_369 = load {  }, ptr %var_368
    store {  } %var_369, ptr %var_368
    %var_375 = alloca { void (float*, {  }, float)*, {  } }
    %var_376 = load { void (float*, {  }, float)*, {  } }, ptr %var_375
    %var_377 = insertvalue { void (float*, {  }, float)*, {  } } %var_376, void (float*, {  }, float)* @print_367, 0
    %var_378 = insertvalue { void (float*, {  }, float)*, {  } } %var_377, {  } %var_369, 1
    store { void (float*, {  }, float)*, {  } } %var_378, ptr %var_375
    %var_380 = load float, ptr @const_379
    %var_381 = extractvalue { void (float*, {  }, float)*, {  } } %var_378, 0
    %var_382 = extractvalue { void (float*, {  }, float)*, {  } } %var_378, 1
    %var_383 = alloca float
    call void %var_381(float* %var_383, {  } %var_382, float %var_380)
    %var_384 = load float, ptr %var_383
    %var_386 = alloca {  }
    %var_387 = load {  }, ptr %var_386
    store {  } %var_387, ptr %var_386
    %var_392 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_393 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_392
    %var_394 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_393, void (i8**, {  }, i8*)* @print_385, 0
    %var_395 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_394, {  } %var_387, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_395, ptr %var_392
    %var_396 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_395, 0
    %var_397 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_395, 1
    %var_398 = alloca i8*
    call void %var_396(i8** %var_398, {  } %var_397, i8* @const_135)
    %var_399 = load i8*, ptr %var_398
    %var_401 = alloca {  }
    %var_402 = load {  }, ptr %var_401
    store {  } %var_402, ptr %var_401
    %var_407 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_408 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_407
    %var_409 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_408, void (i8**, {  }, i8*)* @print_400, 0
    %var_410 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_409, {  } %var_402, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_410, ptr %var_407
    %var_411 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_410, 0
    %var_412 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_410, 1
    %var_413 = alloca i8*
    call void %var_411(i8** %var_413, {  } %var_412, i8* @const_311)
    %var_414 = load i8*, ptr %var_413
    %var_416 = alloca {  }
    %var_417 = load {  }, ptr %var_416
    store {  } %var_417, ptr %var_416
    %var_422 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_423 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_422
    %var_424 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_423, void (i8**, {  }, i8*)* @print_415, 0
    %var_425 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_424, {  } %var_417, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_425, ptr %var_422
    %var_426 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_425, 0
    %var_427 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_425, 1
    %var_428 = alloca i8*
    call void %var_426(i8** %var_428, {  } %var_427, i8* @const_135)
    %var_429 = load i8*, ptr %var_428
    %var_431 = alloca {  }
    %var_432 = load {  }, ptr %var_431
    store {  } %var_432, ptr %var_431
    %var_440 = alloca { void (i1*, {  }, i1)*, {  } }
    %var_441 = load { void (i1*, {  }, i1)*, {  } }, ptr %var_440
    %var_442 = insertvalue { void (i1*, {  }, i1)*, {  } } %var_441, void (i1*, {  }, i1)* @print_430, 0
    %var_443 = insertvalue { void (i1*, {  }, i1)*, {  } } %var_442, {  } %var_432, 1
    store { void (i1*, {  }, i1)*, {  } } %var_443, ptr %var_440
    %var_445 = load i1, ptr @const_444
    %var_446 = extractvalue { void (i1*, {  }, i1)*, {  } } %var_443, 0
    %var_447 = extractvalue { void (i1*, {  }, i1)*, {  } } %var_443, 1
    %var_448 = alloca i1
    call void %var_446(i1* %var_448, {  } %var_447, i1 %var_445)
    %var_449 = load i1, ptr %var_448
    %var_451 = alloca {  }
    %var_452 = load {  }, ptr %var_451
    store {  } %var_452, ptr %var_451
    %var_457 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_458 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_457
    %var_459 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_458, void (i8**, {  }, i8*)* @print_450, 0
    %var_460 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_459, {  } %var_452, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_460, ptr %var_457
    %var_461 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_460, 0
    %var_462 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_460, 1
    %var_463 = alloca i8*
    call void %var_461(i8** %var_463, {  } %var_462, i8* @const_135)
    %var_464 = load i8*, ptr %var_463
    %var_466 = alloca {  }
    %var_467 = load {  }, ptr %var_466
    store {  } %var_467, ptr %var_466
    %var_473 = alloca { void (i1*, {  }, i1)*, {  } }
    %var_474 = load { void (i1*, {  }, i1)*, {  } }, ptr %var_473
    %var_475 = insertvalue { void (i1*, {  }, i1)*, {  } } %var_474, void (i1*, {  }, i1)* @print_465, 0
    %var_476 = insertvalue { void (i1*, {  }, i1)*, {  } } %var_475, {  } %var_467, 1
    store { void (i1*, {  }, i1)*, {  } } %var_476, ptr %var_473
    %var_478 = load i1, ptr @const_477
    %var_479 = extractvalue { void (i1*, {  }, i1)*, {  } } %var_476, 0
    %var_480 = extractvalue { void (i1*, {  }, i1)*, {  } } %var_476, 1
    %var_481 = alloca i1
    call void %var_479(i1* %var_481, {  } %var_480, i1 %var_478)
    %var_482 = load i1, ptr %var_481
    %var_484 = alloca {  }
    %var_485 = load {  }, ptr %var_484
    store {  } %var_485, ptr %var_484
    %var_490 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_491 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_490
    %var_492 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_491, void (i8**, {  }, i8*)* @print_483, 0
    %var_493 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_492, {  } %var_485, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_493, ptr %var_490
    %var_494 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_493, 0
    %var_495 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_493, 1
    %var_496 = alloca i8*
    call void %var_494(i8** %var_496, {  } %var_495, i8* @const_135)
    %var_497 = load i8*, ptr %var_496
    %var_499 = alloca {  }
    %var_500 = load {  }, ptr %var_499
    store {  } %var_500, ptr %var_499
    %var_519 = alloca { void (i64*, {  }, i64)*, {  } }
    %var_520 = load { void (i64*, {  }, i64)*, {  } }, ptr %var_519
    %var_521 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_520, void (i64*, {  }, i64)* @print_498, 0
    %var_522 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_521, {  } %var_500, 1
    store { void (i64*, {  }, i64)*, {  } } %var_522, ptr %var_519
    %var_524 = load i64, ptr @const_523
    %var_525 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_522, 0
    %var_526 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_522, 1
    %var_527 = alloca i64
    call void %var_525(i64* %var_527, {  } %var_526, i64 %var_524)
    %var_528 = load i64, ptr %var_527
    %var_530 = alloca {  }
    %var_531 = load {  }, ptr %var_530
    store {  } %var_531, ptr %var_530
    %var_536 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_537 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_536
    %var_538 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_537, void (i8**, {  }, i8*)* @print_529, 0
    %var_539 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_538, {  } %var_531, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_539, ptr %var_536
    %var_540 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_539, 0
    %var_541 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_539, 1
    %var_542 = alloca i8*
    call void %var_540(i8** %var_542, {  } %var_541, i8* @const_135)
    %var_543 = load i8*, ptr %var_542
    %var_545 = alloca {  }
    %var_546 = load {  }, ptr %var_545
    store {  } %var_546, ptr %var_545
    %var_561 = alloca { void (i64*, {  }, i64)*, {  } }
    %var_562 = load { void (i64*, {  }, i64)*, {  } }, ptr %var_561
    %var_563 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_562, void (i64*, {  }, i64)* @print_544, 0
    %var_564 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_563, {  } %var_546, 1
    store { void (i64*, {  }, i64)*, {  } } %var_564, ptr %var_561
    %var_566 = load i64, ptr @const_565
    %var_567 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_564, 0
    %var_568 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_564, 1
    %var_569 = alloca i64
    call void %var_567(i64* %var_569, {  } %var_568, i64 %var_566)
    %var_570 = load i64, ptr %var_569
    %var_572 = alloca {  }
    %var_573 = load {  }, ptr %var_572
    store {  } %var_573, ptr %var_572
    %var_578 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_579 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_578
    %var_580 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_579, void (i8**, {  }, i8*)* @print_571, 0
    %var_581 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_580, {  } %var_573, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_581, ptr %var_578
    %var_582 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_581, 0
    %var_583 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_581, 1
    %var_584 = alloca i8*
    call void %var_582(i8** %var_584, {  } %var_583, i8* @const_135)
    %var_585 = load i8*, ptr %var_584
    %var_587 = alloca {  }
    %var_588 = load {  }, ptr %var_587
    store {  } %var_588, ptr %var_587
    %var_603 = alloca { void (i64*, {  }, i64)*, {  } }
    %var_604 = load { void (i64*, {  }, i64)*, {  } }, ptr %var_603
    %var_605 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_604, void (i64*, {  }, i64)* @print_586, 0
    %var_606 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_605, {  } %var_588, 1
    store { void (i64*, {  }, i64)*, {  } } %var_606, ptr %var_603
    %var_608 = load i64, ptr @const_607
    %var_609 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_606, 0
    %var_610 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_606, 1
    %var_611 = alloca i64
    call void %var_609(i64* %var_611, {  } %var_610, i64 %var_608)
    %var_612 = load i64, ptr %var_611
    ret i32 0
}
define void @print_94(ptr sret({ void (i32*, {  }, i32)*, {  } }) %var_97, {  } %var_98, { void (i32*, {  }, i32)*, {  } } %var_99) {
  entry100: 
    %var_101 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_99, 1
    call void @printf(i8* @const_103, [4 x i8]* @const_102)
    call void @printf(i8* @const_103, [2 x i8]* @const_104)
    store { void (i32*, {  }, i32)*, {  } } %var_99, ptr %var_97
    ret void
}
declare i32 @printf(i8*, ...)
define void @fn_109(ptr sret(i32) %var_112, {  } %var_113, i32 %var_114) {
  entry115: 
    store i32 %var_114, ptr %var_112
    ret void
}
define void @print_124(ptr sret(i8*) %var_127, {  } %var_128, i8* %var_129) {
  entry130: 
    call void @printf(i8* @const_103, i8* %var_129)
    store i8* %var_129, ptr %var_127
    ret void
}
define void @print_140(ptr sret({ void (i32*, { i32 }, i32)*, { i32 } }) %var_143, {  } %var_144, { void (i32*, { i32 }, i32)*, { i32 } } %var_145) {
  entry146: 
    %var_147 = extractvalue { void (i32*, { i32 }, i32)*, { i32 } } %var_145, 1
    call void @printf(i8* @const_103, [4 x i8]* @const_102)
    %var_148 = extractvalue { i32 } %var_147, 0
    %var_150 = alloca {  }
    %var_151 = load {  }, ptr %var_150
    store {  } %var_151, ptr %var_150
    %var_157 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_158 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_157
    %var_159 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_158, void (i32*, {  }, i32)* @print_149, 0
    %var_160 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_159, {  } %var_151, 1
    store { void (i32*, {  }, i32)*, {  } } %var_160, ptr %var_157
    %var_161 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_160, 0
    %var_162 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_160, 1
    %var_163 = alloca i32
    call void %var_161(i32* %var_163, {  } %var_162, i32 %var_148)
    %var_164 = load i32, ptr %var_163
    call void @printf(i8* @const_103, [2 x i8]* @const_104)
    store { void (i32*, { i32 }, i32)*, { i32 } } %var_145, ptr %var_143
    ret void
}
define void @print_149(ptr sret(i32) %var_152, {  } %var_153, i32 %var_154) {
  entry155: 
    call void @printf(i8* @const_156, i32 %var_154)
    store i32 %var_154, ptr %var_152
    ret void
}
define void @fn_169(ptr sret({ void (i32*, { i32 }, i32)*, { i32 } }) %var_172, {  } %var_173, i32 %var_174) {
  entry175: 
    %var_177 = alloca { i32 }
    %var_178 = load { i32 }, ptr %var_177
    %var_179 = insertvalue { i32 } %var_178, i32 %var_174, 0
    store { i32 } %var_179, ptr %var_177
    %var_185 = alloca { void (i32*, { i32 }, i32)*, { i32 } }
    %var_186 = load { void (i32*, { i32 }, i32)*, { i32 } }, ptr %var_185
    %var_187 = insertvalue { void (i32*, { i32 }, i32)*, { i32 } } %var_186, void (i32*, { i32 }, i32)* @fn_176, 0
    %var_188 = insertvalue { void (i32*, { i32 }, i32)*, { i32 } } %var_187, { i32 } %var_179, 1
    store { void (i32*, { i32 }, i32)*, { i32 } } %var_188, ptr %var_185
    store { void (i32*, { i32 }, i32)*, { i32 } } %var_188, ptr %var_172
    ret void
}
define void @fn_176(ptr sret(i32) %var_180, { i32 } %var_181, i32 %var_182) {
  entry183: 
    %var_184 = extractvalue { i32 } %var_181, 0
    store i32 %var_184, ptr %var_180
    ret void
}
define void @print_203(ptr sret(i8*) %var_206, {  } %var_207, i8* %var_208) {
  entry209: 
    call void @printf(i8* @const_103, i8* %var_208)
    store i8* %var_208, ptr %var_206
    ret void
}
define void @print_218(ptr sret({ void (i32*, {  }, i32, i32)*, {  } }) %var_221, {  } %var_222, { void (i32*, {  }, i32, i32)*, {  } } %var_223) {
  entry224: 
    %var_225 = extractvalue { void (i32*, {  }, i32, i32)*, {  } } %var_223, 1
    call void @printf(i8* @const_103, [4 x i8]* @const_102)
    call void @printf(i8* @const_103, [2 x i8]* @const_104)
    store { void (i32*, {  }, i32, i32)*, {  } } %var_223, ptr %var_221
    ret void
}
define void @fn_230(ptr sret(i32) %var_233, {  } %var_234, i32 %var_235, i32 %var_236) {
  entry237: 
    store i32 %var_235, ptr %var_233
    ret void
}
define void @print_246(ptr sret(i8*) %var_249, {  } %var_250, i8* %var_251) {
  entry252: 
    call void @printf(i8* @const_103, i8* %var_251)
    store i8* %var_251, ptr %var_249
    ret void
}
define void @print_261(ptr sret({ i32, i8* }) %var_264, {  } %var_265, { i32, i8* } %var_266) {
  entry267: 
    call void @printf(i8* @const_103, [7 x i8]* @const_268)
    %var_269 = extractvalue { i32, i8* } %var_266, 0
    %var_271 = alloca {  }
    %var_272 = load {  }, ptr %var_271
    store {  } %var_272, ptr %var_271
    %var_277 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_278 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_277
    %var_279 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_278, void (i32*, {  }, i32)* @print_270, 0
    %var_280 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_279, {  } %var_272, 1
    store { void (i32*, {  }, i32)*, {  } } %var_280, ptr %var_277
    %var_281 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_280, 0
    %var_282 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_280, 1
    %var_283 = alloca i32
    call void %var_281(i32* %var_283, {  } %var_282, i32 %var_269)
    %var_284 = load i32, ptr %var_283
    call void @printf(i8* @const_103, [3 x i8]* @const_285)
    %var_286 = extractvalue { i32, i8* } %var_266, 1
    %var_288 = alloca {  }
    %var_289 = load {  }, ptr %var_288
    store {  } %var_289, ptr %var_288
    %var_294 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_295 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_294
    %var_296 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_295, void (i8**, {  }, i8*)* @print_287, 0
    %var_297 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_296, {  } %var_289, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_297, ptr %var_294
    %var_298 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_297, 0
    %var_299 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_297, 1
    %var_300 = alloca i8*
    call void %var_298(i8** %var_300, {  } %var_299, i8* %var_286)
    %var_301 = load i8*, ptr %var_300
    call void @printf(i8* @const_103, [2 x i8]* @const_302)
    store { i32, i8* } %var_266, ptr %var_264
    ret void
}
define void @print_270(ptr sret(i32) %var_273, {  } %var_274, i32 %var_275) {
  entry276: 
    call void @printf(i8* @const_156, i32 %var_275)
    store i32 %var_275, ptr %var_273
    ret void
}
define void @print_287(ptr sret(i8*) %var_290, {  } %var_291, i8* %var_292) {
  entry293: 
    call void @printf(i8* @const_103, i8* %var_292)
    store i8* %var_292, ptr %var_290
    ret void
}
define void @print_321(ptr sret(i8*) %var_324, {  } %var_325, i8* %var_326) {
  entry327: 
    call void @printf(i8* @const_103, i8* %var_326)
    store i8* %var_326, ptr %var_324
    ret void
}
define void @print_336(ptr sret(i32) %var_339, {  } %var_340, i32 %var_341) {
  entry342: 
    call void @printf(i8* @const_156, i32 %var_341)
    store i32 %var_341, ptr %var_339
    ret void
}
define void @print_352(ptr sret(i8*) %var_355, {  } %var_356, i8* %var_357) {
  entry358: 
    call void @printf(i8* @const_103, i8* %var_357)
    store i8* %var_357, ptr %var_355
    ret void
}
define void @print_367(ptr sret(float) %var_370, {  } %var_371, float %var_372) {
  entry373: 
    call void @printf(i8* @const_374, float %var_372)
    store float %var_372, ptr %var_370
    ret void
}
define void @print_385(ptr sret(i8*) %var_388, {  } %var_389, i8* %var_390) {
  entry391: 
    call void @printf(i8* @const_103, i8* %var_390)
    store i8* %var_390, ptr %var_388
    ret void
}
define void @print_400(ptr sret(i8*) %var_403, {  } %var_404, i8* %var_405) {
  entry406: 
    call void @printf(i8* @const_103, i8* %var_405)
    store i8* %var_405, ptr %var_403
    ret void
}
define void @print_415(ptr sret(i8*) %var_418, {  } %var_419, i8* %var_420) {
  entry421: 
    call void @printf(i8* @const_103, i8* %var_420)
    store i8* %var_420, ptr %var_418
    ret void
}
define void @print_430(ptr sret(i1) %var_433, {  } %var_434, i1 %var_435) {
  entry436: 
    %var_439 = select i1 %var_435, [5 x i8]* @const_437, [5 x i8]* @const_438
    call void @printf(i8* @const_103, [5 x i8]* %var_439)
    store i1 %var_435, ptr %var_433
    ret void
}
define void @print_450(ptr sret(i8*) %var_453, {  } %var_454, i8* %var_455) {
  entry456: 
    call void @printf(i8* @const_103, i8* %var_455)
    store i8* %var_455, ptr %var_453
    ret void
}
define void @print_465(ptr sret(i1) %var_468, {  } %var_469, i1 %var_470) {
  entry471: 
    %var_472 = select i1 %var_470, [5 x i8]* @const_437, [5 x i8]* @const_438
    call void @printf(i8* @const_103, [5 x i8]* %var_472)
    store i1 %var_470, ptr %var_468
    ret void
}
define void @print_483(ptr sret(i8*) %var_486, {  } %var_487, i8* %var_488) {
  entry489: 
    call void @printf(i8* @const_103, i8* %var_488)
    store i8* %var_488, ptr %var_486
    ret void
}
define void @print_498(ptr sret(i64) %var_501, {  } %var_502, i64 %var_503) {
  entry504: 
    %var_505 = alloca {  }
    %var_506 = load {  }, ptr %var_505
    store {  } %var_506, ptr %var_505
    %var_511 = alloca { void (i64*, {  }, i64)*, {  } }
    %var_512 = load { void (i64*, {  }, i64)*, {  } }, ptr %var_511
    %var_513 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_512, void (i64*, {  }, i64)* @print_symbol_wrap, 0
    %var_514 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_513, {  } %var_506, 1
    store { void (i64*, {  }, i64)*, {  } } %var_514, ptr %var_511
    %var_515 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_514, 0
    %var_516 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_514, 1
    %var_517 = alloca i64
    call void %var_515(i64* %var_517, {  } %var_516, i64 %var_503)
    %var_518 = load i64, ptr %var_517
    store i64 %var_503, ptr %var_501
    ret void
}
declare void @print_symbol(i64)
define void @print_symbol_wrap(ptr sret(i64) %var_507, {  } %var_508, i64 %var_509) {
  entry510: 
    call void @print_symbol(i64 %var_509)
    store i64 %var_509, ptr %var_507
    ret void
}
define void @print_529(ptr sret(i8*) %var_532, {  } %var_533, i8* %var_534) {
  entry535: 
    call void @printf(i8* @const_103, i8* %var_534)
    store i8* %var_534, ptr %var_532
    ret void
}
define void @print_544(ptr sret(i64) %var_547, {  } %var_548, i64 %var_549) {
  entry550: 
    %var_551 = alloca {  }
    %var_552 = load {  }, ptr %var_551
    store {  } %var_552, ptr %var_551
    %var_553 = alloca { void (i64*, {  }, i64)*, {  } }
    %var_554 = load { void (i64*, {  }, i64)*, {  } }, ptr %var_553
    %var_555 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_554, void (i64*, {  }, i64)* @print_symbol_wrap, 0
    %var_556 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_555, {  } %var_552, 1
    store { void (i64*, {  }, i64)*, {  } } %var_556, ptr %var_553
    %var_557 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_556, 0
    %var_558 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_556, 1
    %var_559 = alloca i64
    call void %var_557(i64* %var_559, {  } %var_558, i64 %var_549)
    %var_560 = load i64, ptr %var_559
    store i64 %var_549, ptr %var_547
    ret void
}
define void @print_571(ptr sret(i8*) %var_574, {  } %var_575, i8* %var_576) {
  entry577: 
    call void @printf(i8* @const_103, i8* %var_576)
    store i8* %var_576, ptr %var_574
    ret void
}
define void @print_586(ptr sret(i64) %var_589, {  } %var_590, i64 %var_591) {
  entry592: 
    %var_593 = alloca {  }
    %var_594 = load {  }, ptr %var_593
    store {  } %var_594, ptr %var_593
    %var_595 = alloca { void (i64*, {  }, i64)*, {  } }
    %var_596 = load { void (i64*, {  }, i64)*, {  } }, ptr %var_595
    %var_597 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_596, void (i64*, {  }, i64)* @print_symbol_wrap, 0
    %var_598 = insertvalue { void (i64*, {  }, i64)*, {  } } %var_597, {  } %var_594, 1
    store { void (i64*, {  }, i64)*, {  } } %var_598, ptr %var_595
    %var_599 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_598, 0
    %var_600 = extractvalue { void (i64*, {  }, i64)*, {  } } %var_598, 1
    %var_601 = alloca i64
    call void %var_599(i64* %var_601, {  } %var_600, i64 %var_591)
    %var_602 = load i64, ptr %var_601
    store i64 %var_591, ptr %var_589
    ret void
}
"
`;

exports[`generic print > stderr 1`] = `[]`;

exports[`generic print > stdout 1`] = `
[
  "fn[]
fn[1]
fn[]
tuple(1, ab)
1
0.000000
ab
true
false
Symbol(unit)
Symbol(atom_atom_a)
Symbol(symbol_symbol_a)",
]
`;

exports[`simply typed lambda calc compilation > apply > compiled 1`] = `
"@const_33 = constant [3 x i8] c"%i\\00"
@const_81 = constant i32 2
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_27 = alloca {  }
    %var_28 = load {  }, ptr %var_27
    store {  } %var_28, ptr %var_27
    %var_34 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_35 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_34
    %var_36 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_35, void (i32*, {  }, i32)* @print_26, 0
    %var_37 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_36, {  } %var_28, 1
    store { void (i32*, {  }, i32)*, {  } } %var_37, ptr %var_34
    %var_39 = alloca {  }
    %var_40 = load {  }, ptr %var_39
    store {  } %var_40, ptr %var_39
    %var_62 = alloca { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } }
    %var_63 = load { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } }, ptr %var_62
    %var_64 = insertvalue { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_63, void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }*, {  }, { void (i32*, {  }, i32)*, {  } })* @fn_38, 0
    %var_65 = insertvalue { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_64, {  } %var_40, 1
    store { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_65, ptr %var_62
    %var_67 = alloca {  }
    %var_68 = load {  }, ptr %var_67
    store {  } %var_68, ptr %var_67
    %var_73 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_74 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_73
    %var_75 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_74, void (i32*, {  }, i32)* @fn_66, 0
    %var_76 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_75, {  } %var_68, 1
    store { void (i32*, {  }, i32)*, {  } } %var_76, ptr %var_73
    %var_77 = extractvalue { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_65, 0
    %var_78 = extractvalue { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }*, {  }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_65, 1
    %var_79 = alloca { void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }
    call void %var_77({ void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }* %var_79, {  } %var_78, { void (i32*, {  }, i32)*, {  } } %var_76)
    %var_80 = load { void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }, ptr %var_79
    %var_82 = load i32, ptr @const_81
    %var_83 = extractvalue { void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } } %var_80, 0
    %var_84 = extractvalue { void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } } %var_80, 1
    %var_85 = alloca i32
    call void %var_83(i32* %var_85, { { void (i32*, {  }, i32)*, {  } } } %var_84, i32 %var_82)
    %var_86 = load i32, ptr %var_85
    %var_87 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_37, 0
    %var_88 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_37, 1
    %var_89 = alloca i32
    call void %var_87(i32* %var_89, {  } %var_88, i32 %var_86)
    %var_90 = load i32, ptr %var_89
    ret i32 0
}
define void @print_26(ptr sret(i32) %var_29, {  } %var_30, i32 %var_31) {
  entry32: 
    call void @printf(i8* @const_33, i32 %var_31)
    store i32 %var_31, ptr %var_29
    ret void
}
declare i32 @printf(i8*, ...)
define void @fn_38(ptr sret({ void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }) %var_41, {  } %var_42, { void (i32*, {  }, i32)*, {  } } %var_43) {
  entry44: 
    %var_46 = alloca { { void (i32*, {  }, i32)*, {  } } }
    %var_47 = load { { void (i32*, {  }, i32)*, {  } } }, ptr %var_46
    %var_48 = insertvalue { { void (i32*, {  }, i32)*, {  } } } %var_47, { void (i32*, {  }, i32)*, {  } } %var_43, 0
    store { { void (i32*, {  }, i32)*, {  } } } %var_48, ptr %var_46
    %var_58 = alloca { void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }
    %var_59 = load { void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } }, ptr %var_58
    %var_60 = insertvalue { void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } } %var_59, void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)* @fn_45, 0
    %var_61 = insertvalue { void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } } %var_60, { { void (i32*, {  }, i32)*, {  } } } %var_48, 1
    store { void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } } %var_61, ptr %var_58
    store { void (i32*, { { void (i32*, {  }, i32)*, {  } } }, i32)*, { { void (i32*, {  }, i32)*, {  } } } } %var_61, ptr %var_41
    ret void
}
define void @fn_45(ptr sret(i32) %var_49, { { void (i32*, {  }, i32)*, {  } } } %var_50, i32 %var_51) {
  entry52: 
    %var_53 = extractvalue { { void (i32*, {  }, i32)*, {  } } } %var_50, 0
    %var_54 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_53, 0
    %var_55 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_53, 1
    %var_56 = alloca i32
    call void %var_54(i32* %var_56, {  } %var_55, i32 %var_51)
    %var_57 = load i32, ptr %var_56
    store i32 %var_57, ptr %var_49
    ret void
}
define void @fn_66(ptr sret(i32) %var_69, {  } %var_70, i32 %var_71) {
  entry72: 
    store i32 %var_71, ptr %var_69
    ret void
}
"
`;

exports[`simply typed lambda calc compilation > apply > stderr 1`] = `[]`;

exports[`simply typed lambda calc compilation > apply > stdout 1`] = `
[
  "2",
]
`;

exports[`simply typed lambda calc compilation > church tuple > compiled 1`] = `
"@const_41 = constant [3 x i8] c"%i\\00"
@const_93 = constant i32 1
@const_99 = constant i32 2
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_35 = alloca {  }
    %var_36 = load {  }, ptr %var_35
    store {  } %var_36, ptr %var_35
    %var_42 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_43 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_42
    %var_44 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_43, void (i32*, {  }, i32)* @print_34, 0
    %var_45 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_44, {  } %var_36, 1
    store { void (i32*, {  }, i32)*, {  } } %var_45, ptr %var_42
    %var_47 = alloca {  }
    %var_48 = load {  }, ptr %var_47
    store {  } %var_48, ptr %var_47
    %var_89 = alloca { void ({ void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } }
    %var_90 = load { void ({ void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } }, ptr %var_89
    %var_91 = insertvalue { void ({ void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_90, void ({ void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)* @fn_46, 0
    %var_92 = insertvalue { void ({ void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_91, {  } %var_48, 1
    store { void ({ void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_92, ptr %var_89
    %var_94 = load i32, ptr @const_93
    %var_95 = extractvalue { void ({ void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_92, 0
    %var_96 = extractvalue { void ({ void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_92, 1
    %var_97 = alloca { void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }
    call void %var_95({ void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }* %var_97, {  } %var_96, i32 %var_94)
    %var_98 = load { void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }, ptr %var_97
    %var_100 = load i32, ptr @const_99
    %var_101 = extractvalue { void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_98, 0
    %var_102 = extractvalue { void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_98, 1
    %var_103 = alloca { void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }
    call void %var_101({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }* %var_103, { i32 } %var_102, i32 %var_100)
    %var_104 = load { void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }, ptr %var_103
    %var_106 = alloca {  }
    %var_107 = load {  }, ptr %var_106
    store {  } %var_107, ptr %var_106
    %var_125 = alloca { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } }
    %var_126 = load { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } }, ptr %var_125
    %var_127 = insertvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_126, void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)* @fn_105, 0
    %var_128 = insertvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_127, {  } %var_107, 1
    store { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_128, ptr %var_125
    %var_129 = extractvalue { void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } } %var_104, 0
    %var_130 = extractvalue { void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } } %var_104, 1
    %var_131 = alloca i32
    call void %var_129(i32* %var_131, { i32, i32 } %var_130, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_128)
    %var_132 = load i32, ptr %var_131
    %var_133 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_45, 0
    %var_134 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_45, 1
    %var_135 = alloca i32
    call void %var_133(i32* %var_135, {  } %var_134, i32 %var_132)
    %var_136 = load i32, ptr %var_135
    ret i32 0
}
define void @print_34(ptr sret(i32) %var_37, {  } %var_38, i32 %var_39) {
  entry40: 
    call void @printf(i8* @const_41, i32 %var_39)
    store i32 %var_39, ptr %var_37
    ret void
}
declare i32 @printf(i8*, ...)
define void @fn_46(ptr sret({ void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }) %var_49, {  } %var_50, i32 %var_51) {
  entry52: 
    %var_54 = alloca { i32 }
    %var_55 = load { i32 }, ptr %var_54
    %var_56 = insertvalue { i32 } %var_55, i32 %var_51, 0
    store { i32 } %var_56, ptr %var_54
    %var_85 = alloca { void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }
    %var_86 = load { void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }, ptr %var_85
    %var_87 = insertvalue { void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_86, void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)* @fn_53, 0
    %var_88 = insertvalue { void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_87, { i32 } %var_56, 1
    store { void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_88, ptr %var_85
    store { void ({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_88, ptr %var_49
    ret void
}
define void @fn_53(ptr sret({ void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }) %var_57, { i32 } %var_58, i32 %var_59) {
  entry60: 
    %var_61 = extractvalue { i32 } %var_58, 0
    %var_63 = alloca { i32, i32 }
    %var_64 = load { i32, i32 }, ptr %var_63
    %var_65 = insertvalue { i32, i32 } %var_64, i32 %var_61, 0
    %var_66 = insertvalue { i32, i32 } %var_65, i32 %var_59, 1
    store { i32, i32 } %var_66, ptr %var_63
    %var_81 = alloca { void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }
    %var_82 = load { void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } }, ptr %var_81
    %var_83 = insertvalue { void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } } %var_82, void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })* @fn_62, 0
    %var_84 = insertvalue { void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } } %var_83, { i32, i32 } %var_66, 1
    store { void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } } %var_84, ptr %var_81
    store { void (i32*, { i32, i32 }, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } })*, { i32, i32 } } %var_84, ptr %var_57
    ret void
}
define void @fn_62(ptr sret(i32) %var_67, { i32, i32 } %var_68, { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_69) {
  entry70: 
    %var_71 = extractvalue { i32, i32 } %var_68, 0
    %var_72 = extractvalue { i32, i32 } %var_68, 1
    %var_73 = extractvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_69, 0
    %var_74 = extractvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_69, 1
    %var_75 = alloca { void (i32*, { i32 }, i32)*, { i32 } }
    call void %var_73({ void (i32*, { i32 }, i32)*, { i32 } }* %var_75, {  } %var_74, i32 %var_71)
    %var_76 = load { void (i32*, { i32 }, i32)*, { i32 } }, ptr %var_75
    %var_77 = extractvalue { void (i32*, { i32 }, i32)*, { i32 } } %var_76, 0
    %var_78 = extractvalue { void (i32*, { i32 }, i32)*, { i32 } } %var_76, 1
    %var_79 = alloca i32
    call void %var_77(i32* %var_79, { i32 } %var_78, i32 %var_72)
    %var_80 = load i32, ptr %var_79
    store i32 %var_80, ptr %var_67
    ret void
}
define void @fn_105(ptr sret({ void (i32*, { i32 }, i32)*, { i32 } }) %var_108, {  } %var_109, i32 %var_110) {
  entry111: 
    %var_113 = alloca { i32 }
    %var_114 = load { i32 }, ptr %var_113
    %var_115 = insertvalue { i32 } %var_114, i32 %var_110, 0
    store { i32 } %var_115, ptr %var_113
    %var_121 = alloca { void (i32*, { i32 }, i32)*, { i32 } }
    %var_122 = load { void (i32*, { i32 }, i32)*, { i32 } }, ptr %var_121
    %var_123 = insertvalue { void (i32*, { i32 }, i32)*, { i32 } } %var_122, void (i32*, { i32 }, i32)* @fn_112, 0
    %var_124 = insertvalue { void (i32*, { i32 }, i32)*, { i32 } } %var_123, { i32 } %var_115, 1
    store { void (i32*, { i32 }, i32)*, { i32 } } %var_124, ptr %var_121
    store { void (i32*, { i32 }, i32)*, { i32 } } %var_124, ptr %var_108
    ret void
}
define void @fn_112(ptr sret(i32) %var_116, { i32 } %var_117, i32 %var_118) {
  entry119: 
    %var_120 = extractvalue { i32 } %var_117, 0
    store i32 %var_120, ptr %var_116
    ret void
}
"
`;

exports[`simply typed lambda calc compilation > church tuple > stderr 1`] = `[]`;

exports[`simply typed lambda calc compilation > church tuple > stdout 1`] = `
[
  "1",
]
`;

exports[`simply typed lambda calc compilation > church tuple 2 > compiled 1`] = `
"@const_34 = constant [3 x i8] c"%i\\00"
@const_56 = constant i32 1
@const_58 = constant i32 2
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_28 = alloca {  }
    %var_29 = load {  }, ptr %var_28
    store {  } %var_29, ptr %var_28
    %var_35 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_36 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_35
    %var_37 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_36, void (i32*, {  }, i32)* @print_27, 0
    %var_38 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_37, {  } %var_29, 1
    store { void (i32*, {  }, i32)*, {  } } %var_38, ptr %var_35
    %var_40 = alloca {  }
    %var_41 = load {  }, ptr %var_40
    store {  } %var_41, ptr %var_40
    %var_52 = alloca { void (i32*, {  }, i32, i32, { void (i32*, {  }, i32, i32)*, {  } })*, {  } }
    %var_53 = load { void (i32*, {  }, i32, i32, { void (i32*, {  }, i32, i32)*, {  } })*, {  } }, ptr %var_52
    %var_54 = insertvalue { void (i32*, {  }, i32, i32, { void (i32*, {  }, i32, i32)*, {  } })*, {  } } %var_53, void (i32*, {  }, i32, i32, { void (i32*, {  }, i32, i32)*, {  } })* @fn_39, 0
    %var_55 = insertvalue { void (i32*, {  }, i32, i32, { void (i32*, {  }, i32, i32)*, {  } })*, {  } } %var_54, {  } %var_41, 1
    store { void (i32*, {  }, i32, i32, { void (i32*, {  }, i32, i32)*, {  } })*, {  } } %var_55, ptr %var_52
    %var_57 = load i32, ptr @const_56
    %var_59 = load i32, ptr @const_58
    %var_61 = alloca {  }
    %var_62 = load {  }, ptr %var_61
    store {  } %var_62, ptr %var_61
    %var_67 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_68 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_67
    %var_69 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_68, void (i32*, {  }, i32)* @fn_60, 0
    %var_70 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_69, {  } %var_62, 1
    store { void (i32*, {  }, i32)*, {  } } %var_70, ptr %var_67
    %var_71 = extractvalue { void (i32*, {  }, i32, i32, { void (i32*, {  }, i32, i32)*, {  } })*, {  } } %var_55, 0
    %var_72 = extractvalue { void (i32*, {  }, i32, i32, { void (i32*, {  }, i32, i32)*, {  } })*, {  } } %var_55, 1
    %var_73 = alloca i32
    call void %var_71(i32* %var_73, {  } %var_72, i32 %var_57, i32 %var_59, { void (i32*, {  }, i32, i32)*, {  } } %var_70)
    %var_74 = load i32, ptr %var_73
    %var_75 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_38, 0
    %var_76 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_38, 1
    %var_77 = alloca i32
    call void %var_75(i32* %var_77, {  } %var_76, i32 %var_74)
    %var_78 = load i32, ptr %var_77
    ret i32 0
}
define void @print_27(ptr sret(i32) %var_30, {  } %var_31, i32 %var_32) {
  entry33: 
    call void @printf(i8* @const_34, i32 %var_32)
    store i32 %var_32, ptr %var_30
    ret void
}
declare i32 @printf(i8*, ...)
define void @fn_39(ptr sret(i32) %var_42, {  } %var_43, i32 %var_44, i32 %var_45, { void (i32*, {  }, i32, i32)*, {  } } %var_46) {
  entry47: 
    %var_48 = extractvalue { void (i32*, {  }, i32, i32)*, {  } } %var_46, 0
    %var_49 = extractvalue { void (i32*, {  }, i32, i32)*, {  } } %var_46, 1
    %var_50 = alloca i32
    call void %var_48(i32* %var_50, {  } %var_49, i32 %var_44, i32 %var_45)
    %var_51 = load i32, ptr %var_50
    store i32 %var_51, ptr %var_42
    ret void
}
define void @fn_60(ptr sret(i32) %var_63, {  } %var_64, i32 %var_65) {
  entry66: 
    store i32 %var_65, ptr %var_63
    ret void
}
"
`;

exports[`simply typed lambda calc compilation > church tuple 2 > stderr 1`] = `[]`;

exports[`simply typed lambda calc compilation > church tuple 2 > stdout 1`] = `
[
  "1",
]
`;

exports[`simply typed lambda calc compilation > either > compiled 1`] = `
"@const_39 = constant [3 x i8] c"%i\\00"
@const_87 = constant i32 1
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_33 = alloca {  }
    %var_34 = load {  }, ptr %var_33
    store {  } %var_34, ptr %var_33
    %var_40 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_41 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_40
    %var_42 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_41, void (i32*, {  }, i32)* @print_32, 0
    %var_43 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_42, {  } %var_34, 1
    store { void (i32*, {  }, i32)*, {  } } %var_43, ptr %var_40
    %var_45 = alloca {  }
    %var_46 = load {  }, ptr %var_45
    store {  } %var_46, ptr %var_45
    %var_83 = alloca { void ({ void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }*, {  }, i32)*, {  } }
    %var_84 = load { void ({ void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }*, {  }, i32)*, {  } }, ptr %var_83
    %var_85 = insertvalue { void ({ void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }*, {  }, i32)*, {  } } %var_84, void ({ void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }*, {  }, i32)* @fn_44, 0
    %var_86 = insertvalue { void ({ void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }*, {  }, i32)*, {  } } %var_85, {  } %var_46, 1
    store { void ({ void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }*, {  }, i32)*, {  } } %var_86, ptr %var_83
    %var_88 = load i32, ptr @const_87
    %var_89 = extractvalue { void ({ void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }*, {  }, i32)*, {  } } %var_86, 0
    %var_90 = extractvalue { void ({ void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }*, {  }, i32)*, {  } } %var_86, 1
    %var_91 = alloca { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }
    call void %var_89({ void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }* %var_91, {  } %var_90, i32 %var_88)
    %var_92 = load { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }, ptr %var_91
    %var_94 = alloca {  }
    %var_95 = load {  }, ptr %var_94
    store {  } %var_95, ptr %var_94
    %var_100 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_101 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_100
    %var_102 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_101, void (i32*, {  }, i32)* @fn_93, 0
    %var_103 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_102, {  } %var_95, 1
    store { void (i32*, {  }, i32)*, {  } } %var_103, ptr %var_100
    %var_104 = extractvalue { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } } %var_92, 0
    %var_105 = extractvalue { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } } %var_92, 1
    %var_106 = alloca { void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }
    call void %var_104({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }* %var_106, { i32 } %var_105, { void (i32*, {  }, i32)*, {  } } %var_103)
    %var_107 = load { void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }, ptr %var_106
    %var_109 = alloca {  }
    %var_110 = load {  }, ptr %var_109
    store {  } %var_110, ptr %var_109
    %var_115 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_116 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_115
    %var_117 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_116, void (i32*, {  }, i32)* @fn_108, 0
    %var_118 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_117, {  } %var_110, 1
    store { void (i32*, {  }, i32)*, {  } } %var_118, ptr %var_115
    %var_119 = extractvalue { void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } } %var_107, 0
    %var_120 = extractvalue { void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } } %var_107, 1
    %var_121 = alloca i32
    call void %var_119(i32* %var_121, { { void (i32*, {  }, i32)*, {  } }, i32 } %var_120, { void (i32*, {  }, i32)*, {  } } %var_118)
    %var_122 = load i32, ptr %var_121
    %var_123 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_43, 0
    %var_124 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_43, 1
    %var_125 = alloca i32
    call void %var_123(i32* %var_125, {  } %var_124, i32 %var_122)
    %var_126 = load i32, ptr %var_125
    ret i32 0
}
define void @print_32(ptr sret(i32) %var_35, {  } %var_36, i32 %var_37) {
  entry38: 
    call void @printf(i8* @const_39, i32 %var_37)
    store i32 %var_37, ptr %var_35
    ret void
}
declare i32 @printf(i8*, ...)
define void @fn_44(ptr sret({ void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }) %var_47, {  } %var_48, i32 %var_49) {
  entry50: 
    %var_52 = alloca { i32 }
    %var_53 = load { i32 }, ptr %var_52
    %var_54 = insertvalue { i32 } %var_53, i32 %var_49, 0
    store { i32 } %var_54, ptr %var_52
    %var_79 = alloca { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }
    %var_80 = load { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } }, ptr %var_79
    %var_81 = insertvalue { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } } %var_80, void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })* @fn_51, 0
    %var_82 = insertvalue { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } } %var_81, { i32 } %var_54, 1
    store { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } } %var_82, ptr %var_79
    store { void ({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }*, { i32 }, { void (i32*, {  }, i32)*, {  } })*, { i32 } } %var_82, ptr %var_47
    ret void
}
define void @fn_51(ptr sret({ void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }) %var_55, { i32 } %var_56, { void (i32*, {  }, i32)*, {  } } %var_57) {
  entry58: 
    %var_59 = extractvalue { i32 } %var_56, 0
    %var_61 = alloca { { void (i32*, {  }, i32)*, {  } }, i32 }
    %var_62 = load { { void (i32*, {  }, i32)*, {  } }, i32 }, ptr %var_61
    %var_63 = insertvalue { { void (i32*, {  }, i32)*, {  } }, i32 } %var_62, { void (i32*, {  }, i32)*, {  } } %var_57, 0
    %var_64 = insertvalue { { void (i32*, {  }, i32)*, {  } }, i32 } %var_63, i32 %var_59, 1
    store { { void (i32*, {  }, i32)*, {  } }, i32 } %var_64, ptr %var_61
    %var_75 = alloca { void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }
    %var_76 = load { void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } }, ptr %var_75
    %var_77 = insertvalue { void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } } %var_76, void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })* @fn_60, 0
    %var_78 = insertvalue { void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } } %var_77, { { void (i32*, {  }, i32)*, {  } }, i32 } %var_64, 1
    store { void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } } %var_78, ptr %var_75
    store { void (i32*, { { void (i32*, {  }, i32)*, {  } }, i32 }, { void (i32*, {  }, i32)*, {  } })*, { { void (i32*, {  }, i32)*, {  } }, i32 } } %var_78, ptr %var_55
    ret void
}
define void @fn_60(ptr sret(i32) %var_65, { { void (i32*, {  }, i32)*, {  } }, i32 } %var_66, { void (i32*, {  }, i32)*, {  } } %var_67) {
  entry68: 
    %var_69 = extractvalue { { void (i32*, {  }, i32)*, {  } }, i32 } %var_66, 0
    %var_70 = extractvalue { { void (i32*, {  }, i32)*, {  } }, i32 } %var_66, 1
    %var_71 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_69, 0
    %var_72 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_69, 1
    %var_73 = alloca i32
    call void %var_71(i32* %var_73, {  } %var_72, i32 %var_70)
    %var_74 = load i32, ptr %var_73
    store i32 %var_74, ptr %var_65
    ret void
}
define void @fn_93(ptr sret(i32) %var_96, {  } %var_97, i32 %var_98) {
  entry99: 
    store i32 %var_98, ptr %var_96
    ret void
}
define void @fn_108(ptr sret(i32) %var_111, {  } %var_112, i32 %var_113) {
  entry114: 
    store i32 %var_113, ptr %var_111
    ret void
}
"
`;

exports[`simply typed lambda calc compilation > either > stderr 1`] = `[]`;

exports[`simply typed lambda calc compilation > either > stdout 1`] = `
[
  "1",
]
`;

exports[`simply typed lambda calc compilation > either 2 > compiled 1`] = `
"@const_35 = constant [3 x i8] c"%i\\00"
@const_57 = constant i32 1
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_29 = alloca {  }
    %var_30 = load {  }, ptr %var_29
    store {  } %var_30, ptr %var_29
    %var_36 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_37 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_36
    %var_38 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_37, void (i32*, {  }, i32)* @print_28, 0
    %var_39 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_38, {  } %var_30, 1
    store { void (i32*, {  }, i32)*, {  } } %var_39, ptr %var_36
    %var_41 = alloca {  }
    %var_42 = load {  }, ptr %var_41
    store {  } %var_42, ptr %var_41
    %var_53 = alloca { void (i32*, {  }, i32, { void (i32*, {  }, i32)*, {  } }, { void (i32*, {  }, i32)*, {  } })*, {  } }
    %var_54 = load { void (i32*, {  }, i32, { void (i32*, {  }, i32)*, {  } }, { void (i32*, {  }, i32)*, {  } })*, {  } }, ptr %var_53
    %var_55 = insertvalue { void (i32*, {  }, i32, { void (i32*, {  }, i32)*, {  } }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_54, void (i32*, {  }, i32, { void (i32*, {  }, i32)*, {  } }, { void (i32*, {  }, i32)*, {  } })* @fn_40, 0
    %var_56 = insertvalue { void (i32*, {  }, i32, { void (i32*, {  }, i32)*, {  } }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_55, {  } %var_42, 1
    store { void (i32*, {  }, i32, { void (i32*, {  }, i32)*, {  } }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_56, ptr %var_53
    %var_58 = load i32, ptr @const_57
    %var_60 = alloca {  }
    %var_61 = load {  }, ptr %var_60
    store {  } %var_61, ptr %var_60
    %var_66 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_67 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_66
    %var_68 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_67, void (i32*, {  }, i32)* @fn_59, 0
    %var_69 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_68, {  } %var_61, 1
    store { void (i32*, {  }, i32)*, {  } } %var_69, ptr %var_66
    %var_71 = alloca {  }
    %var_72 = load {  }, ptr %var_71
    store {  } %var_72, ptr %var_71
    %var_77 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_78 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_77
    %var_79 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_78, void (i32*, {  }, i32)* @fn_70, 0
    %var_80 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_79, {  } %var_72, 1
    store { void (i32*, {  }, i32)*, {  } } %var_80, ptr %var_77
    %var_81 = extractvalue { void (i32*, {  }, i32, { void (i32*, {  }, i32)*, {  } }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_56, 0
    %var_82 = extractvalue { void (i32*, {  }, i32, { void (i32*, {  }, i32)*, {  } }, { void (i32*, {  }, i32)*, {  } })*, {  } } %var_56, 1
    %var_83 = alloca i32
    call void %var_81(i32* %var_83, {  } %var_82, i32 %var_58, { void (i32*, {  }, i32)*, {  } } %var_69, { void (i32*, {  }, i32)*, {  } } %var_80)
    %var_84 = load i32, ptr %var_83
    %var_85 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_39, 0
    %var_86 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_39, 1
    %var_87 = alloca i32
    call void %var_85(i32* %var_87, {  } %var_86, i32 %var_84)
    %var_88 = load i32, ptr %var_87
    ret i32 0
}
define void @print_28(ptr sret(i32) %var_31, {  } %var_32, i32 %var_33) {
  entry34: 
    call void @printf(i8* @const_35, i32 %var_33)
    store i32 %var_33, ptr %var_31
    ret void
}
declare i32 @printf(i8*, ...)
define void @fn_40(ptr sret(i32) %var_43, {  } %var_44, i32 %var_45, { void (i32*, {  }, i32)*, {  } } %var_46, { void (i32*, {  }, i32)*, {  } } %var_47) {
  entry48: 
    %var_49 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_46, 0
    %var_50 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_46, 1
    %var_51 = alloca i32
    call void %var_49(i32* %var_51, {  } %var_50, i32 %var_45)
    %var_52 = load i32, ptr %var_51
    store i32 %var_52, ptr %var_43
    ret void
}
define void @fn_59(ptr sret(i32) %var_62, {  } %var_63, i32 %var_64) {
  entry65: 
    store i32 %var_64, ptr %var_62
    ret void
}
define void @fn_70(ptr sret(i32) %var_73, {  } %var_74, i32 %var_75) {
  entry76: 
    store i32 %var_75, ptr %var_73
    ret void
}
"
`;

exports[`simply typed lambda calc compilation > either 2 > stderr 1`] = `[]`;

exports[`simply typed lambda calc compilation > either 2 > stdout 1`] = `
[
  "1",
]
`;

exports[`simply typed lambda calc compilation > function application and literal print > compiled 1`] = `
"@const_27 = constant [3 x i8] c"%i\\00"
@const_44 = constant i32 2
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_21 = alloca {  }
    %var_22 = load {  }, ptr %var_21
    store {  } %var_22, ptr %var_21
    %var_28 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_29 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_28
    %var_30 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_29, void (i32*, {  }, i32)* @print_20, 0
    %var_31 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_30, {  } %var_22, 1
    store { void (i32*, {  }, i32)*, {  } } %var_31, ptr %var_28
    %var_33 = alloca {  }
    %var_34 = load {  }, ptr %var_33
    store {  } %var_34, ptr %var_33
    %var_40 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_41 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_40
    %var_42 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_41, void (i32*, {  }, i32)* @fn_32, 0
    %var_43 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_42, {  } %var_34, 1
    store { void (i32*, {  }, i32)*, {  } } %var_43, ptr %var_40
    %var_45 = load i32, ptr @const_44
    %var_46 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_43, 0
    %var_47 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_43, 1
    %var_48 = alloca i32
    call void %var_46(i32* %var_48, {  } %var_47, i32 %var_45)
    %var_49 = load i32, ptr %var_48
    %var_50 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_31, 0
    %var_51 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_31, 1
    %var_52 = alloca i32
    call void %var_50(i32* %var_52, {  } %var_51, i32 %var_49)
    %var_53 = load i32, ptr %var_52
    ret i32 0
}
define void @print_20(ptr sret(i32) %var_23, {  } %var_24, i32 %var_25) {
  entry26: 
    call void @printf(i8* @const_27, i32 %var_25)
    store i32 %var_25, ptr %var_23
    ret void
}
declare i32 @printf(i8*, ...)
define void @fn_32(ptr sret(i32) %var_35, {  } %var_36, i32 %var_37) {
  entry38: 
    %var_39 = add i32 %var_37, %var_37
    store i32 %var_39, ptr %var_35
    ret void
}
"
`;

exports[`simply typed lambda calc compilation > function application and literal print > stderr 1`] = `[]`;

exports[`simply typed lambda calc compilation > function application and literal print > stdout 1`] = `
[
  "4",
]
`;

exports[`simply typed lambda calc compilation > function closure > compiled 1`] = `
"@const_33 = constant [3 x i8] c"%i\\00"
@const_54 = constant i32 2
@const_66 = constant i32 1
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_27 = alloca {  }
    %var_28 = load {  }, ptr %var_27
    store {  } %var_28, ptr %var_27
    %var_34 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_35 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_34
    %var_36 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_35, void (i32*, {  }, i32)* @print_26, 0
    %var_37 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_36, {  } %var_28, 1
    store { void (i32*, {  }, i32)*, {  } } %var_37, ptr %var_34
    %var_39 = alloca {  }
    %var_40 = load {  }, ptr %var_39
    store {  } %var_40, ptr %var_39
    %var_62 = alloca { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } }
    %var_63 = load { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } }, ptr %var_62
    %var_64 = insertvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_63, void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)* @fn_38, 0
    %var_65 = insertvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_64, {  } %var_40, 1
    store { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_65, ptr %var_62
    %var_67 = load i32, ptr @const_66
    %var_68 = extractvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_65, 0
    %var_69 = extractvalue { void ({ void (i32*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_65, 1
    %var_70 = alloca { void (i32*, { i32 }, i32)*, { i32 } }
    call void %var_68({ void (i32*, { i32 }, i32)*, { i32 } }* %var_70, {  } %var_69, i32 %var_67)
    %var_71 = load { void (i32*, { i32 }, i32)*, { i32 } }, ptr %var_70
    %var_72 = load i32, ptr @const_54
    %var_73 = extractvalue { void (i32*, { i32 }, i32)*, { i32 } } %var_71, 0
    %var_74 = extractvalue { void (i32*, { i32 }, i32)*, { i32 } } %var_71, 1
    %var_75 = alloca i32
    call void %var_73(i32* %var_75, { i32 } %var_74, i32 %var_72)
    %var_76 = load i32, ptr %var_75
    %var_77 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_37, 0
    %var_78 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_37, 1
    %var_79 = alloca i32
    call void %var_77(i32* %var_79, {  } %var_78, i32 %var_76)
    %var_80 = load i32, ptr %var_79
    ret i32 0
}
define void @print_26(ptr sret(i32) %var_29, {  } %var_30, i32 %var_31) {
  entry32: 
    call void @printf(i8* @const_33, i32 %var_31)
    store i32 %var_31, ptr %var_29
    ret void
}
declare i32 @printf(i8*, ...)
define void @fn_38(ptr sret({ void (i32*, { i32 }, i32)*, { i32 } }) %var_41, {  } %var_42, i32 %var_43) {
  entry44: 
    %var_46 = alloca { i32 }
    %var_47 = load { i32 }, ptr %var_46
    %var_48 = insertvalue { i32 } %var_47, i32 %var_43, 0
    store { i32 } %var_48, ptr %var_46
    %var_58 = alloca { void (i32*, { i32 }, i32)*, { i32 } }
    %var_59 = load { void (i32*, { i32 }, i32)*, { i32 } }, ptr %var_58
    %var_60 = insertvalue { void (i32*, { i32 }, i32)*, { i32 } } %var_59, void (i32*, { i32 }, i32)* @fn_45, 0
    %var_61 = insertvalue { void (i32*, { i32 }, i32)*, { i32 } } %var_60, { i32 } %var_48, 1
    store { void (i32*, { i32 }, i32)*, { i32 } } %var_61, ptr %var_58
    store { void (i32*, { i32 }, i32)*, { i32 } } %var_61, ptr %var_41
    ret void
}
define void @fn_45(ptr sret(i32) %var_49, { i32 } %var_50, i32 %var_51) {
  entry52: 
    %var_53 = extractvalue { i32 } %var_50, 0
    %var_55 = load i32, ptr @const_54
    %var_56 = mul i32 %var_55, %var_53
    %var_57 = add i32 %var_51, %var_56
    store i32 %var_57, ptr %var_49
    ret void
}
"
`;

exports[`simply typed lambda calc compilation > function closure > stderr 1`] = `[]`;

exports[`simply typed lambda calc compilation > function closure > stdout 1`] = `
[
  "4",
]
`;

exports[`simply typed lambda calc compilation > function deep closure > compiled 1`] = `
"@const_37 = constant [3 x i8] c"%i\\00"
@const_83 = constant i32 1
@const_89 = constant i32 3
@const_95 = constant i32 5
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_31 = alloca {  }
    %var_32 = load {  }, ptr %var_31
    store {  } %var_32, ptr %var_31
    %var_38 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_39 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_38
    %var_40 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_39, void (i32*, {  }, i32)* @print_30, 0
    %var_41 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_40, {  } %var_32, 1
    store { void (i32*, {  }, i32)*, {  } } %var_41, ptr %var_38
    %var_43 = alloca {  }
    %var_44 = load {  }, ptr %var_43
    store {  } %var_44, ptr %var_43
    %var_79 = alloca { void ({ void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } }
    %var_80 = load { void ({ void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } }, ptr %var_79
    %var_81 = insertvalue { void ({ void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_80, void ({ void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)* @fn_42, 0
    %var_82 = insertvalue { void ({ void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_81, {  } %var_44, 1
    store { void ({ void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_82, ptr %var_79
    %var_84 = load i32, ptr @const_83
    %var_85 = extractvalue { void ({ void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_82, 0
    %var_86 = extractvalue { void ({ void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }*, {  }, i32)*, {  } } %var_82, 1
    %var_87 = alloca { void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }
    call void %var_85({ void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }* %var_87, {  } %var_86, i32 %var_84)
    %var_88 = load { void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }, ptr %var_87
    %var_90 = load i32, ptr @const_89
    %var_91 = extractvalue { void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_88, 0
    %var_92 = extractvalue { void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_88, 1
    %var_93 = alloca { void (i32*, { i32, i32 }, i32)*, { i32, i32 } }
    call void %var_91({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }* %var_93, { i32 } %var_92, i32 %var_90)
    %var_94 = load { void (i32*, { i32, i32 }, i32)*, { i32, i32 } }, ptr %var_93
    %var_96 = load i32, ptr @const_95
    %var_97 = extractvalue { void (i32*, { i32, i32 }, i32)*, { i32, i32 } } %var_94, 0
    %var_98 = extractvalue { void (i32*, { i32, i32 }, i32)*, { i32, i32 } } %var_94, 1
    %var_99 = alloca i32
    call void %var_97(i32* %var_99, { i32, i32 } %var_98, i32 %var_96)
    %var_100 = load i32, ptr %var_99
    %var_101 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_41, 0
    %var_102 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_41, 1
    %var_103 = alloca i32
    call void %var_101(i32* %var_103, {  } %var_102, i32 %var_100)
    %var_104 = load i32, ptr %var_103
    ret i32 0
}
define void @print_30(ptr sret(i32) %var_33, {  } %var_34, i32 %var_35) {
  entry36: 
    call void @printf(i8* @const_37, i32 %var_35)
    store i32 %var_35, ptr %var_33
    ret void
}
declare i32 @printf(i8*, ...)
define void @fn_42(ptr sret({ void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }) %var_45, {  } %var_46, i32 %var_47) {
  entry48: 
    %var_50 = alloca { i32 }
    %var_51 = load { i32 }, ptr %var_50
    %var_52 = insertvalue { i32 } %var_51, i32 %var_47, 0
    store { i32 } %var_52, ptr %var_50
    %var_75 = alloca { void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }
    %var_76 = load { void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } }, ptr %var_75
    %var_77 = insertvalue { void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_76, void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)* @fn_49, 0
    %var_78 = insertvalue { void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_77, { i32 } %var_52, 1
    store { void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_78, ptr %var_75
    store { void ({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }*, { i32 }, i32)*, { i32 } } %var_78, ptr %var_45
    ret void
}
define void @fn_49(ptr sret({ void (i32*, { i32, i32 }, i32)*, { i32, i32 } }) %var_53, { i32 } %var_54, i32 %var_55) {
  entry56: 
    %var_57 = extractvalue { i32 } %var_54, 0
    %var_59 = alloca { i32, i32 }
    %var_60 = load { i32, i32 }, ptr %var_59
    %var_61 = insertvalue { i32, i32 } %var_60, i32 %var_57, 0
    %var_62 = insertvalue { i32, i32 } %var_61, i32 %var_55, 1
    store { i32, i32 } %var_62, ptr %var_59
    %var_71 = alloca { void (i32*, { i32, i32 }, i32)*, { i32, i32 } }
    %var_72 = load { void (i32*, { i32, i32 }, i32)*, { i32, i32 } }, ptr %var_71
    %var_73 = insertvalue { void (i32*, { i32, i32 }, i32)*, { i32, i32 } } %var_72, void (i32*, { i32, i32 }, i32)* @fn_58, 0
    %var_74 = insertvalue { void (i32*, { i32, i32 }, i32)*, { i32, i32 } } %var_73, { i32, i32 } %var_62, 1
    store { void (i32*, { i32, i32 }, i32)*, { i32, i32 } } %var_74, ptr %var_71
    store { void (i32*, { i32, i32 }, i32)*, { i32, i32 } } %var_74, ptr %var_53
    ret void
}
define void @fn_58(ptr sret(i32) %var_63, { i32, i32 } %var_64, i32 %var_65) {
  entry66: 
    %var_67 = extractvalue { i32, i32 } %var_64, 0
    %var_68 = extractvalue { i32, i32 } %var_64, 1
    %var_69 = add i32 %var_68, %var_65
    %var_70 = add i32 %var_67, %var_69
    store i32 %var_70, ptr %var_63
    ret void
}
"
`;

exports[`simply typed lambda calc compilation > function deep closure > stderr 1`] = `[]`;

exports[`simply typed lambda calc compilation > function deep closure > stdout 1`] = `
[
  "9",
]
`;

exports[`simply typed lambda calc compilation > function multiple args > compiled 1`] = `
"@const_31 = constant [3 x i8] c"%i\\00"
@const_44 = constant i32 2
@const_52 = constant i32 1
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_25 = alloca {  }
    %var_26 = load {  }, ptr %var_25
    store {  } %var_26, ptr %var_25
    %var_32 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_33 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_32
    %var_34 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_33, void (i32*, {  }, i32)* @print_24, 0
    %var_35 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_34, {  } %var_26, 1
    store { void (i32*, {  }, i32)*, {  } } %var_35, ptr %var_32
    %var_37 = alloca {  }
    %var_38 = load {  }, ptr %var_37
    store {  } %var_38, ptr %var_37
    %var_48 = alloca { void (i32*, {  }, i32, i32)*, {  } }
    %var_49 = load { void (i32*, {  }, i32, i32)*, {  } }, ptr %var_48
    %var_50 = insertvalue { void (i32*, {  }, i32, i32)*, {  } } %var_49, void (i32*, {  }, i32, i32)* @fn_36, 0
    %var_51 = insertvalue { void (i32*, {  }, i32, i32)*, {  } } %var_50, {  } %var_38, 1
    store { void (i32*, {  }, i32, i32)*, {  } } %var_51, ptr %var_48
    %var_53 = load i32, ptr @const_52
    %var_54 = load i32, ptr @const_44
    %var_55 = extractvalue { void (i32*, {  }, i32, i32)*, {  } } %var_51, 0
    %var_56 = extractvalue { void (i32*, {  }, i32, i32)*, {  } } %var_51, 1
    %var_57 = alloca i32
    call void %var_55(i32* %var_57, {  } %var_56, i32 %var_53, i32 %var_54)
    %var_58 = load i32, ptr %var_57
    %var_59 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_35, 0
    %var_60 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_35, 1
    %var_61 = alloca i32
    call void %var_59(i32* %var_61, {  } %var_60, i32 %var_58)
    %var_62 = load i32, ptr %var_61
    ret i32 0
}
define void @print_24(ptr sret(i32) %var_27, {  } %var_28, i32 %var_29) {
  entry30: 
    call void @printf(i8* @const_31, i32 %var_29)
    store i32 %var_29, ptr %var_27
    ret void
}
declare i32 @printf(i8*, ...)
define void @fn_36(ptr sret(i32) %var_39, {  } %var_40, i32 %var_41, i32 %var_42) {
  entry43: 
    %var_45 = load i32, ptr @const_44
    %var_46 = mul i32 %var_45, %var_41
    %var_47 = add i32 %var_42, %var_46
    store i32 %var_47, ptr %var_39
    ret void
}
"
`;

exports[`simply typed lambda calc compilation > function multiple args > stderr 1`] = `[]`;

exports[`simply typed lambda calc compilation > function multiple args > stdout 1`] = `
[
  "4",
]
`;

exports[`simply typed lambda calc compilation > hello world > compiled 1`] = `
"@const_21 = constant [3 x i8] c"%s\\00"
@const_26 = constant [13 x i8] c"hello world!\\00"
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_15 = alloca {  }
    %var_16 = load {  }, ptr %var_15
    store {  } %var_16, ptr %var_15
    %var_22 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_23 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_22
    %var_24 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_23, void (i8**, {  }, i8*)* @print_14, 0
    %var_25 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_24, {  } %var_16, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_25, ptr %var_22
    %var_27 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_25, 0
    %var_28 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_25, 1
    %var_29 = alloca i8*
    call void %var_27(i8** %var_29, {  } %var_28, i8* @const_26)
    %var_30 = load i8*, ptr %var_29
    ret i32 0
}
define void @print_14(ptr sret(i8*) %var_17, {  } %var_18, i8* %var_19) {
  entry20: 
    call void @printf(i8* @const_21, i8* %var_19)
    store i8* %var_19, ptr %var_17
    ret void
}
declare i32 @printf(i8*, ...)
"
`;

exports[`simply typed lambda calc compilation > hello world > stderr 1`] = `[]`;

exports[`simply typed lambda calc compilation > hello world > stdout 1`] = `
[
  "hello world!",
]
`;

exports[`simply typed lambda calc compilation > hello world string > compiled 1`] = `
"@const_12 = constant [13 x i8] c"hello world!\\00"
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    ret i32 0
}
"
`;

exports[`simply typed lambda calc compilation > hello world string > stderr 1`] = `[]`;

exports[`simply typed lambda calc compilation > hello world string > stdout 1`] = `[]`;

exports[`simply typed lambda calc compilation > print number > compiled 1`] = `
"@const_21 = constant [3 x i8] c"%i\\00"
@const_26 = constant i32 1
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_15 = alloca {  }
    %var_16 = load {  }, ptr %var_15
    store {  } %var_16, ptr %var_15
    %var_22 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_23 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_22
    %var_24 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_23, void (i32*, {  }, i32)* @print_14, 0
    %var_25 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_24, {  } %var_16, 1
    store { void (i32*, {  }, i32)*, {  } } %var_25, ptr %var_22
    %var_27 = load i32, ptr @const_26
    %var_28 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_25, 0
    %var_29 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_25, 1
    %var_30 = alloca i32
    call void %var_28(i32* %var_30, {  } %var_29, i32 %var_27)
    %var_31 = load i32, ptr %var_30
    ret i32 0
}
define void @print_14(ptr sret(i32) %var_17, {  } %var_18, i32 %var_19) {
  entry20: 
    call void @printf(i8* @const_21, i32 %var_19)
    store i32 %var_19, ptr %var_17
    ret void
}
declare i32 @printf(i8*, ...)
"
`;

exports[`simply typed lambda calc compilation > print number > stderr 1`] = `[]`;

exports[`simply typed lambda calc compilation > print number > stdout 1`] = `
[
  "1",
]
`;

exports[`structured programming compilation > block > compiled 1`] = `
"@const_26 = constant [3 x i8] c"%i\\00"
@const_31 = constant i32 123
@const_33 = constant i32 234
@const_35 = constant i32 345
@const_37 = constant i32 456
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_20 = alloca {  }
    %var_21 = load {  }, ptr %var_20
    store {  } %var_21, ptr %var_20
    %var_27 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_28 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_27
    %var_29 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_28, void (i32*, {  }, i32)* @print_19, 0
    %var_30 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_29, {  } %var_21, 1
    store { void (i32*, {  }, i32)*, {  } } %var_30, ptr %var_27
    %var_32 = load i32, ptr @const_31
    %var_34 = load i32, ptr @const_33
    %var_36 = load i32, ptr @const_35
    %var_38 = load i32, ptr @const_37
    %var_39 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_30, 0
    %var_40 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_30, 1
    %var_41 = alloca i32
    call void %var_39(i32* %var_41, {  } %var_40, i32 %var_38)
    %var_42 = load i32, ptr %var_41
    ret i32 0
}
define void @print_19(ptr sret(i32) %var_22, {  } %var_23, i32 %var_24) {
  entry25: 
    call void @printf(i8* @const_26, i32 %var_24)
    store i32 %var_24, ptr %var_22
    ret void
}
declare i32 @printf(i8*, ...)
"
`;

exports[`structured programming compilation > block > stderr 1`] = `[]`;

exports[`structured programming compilation > block > stdout 1`] = `
[
  "456",
]
`;

exports[`structured programming compilation > block variable assingment > compiled 1`] = `
"@const_31 = constant [3 x i8] c"%i\\00"
@const_36 = constant i32 123
@const_38 = constant i32 1
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_25 = alloca {  }
    %var_26 = load {  }, ptr %var_25
    store {  } %var_26, ptr %var_25
    %var_32 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_33 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_32
    %var_34 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_33, void (i32*, {  }, i32)* @print_24, 0
    %var_35 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_34, {  } %var_26, 1
    store { void (i32*, {  }, i32)*, {  } } %var_35, ptr %var_32
    %var_37 = load i32, ptr @const_36
    %var_39 = load i32, ptr @const_38
    %var_40 = add i32 %var_37, %var_39
    %var_41 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_35, 0
    %var_42 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_35, 1
    %var_43 = alloca i32
    call void %var_41(i32* %var_43, {  } %var_42, i32 %var_40)
    %var_44 = load i32, ptr %var_43
    ret i32 0
}
define void @print_24(ptr sret(i32) %var_27, {  } %var_28, i32 %var_29) {
  entry30: 
    call void @printf(i8* @const_31, i32 %var_29)
    store i32 %var_29, ptr %var_27
    ret void
}
declare i32 @printf(i8*, ...)
"
`;

exports[`structured programming compilation > block variable assingment > stderr 1`] = `[]`;

exports[`structured programming compilation > block variable assingment > stdout 1`] = `
[
  "124",
]
`;

exports[`structured programming compilation > block variable declaration > compiled 1`] = `
"@const_26 = constant [3 x i8] c"%i\\00"
@const_31 = constant i32 123
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_20 = alloca {  }
    %var_21 = load {  }, ptr %var_20
    store {  } %var_21, ptr %var_20
    %var_27 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_28 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_27
    %var_29 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_28, void (i32*, {  }, i32)* @print_19, 0
    %var_30 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_29, {  } %var_21, 1
    store { void (i32*, {  }, i32)*, {  } } %var_30, ptr %var_27
    %var_32 = load i32, ptr @const_31
    %var_33 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_30, 0
    %var_34 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_30, 1
    %var_35 = alloca i32
    call void %var_33(i32* %var_35, {  } %var_34, i32 %var_32)
    %var_36 = load i32, ptr %var_35
    ret i32 0
}
define void @print_19(ptr sret(i32) %var_22, {  } %var_23, i32 %var_24) {
  entry25: 
    call void @printf(i8* @const_26, i32 %var_24)
    store i32 %var_24, ptr %var_22
    ret void
}
declare i32 @printf(i8*, ...)
"
`;

exports[`structured programming compilation > block variable declaration > stderr 1`] = `[]`;

exports[`structured programming compilation > block variable declaration > stdout 1`] = `
[
  "123",
]
`;

exports[`structured programming compilation > block variable shadowing > compiled 1`] = `
"@const_29 = constant [3 x i8] c"%i\\00"
@const_34 = constant i32 123
@const_36 = constant i32 234
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_23 = alloca {  }
    %var_24 = load {  }, ptr %var_23
    store {  } %var_24, ptr %var_23
    %var_30 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_31 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_30
    %var_32 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_31, void (i32*, {  }, i32)* @print_22, 0
    %var_33 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_32, {  } %var_24, 1
    store { void (i32*, {  }, i32)*, {  } } %var_33, ptr %var_30
    %var_35 = load i32, ptr @const_34
    %var_37 = load i32, ptr @const_36
    %var_38 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_33, 0
    %var_39 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_33, 1
    %var_40 = alloca i32
    call void %var_38(i32* %var_40, {  } %var_39, i32 %var_37)
    %var_41 = load i32, ptr %var_40
    ret i32 0
}
define void @print_22(ptr sret(i32) %var_25, {  } %var_26, i32 %var_27) {
  entry28: 
    call void @printf(i8* @const_29, i32 %var_27)
    store i32 %var_27, ptr %var_25
    ret void
}
declare i32 @printf(i8*, ...)
"
`;

exports[`structured programming compilation > block variable shadowing > stderr 1`] = `[]`;

exports[`structured programming compilation > block variable shadowing > stdout 1`] = `
[
  "234",
]
`;

exports[`structured programming compilation > hello world twice > compiled 1`] = `
"@const_24 = constant [3 x i8] c"%s\\00"
@const_29 = constant [13 x i8] c"hello world!\\00"
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_18 = alloca {  }
    %var_19 = load {  }, ptr %var_18
    store {  } %var_19, ptr %var_18
    %var_25 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_26 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_25
    %var_27 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_26, void (i8**, {  }, i8*)* @print_17, 0
    %var_28 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_27, {  } %var_19, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_28, ptr %var_25
    %var_30 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_28, 0
    %var_31 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_28, 1
    %var_32 = alloca i8*
    call void %var_30(i8** %var_32, {  } %var_31, i8* @const_29)
    %var_33 = load i8*, ptr %var_32
    %var_35 = alloca {  }
    %var_36 = load {  }, ptr %var_35
    store {  } %var_36, ptr %var_35
    %var_41 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_42 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_41
    %var_43 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_42, void (i8**, {  }, i8*)* @print_34, 0
    %var_44 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_43, {  } %var_36, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_44, ptr %var_41
    %var_45 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_44, 0
    %var_46 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_44, 1
    %var_47 = alloca i8*
    call void %var_45(i8** %var_47, {  } %var_46, i8* @const_29)
    %var_48 = load i8*, ptr %var_47
    ret i32 0
}
define void @print_17(ptr sret(i8*) %var_20, {  } %var_21, i8* %var_22) {
  entry23: 
    call void @printf(i8* @const_24, i8* %var_22)
    store i8* %var_22, ptr %var_20
    ret void
}
declare i32 @printf(i8*, ...)
define void @print_34(ptr sret(i8*) %var_37, {  } %var_38, i8* %var_39) {
  entry40: 
    call void @printf(i8* @const_24, i8* %var_39)
    store i8* %var_39, ptr %var_37
    ret void
}
"
`;

exports[`structured programming compilation > hello world twice > stderr 1`] = `[]`;

exports[`structured programming compilation > hello world twice > stdout 1`] = `
[
  "hello world!hello world!",
]
`;

exports[`structured programming compilation > if-then > compiled 1`] = `
"@const_25 = constant [3 x i8] c"%i\\00"
@const_30 = constant i1 1
@const_34 = constant i32 123
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_19 = alloca {  }
    %var_20 = load {  }, ptr %var_19
    store {  } %var_20, ptr %var_19
    %var_26 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_27 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_26
    %var_28 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_27, void (i32*, {  }, i32)* @print_18, 0
    %var_29 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_28, {  } %var_20, 1
    store { void (i32*, {  }, i32)*, {  } } %var_29, ptr %var_26
    %var_31 = load i1, ptr @const_30
    br i1 %var_31, label %then33, label %if_rest32
  then33: 
    %var_35 = load i32, ptr @const_34
    br label %if_rest32
  if_rest32: 
    %var_36 = phi i32 [%var_35, %then33], [undef, %main]
    %var_37 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_29, 0
    %var_38 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_29, 1
    %var_39 = alloca i32
    call void %var_37(i32* %var_39, {  } %var_38, i32 %var_36)
    %var_40 = load i32, ptr %var_39
    ret i32 0
}
define void @print_18(ptr sret(i32) %var_21, {  } %var_22, i32 %var_23) {
  entry24: 
    call void @printf(i8* @const_25, i32 %var_23)
    store i32 %var_23, ptr %var_21
    ret void
}
declare i32 @printf(i8*, ...)
"
`;

exports[`structured programming compilation > if-then > stderr 1`] = `[]`;

exports[`structured programming compilation > if-then > stdout 1`] = `
[
  "123",
]
`;

exports[`structured programming compilation > if-then-else > compiled 1`] = `
"@const_28 = constant [3 x i8] c"%i\\00"
@const_33 = constant i1 0
@const_37 = constant i32 123
@const_40 = constant i32 456
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_22 = alloca {  }
    %var_23 = load {  }, ptr %var_22
    store {  } %var_23, ptr %var_22
    %var_29 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_30 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_29
    %var_31 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_30, void (i32*, {  }, i32)* @print_21, 0
    %var_32 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_31, {  } %var_23, 1
    store { void (i32*, {  }, i32)*, {  } } %var_32, ptr %var_29
    %var_34 = load i1, ptr @const_33
    br i1 %var_34, label %then36, label %else39
  then36: 
    %var_38 = load i32, ptr @const_37
    br label %if_rest35
  else39: 
    %var_41 = load i32, ptr @const_40
    br label %if_rest35
  if_rest35: 
    %var_42 = phi i32 [%var_38, %then36], [%var_41, %else39]
    %var_43 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_32, 0
    %var_44 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_32, 1
    %var_45 = alloca i32
    call void %var_43(i32* %var_45, {  } %var_44, i32 %var_42)
    %var_46 = load i32, ptr %var_45
    ret i32 0
}
define void @print_21(ptr sret(i32) %var_24, {  } %var_25, i32 %var_26) {
  entry27: 
    call void @printf(i8* @const_28, i32 %var_26)
    store i32 %var_26, ptr %var_24
    ret void
}
declare i32 @printf(i8*, ...)
"
`;

exports[`structured programming compilation > if-then-else > stderr 1`] = `[]`;

exports[`structured programming compilation > if-then-else > stdout 1`] = `
[
  "456",
]
`;

exports[`structured programming compilation > sequence > compiled 1`] = `
"@const_25 = constant [3 x i8] c"%i\\00"
@const_30 = constant i32 123
@const_32 = constant i32 234
@const_34 = constant i32 345
@const_36 = constant i32 456
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_19 = alloca {  }
    %var_20 = load {  }, ptr %var_19
    store {  } %var_20, ptr %var_19
    %var_26 = alloca { void (i32*, {  }, i32)*, {  } }
    %var_27 = load { void (i32*, {  }, i32)*, {  } }, ptr %var_26
    %var_28 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_27, void (i32*, {  }, i32)* @print_18, 0
    %var_29 = insertvalue { void (i32*, {  }, i32)*, {  } } %var_28, {  } %var_20, 1
    store { void (i32*, {  }, i32)*, {  } } %var_29, ptr %var_26
    %var_31 = load i32, ptr @const_30
    %var_33 = load i32, ptr @const_32
    %var_35 = load i32, ptr @const_34
    %var_37 = load i32, ptr @const_36
    %var_38 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_29, 0
    %var_39 = extractvalue { void (i32*, {  }, i32)*, {  } } %var_29, 1
    %var_40 = alloca i32
    call void %var_38(i32* %var_40, {  } %var_39, i32 %var_37)
    %var_41 = load i32, ptr %var_40
    ret i32 0
}
define void @print_18(ptr sret(i32) %var_21, {  } %var_22, i32 %var_23) {
  entry24: 
    call void @printf(i8* @const_25, i32 %var_23)
    store i32 %var_23, ptr %var_21
    ret void
}
declare i32 @printf(i8*, ...)
"
`;

exports[`structured programming compilation > sequence > stderr 1`] = `[]`;

exports[`structured programming compilation > sequence > stdout 1`] = `
[
  "456",
]
`;

exports[`structured programming compilation > two prints > compiled 1`] = `
"@const_24 = constant [3 x i8] c"%s\\00"
@const_29 = constant [13 x i8] c"hello world!\\00"
@const_45 = constant [15 x i8] c"hello world 2!\\00"
@symbols_metadata_array = constant [0 x { i8* }] []
@symbols_metadata = constant ptr @symbols_metadata_array
define i32 @main() {
  main: 
    %var_18 = alloca {  }
    %var_19 = load {  }, ptr %var_18
    store {  } %var_19, ptr %var_18
    %var_25 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_26 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_25
    %var_27 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_26, void (i8**, {  }, i8*)* @print_17, 0
    %var_28 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_27, {  } %var_19, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_28, ptr %var_25
    %var_30 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_28, 0
    %var_31 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_28, 1
    %var_32 = alloca i8*
    call void %var_30(i8** %var_32, {  } %var_31, i8* @const_29)
    %var_33 = load i8*, ptr %var_32
    %var_35 = alloca {  }
    %var_36 = load {  }, ptr %var_35
    store {  } %var_36, ptr %var_35
    %var_41 = alloca { void (i8**, {  }, i8*)*, {  } }
    %var_42 = load { void (i8**, {  }, i8*)*, {  } }, ptr %var_41
    %var_43 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_42, void (i8**, {  }, i8*)* @print_34, 0
    %var_44 = insertvalue { void (i8**, {  }, i8*)*, {  } } %var_43, {  } %var_36, 1
    store { void (i8**, {  }, i8*)*, {  } } %var_44, ptr %var_41
    %var_46 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_44, 0
    %var_47 = extractvalue { void (i8**, {  }, i8*)*, {  } } %var_44, 1
    %var_48 = alloca i8*
    call void %var_46(i8** %var_48, {  } %var_47, i8* @const_45)
    %var_49 = load i8*, ptr %var_48
    ret i32 0
}
define void @print_17(ptr sret(i8*) %var_20, {  } %var_21, i8* %var_22) {
  entry23: 
    call void @printf(i8* @const_24, i8* %var_22)
    store i8* %var_22, ptr %var_20
    ret void
}
declare i32 @printf(i8*, ...)
define void @print_34(ptr sret(i8*) %var_37, {  } %var_38, i8* %var_39) {
  entry40: 
    call void @printf(i8* @const_24, i8* %var_39)
    store i8* %var_39, ptr %var_37
    ret void
}
"
`;

exports[`structured programming compilation > two prints > stderr 1`] = `[]`;

exports[`structured programming compilation > two prints > stdout 1`] = `
[
  "hello world!hello world 2!",
]
`;
