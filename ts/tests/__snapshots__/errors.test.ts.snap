// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`literal inside unclosed brace inside indexing > ast 1`] = `
{
  "children": [
    {
      "children": [
        {
          "children": [],
          "data": {
            "value": "x",
          },
          "type": "name",
        },
        {
          "children": [
            {
              "children": [],
              "data": {
                "value": 1,
              },
              "type": "number",
            },
          ],
          "data": {},
          "type": "block",
        },
      ],
      "data": {},
      "type": "index",
    },
  ],
  "data": {},
  "type": "script",
}
`;

exports[`literal inside unclosed brace inside indexing > errors 1`] = `[]`;

exports[`literal inside unclosed brace inside indexing > token errors 1`] = `
[
  {
    "labels": [
      {
        "end": 6,
        "kind": "primary",
        "message": "must be closed with "}" by that point",
        "start": 6,
      },
      {
        "end": 3,
        "kind": "primary",
        "message": "opening token "{" here",
        "start": 2,
      },
    ],
    "message": "Missing closing token",
    "notes": [],
    "type": "MISSING_TOKEN",
  },
]
`;

exports[`literal inside unclosed brace inside parens > ast 1`] = `
{
  "children": [
    {
      "children": [
        {
          "children": [
            {
              "children": [],
              "data": {
                "value": 1,
              },
              "type": "number",
            },
          ],
          "data": {},
          "type": "block",
        },
      ],
      "data": {},
      "type": "parens",
    },
  ],
  "data": {},
  "type": "script",
}
`;

exports[`literal inside unclosed brace inside parens > errors 1`] = `[]`;

exports[`literal inside unclosed brace inside parens > token errors 1`] = `
[
  {
    "labels": [
      {
        "end": 5,
        "kind": "primary",
        "message": "must be closed with "}" by that point",
        "start": 5,
      },
      {
        "end": 2,
        "kind": "primary",
        "message": "opening token "{" here",
        "start": 1,
      },
    ],
    "message": "Missing closing token",
    "notes": [],
    "type": "MISSING_TOKEN",
  },
]
`;

exports[`literal inside unclosed parens inside braces > ast 1`] = `
{
  "children": [
    {
      "children": [
        {
          "children": [
            {
              "children": [],
              "data": {
                "value": 1,
              },
              "type": "number",
            },
          ],
          "data": {},
          "type": "parens",
        },
      ],
      "data": {},
      "type": "block",
    },
  ],
  "data": {},
  "type": "script",
}
`;

exports[`literal inside unclosed parens inside braces > errors 1`] = `[]`;

exports[`literal inside unclosed parens inside braces > token errors 1`] = `
[
  {
    "labels": [
      {
        "end": 5,
        "kind": "primary",
        "message": "must be closed with ")" by that point",
        "start": 5,
      },
      {
        "end": 3,
        "kind": "primary",
        "message": "opening token "(" here",
        "start": 2,
      },
    ],
    "message": "Missing closing token",
    "notes": [],
    "type": "MISSING_TOKEN",
  },
]
`;

exports[`single closing brace > ast 1`] = `
{
  "children": [],
  "data": {},
  "type": "script",
}
`;

exports[`single closing brace > errors 1`] = `[]`;

exports[`single closing brace > token errors 1`] = `
[
  {
    "labels": [
      {
        "end": 1,
        "kind": "primary",
        "message": "unexpected closing token",
        "start": 0,
      },
    ],
    "message": "Unexpected closing token "}"",
    "notes": [],
    "type": "MISSING_TOKEN",
  },
]
`;

exports[`single closing bracket > ast 1`] = `
{
  "children": [],
  "data": {},
  "type": "script",
}
`;

exports[`single closing bracket > errors 1`] = `[]`;

exports[`single closing bracket > token errors 1`] = `
[
  {
    "labels": [
      {
        "end": 1,
        "kind": "primary",
        "message": "unexpected closing token",
        "start": 0,
      },
    ],
    "message": "Unexpected closing token "]"",
    "notes": [],
    "type": "MISSING_TOKEN",
  },
]
`;

exports[`single closing parens > ast 1`] = `
{
  "children": [],
  "data": {},
  "type": "script",
}
`;

exports[`single closing parens > errors 1`] = `[]`;

exports[`single closing parens > token errors 1`] = `
[
  {
    "labels": [
      {
        "end": 1,
        "kind": "primary",
        "message": "unexpected closing token",
        "start": 0,
      },
    ],
    "message": "Unexpected closing token ")"",
    "notes": [],
    "type": "MISSING_TOKEN",
  },
]
`;

exports[`single open brace > ast 1`] = `
{
  "children": [
    {
      "children": [
        {
          "children": [],
          "data": {},
          "type": "implicit_placeholder",
        },
      ],
      "data": {},
      "type": "block",
    },
  ],
  "data": {},
  "type": "script",
}
`;

exports[`single open brace > errors 1`] = `[]`;

exports[`single open brace > token errors 1`] = `
[
  {
    "labels": [
      {
        "end": 1,
        "kind": "primary",
        "message": "must be closed with "}" by that point",
        "start": 1,
      },
      {
        "end": 1,
        "kind": "primary",
        "message": "opening token "{" here",
        "start": 0,
      },
    ],
    "message": "Missing closing token",
    "notes": [],
    "type": "MISSING_TOKEN",
  },
]
`;

exports[`single open bracket > ast 1`] = `
{
  "children": [
    {
      "children": [
        {
          "children": [],
          "data": {},
          "type": "implicit_placeholder",
        },
      ],
      "data": {},
      "type": "square_brackets",
    },
  ],
  "data": {},
  "type": "script",
}
`;

exports[`single open bracket > errors 1`] = `[]`;

exports[`single open bracket > token errors 1`] = `
[
  {
    "labels": [
      {
        "end": 1,
        "kind": "primary",
        "message": "must be closed with "]" by that point",
        "start": 1,
      },
      {
        "end": 1,
        "kind": "primary",
        "message": "opening token "[" here",
        "start": 0,
      },
    ],
    "message": "Missing closing token",
    "notes": [],
    "type": "MISSING_TOKEN",
  },
]
`;

exports[`single open parens > ast 1`] = `
{
  "children": [
    {
      "children": [
        {
          "children": [],
          "data": {},
          "type": "implicit_placeholder",
        },
      ],
      "data": {},
      "type": "parens",
    },
  ],
  "data": {},
  "type": "script",
}
`;

exports[`single open parens > errors 1`] = `[]`;

exports[`single open parens > token errors 1`] = `
[
  {
    "labels": [
      {
        "end": 1,
        "kind": "primary",
        "message": "must be closed with ")" by that point",
        "start": 1,
      },
      {
        "end": 1,
        "kind": "primary",
        "message": "opening token "(" here",
        "start": 0,
      },
    ],
    "message": "Missing closing token",
    "notes": [],
    "type": "MISSING_TOKEN",
  },
]
`;

exports[`single open parens with number > ast 1`] = `
{
  "children": [
    {
      "children": [
        {
          "children": [],
          "data": {
            "value": 1,
          },
          "type": "number",
        },
      ],
      "data": {},
      "type": "parens",
    },
  ],
  "data": {},
  "type": "script",
}
`;

exports[`single open parens with number > errors 1`] = `[]`;

exports[`single open parens with number > token errors 1`] = `
[
  {
    "labels": [
      {
        "end": 2,
        "kind": "primary",
        "message": "must be closed with ")" by that point",
        "start": 2,
      },
      {
        "end": 1,
        "kind": "primary",
        "message": "opening token "(" here",
        "start": 0,
      },
    ],
    "message": "Missing closing token",
    "notes": [],
    "type": "MISSING_TOKEN",
  },
]
`;

exports[`unclosed indexing inside braces > ast 1`] = `
{
  "children": [
    {
      "children": [
        {
          "children": [
            {
              "children": [],
              "data": {
                "value": "x",
              },
              "type": "name",
            },
            {
              "children": [],
              "data": {
                "value": 1,
              },
              "type": "number",
            },
          ],
          "data": {},
          "type": "index",
        },
      ],
      "data": {},
      "type": "block",
    },
  ],
  "data": {},
  "type": "script",
}
`;

exports[`unclosed indexing inside braces > errors 1`] = `[]`;

exports[`unclosed indexing inside braces > token errors 1`] = `
[
  {
    "labels": [
      {
        "end": 6,
        "kind": "primary",
        "message": "must be closed with "]" by that point",
        "start": 6,
      },
      {
        "end": 4,
        "kind": "primary",
        "message": "opening token "[" here",
        "start": 3,
      },
    ],
    "message": "Missing closing token",
    "notes": [],
    "type": "MISSING_TOKEN",
  },
]
`;

exports[`unclosed indexing inside parens > ast 1`] = `
{
  "children": [
    {
      "children": [
        {
          "children": [
            {
              "children": [],
              "data": {
                "value": "x",
              },
              "type": "name",
            },
            {
              "children": [],
              "data": {
                "value": 1,
              },
              "type": "number",
            },
          ],
          "data": {},
          "type": "index",
        },
      ],
      "data": {},
      "type": "parens",
    },
  ],
  "data": {},
  "type": "script",
}
`;

exports[`unclosed indexing inside parens > errors 1`] = `[]`;

exports[`unclosed indexing inside parens > token errors 1`] = `
[
  {
    "labels": [
      {
        "end": 5,
        "kind": "primary",
        "message": "must be closed with "]" by that point",
        "start": 5,
      },
      {
        "end": 3,
        "kind": "primary",
        "message": "opening token "[" here",
        "start": 2,
      },
    ],
    "message": "Missing closing token",
    "notes": [],
    "type": "MISSING_TOKEN",
  },
]
`;

exports[`unclosed parens inside indexing > ast 1`] = `
{
  "children": [
    {
      "children": [
        {
          "children": [],
          "data": {
            "value": "x",
          },
          "type": "name",
        },
        {
          "children": [
            {
              "children": [],
              "data": {
                "value": 1,
              },
              "type": "number",
            },
          ],
          "data": {},
          "type": "parens",
        },
      ],
      "data": {},
      "type": "index",
    },
  ],
  "data": {},
  "type": "script",
}
`;

exports[`unclosed parens inside indexing > errors 1`] = `[]`;

exports[`unclosed parens inside indexing > token errors 1`] = `
[
  {
    "labels": [
      {
        "end": 4,
        "kind": "primary",
        "message": "must be closed with ")" by that point",
        "start": 4,
      },
      {
        "end": 3,
        "kind": "primary",
        "message": "opening token "(" here",
        "start": 2,
      },
    ],
    "message": "Missing closing token",
    "notes": [],
    "type": "MISSING_TOKEN",
  },
]
`;

exports[`unclosed string newline > ast 1`] = `
{
  "children": [
    {
      "children": [],
      "data": {
        "value": "uwu",
      },
      "type": "string",
    },
    {
      "children": [],
      "data": {
        "value": 1,
      },
      "type": "number",
    },
  ],
  "data": {},
  "type": "script",
}
`;

exports[`unclosed string newline > errors 1`] = `[]`;

exports[`unclosed string newline > token errors 1`] = `
[
  {
    "labels": [
      {
        "end": 4,
        "kind": "primary",
        "message": "expected closing double quote",
        "start": 4,
      },
    ],
    "message": "Unterminated string literal",
    "notes": [
      "Strings must be enclosed in double quotes (")",
      "Use \\ to escape special characters",
    ],
    "type": "UNTERMINATED_STRING",
  },
]
`;

exports[`unclosed string template > ast 1`] = `
{
  "children": [
    {
      "children": [
        {
          "children": [],
          "data": {
            "value": "uwu",
          },
          "type": "string",
        },
        {
          "children": [],
          "data": {
            "value": 1,
          },
          "type": "number",
        },
      ],
      "data": {},
      "type": "template",
    },
  ],
  "data": {},
  "type": "script",
}
`;

exports[`unclosed string template > errors 1`] = `[]`;

exports[`unclosed string template > token errors 1`] = `
[
  {
    "labels": [
      {
        "end": 9,
        "kind": "primary",
        "message": "must be closed with ")" by that point",
        "start": 9,
      },
      {
        "end": 6,
        "kind": "primary",
        "message": "opening token "\\(" here",
        "start": 4,
      },
    ],
    "message": "Missing closing token",
    "notes": [],
    "type": "MISSING_TOKEN",
  },
  {
    "labels": [
      {
        "end": 9,
        "kind": "primary",
        "message": "expected closing double quote",
        "start": 9,
      },
    ],
    "message": "Unterminated string literal",
    "notes": [
      "Strings must be enclosed in double quotes (")",
      "Use \\ to escape special characters",
    ],
    "type": "UNTERMINATED_STRING",
  },
]
`;
