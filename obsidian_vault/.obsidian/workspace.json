{
  "main": {
    "id": "698c8ddc71151d96",
    "type": "split",
    "children": [
      {
        "id": "7866645e96d332c9",
        "type": "tabs",
        "children": [
          {
            "id": "43ac4cdb417e30de",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Language/Syntax/Literal.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "b9189e8a8caac797",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Lambda Calculus/Type theory/Co-inductive types.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ],
        "currentTab": 1
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "ca71d8cce737da51",
    "type": "split",
    "children": [
      {
        "id": "5f3e13ecfe2b17ae",
        "type": "tabs",
        "children": [
          {
            "id": "7f81c61054560864",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "c1bdbb4e57c4cdcd",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "deec98b075365105",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300
  },
  "right": {
    "id": "b5b8367a9383ff56",
    "type": "split",
    "children": [
      {
        "id": "e6f013ece55da4ab",
        "type": "tabs",
        "children": [
          {
            "id": "ffcf2246ded521fe",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "fe366a95c58b2025",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "Lambda Calculus/Type theory/Co-inductive types.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "5eb13530626a29dc",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "Lambda Calculus/Type theory/Co-inductive types.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "806901be4113a513",
            "type": "leaf",
            "state": {
              "type": "all-properties",
              "state": {
                "sortOrder": "frequency",
                "showSearch": false,
                "searchQuery": ""
              }
            }
          },
          {
            "id": "7390caf6ca337f41",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "Lambda Calculus/Type theory/Co-inductive types.md"
              }
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "daily-notes:Open today's daily note": false,
      "templates:Insert template": false,
      "command-palette:Open command palette": false,
      "obsidian42-brat:BRAT": false,
      "bmo-chatbot:Chatbot (Clear Conversation)": false
    }
  },
  "active": "b9189e8a8caac797",
  "lastOpenFiles": [
    "Lambda Calculus/Type theory/Algebraic types.md",
    "Lambda Calculus/Type theory/Inductive types.md",
    "Lambda Calculus/Type theory/Modal types.md",
    "Lambda Calculus/Type theory/Nominal types.md",
    "Lambda Calculus/Type theory/Co-inductive types.md",
    "Language/Syntax/Literal.md",
    "Lambda Calculus/Type theory/Abstract types.md",
    "Language/Syntax/Syntax.md",
    "Language/Syntax/Pattern expression.md",
    "Language/Syntax/Expression.md",
    "Language/Syntax/Declaration.md",
    "Language/Syntax/Type expression.md",
    "Language/Syntax/Template expression.md",
    "Principles/Code organization.md",
    "Principles/Design patterns.md",
    "Principles/Language design.md",
    "Principles/Leaky abstraction.md",
    "Language/Programming Language.md",
    "Parsing/Syntax.md",
    "Untitled.md",
    "Language/Language Manager.md",
    "Language/Analysis/Intermediate Representation.md",
    "Language/Composites.md",
    "Language/Compiler Backend.md",
    "Language/Analysis/Scope.md",
    "Language/Testing.md",
    "Language/Analysis",
    "Language/Syntax",
    "Principles",
    "chrome_MDKK1pYBB9_1693548495.png",
    "Virtual Machine",
    "Lambda Calculus",
    "Getting Started",
    "chrome_rmkcBFAW1x_1693548108.png",
    "Push",
    "rest",
    "Untitled.canvas"
  ]
}